[{"content":"You\u0026rsquo;ve got some existing code and you might want to make it faster. How hard is it to make it faster? How do you go about it? What tools do you need? Is it even worth doing?\nThis post talks through the process of optimizing existing code; to walk through an illustrated example, see \u0026ldquo;Parse 50M DateTimes a second in C#\u0026rdquo;.\nTL;DR It\u0026rsquo;s easier than you\u0026rsquo;d think Make sure optimizing this code will matter (save money, delight users, etc) Define a performance goal (faster than 100ms won\u0026rsquo;t matter anymore) Isolate the code to optimize in a realistic, scalable sample (ideally running in around 10 seconds initially) Get a sampling profiler and profile the sample. Make changes, measure, and repeat. Keep changes that help. Discard changes that don\u0026rsquo;t, but keep notes about what you\u0026rsquo;ve tried. Consider options for cheating to be faster. Solve once and cache the answer. Solve a similar, simpler problem instead. Use a different algorithm. Solve the broader problem with different inputs and outputs. Verify your gains in the real, full codebase. Add a test to protect your performance gains. It\u0026rsquo;s Easier Than You\u0026rsquo;d Think If you haven\u0026rsquo;t optimized code before with a sampling profiler, write some simple code and try it. With modern tools you can profile your code, find bottlenecks, and fix them and retest in just a minute or two once you know how.\nIf you write hundreds of lines of code, you know it will have functional bugs to find, and that you\u0026rsquo;re not done until you\u0026rsquo;ve tested it. In the same way, any decent body of code will have performance bugs, and it\u0026rsquo;s common to have some which are severe and also very simple to fix, but if you never run under a profiler, you just don\u0026rsquo;t see them.\nSignificant performance tuning only makes sense in certain circumstances, but I think almost all code is worth a quick look at performance. I\u0026rsquo;m sure many of the things I wait for my computer to finish today are the result of performance bugs that would be easy to fix and just were never found.\nIf you need an example, consider the Grand Theft Auto Online bug where parsing a 10MB JSON file was adding four minutes to the game startup time.\nWhen Optimizing Matters Code written with good functional quality and maintainability will often be fast enough on modern computers as-is. If so, great. In some cases, however, making code faster can really matter.\nObviously, time spent optimizing code can look like time wasted - it\u0026rsquo;s not adding more functionality or fixing bugs. It\u0026rsquo;s important to make sure that better performance will matter, and that your team (or your client) agrees that it\u0026rsquo;s worth doing.\nCode is often worth optimizing when:\nIt\u0026rsquo;s expensive to run. Does it dominate your cloud bills? Does it need an expensive machine configuration to run at all? Will many humans run it often and wait for it to finish? It can be used in new ways if it is much faster. Tests that take an hour are run before merging code; tests in one minute are run before local commits; tests in one second can run as you code. Queries that take minutes can be used for reporting. Queries in one second can be explored to understand unexpected results and find insights. Speech-to-text transcription can be live subtitles if fast enough, but only within a second or so. It has clear external performance needs. Games need to run at 30 fps (at least) to feel immersive and smooth. Payment at subway turnstiles has to be fast enough for people to run through them. Telemetry to detect downtime must alert you quickly - an hour later will significantly hurt availability. It will often fail and need to be re-run repeatedly. Compilers that stop on different errors until everything is fixed. Data Processing that aborts on bad data. Network communication on unreliable networks. Define a Performance Goal Optimizing performance is like deciding when to ship a product - it\u0026rsquo;s hard to decide when you are \u0026ldquo;done\u0026rdquo; and it\u0026rsquo;s time to stop. Spending a few minutes defining what performance is \u0026ldquo;good enough\u0026rdquo; (or where faster won\u0026rsquo;t matter anymore) is really helpful in telling you when you can stop optimizing. Performance changes often make code more complicated or harder to maintain. If you have a performance goal, you can include the combination of changes which get you to the goal with the least impact to clarity and maintainability.\nIf you have an external goal (30 fps gameplay, turnstile payment in under 500 ms) you have a ready-made goal. If your code is a bottleneck in a larger system, \u0026ldquo;good enough\u0026rdquo; is usually when your component takes about the same amount of time as the next largest component. If your code is the highest line item on the cloud bill, getting it down to third or fourth place is very meaningful, but improvements beyond that will matter much less. If you are interacting with humans, a response in under one second or so feels \u0026ldquo;very responsive\u0026rdquo; to humans for interactions (clicking a button) and under 100 ms or so feels \u0026ldquo;instant\u0026rdquo; as they are typing.\nOccasionally the goal is \u0026ldquo;as fast as possible\u0026rdquo;, like when you\u0026rsquo;re trying to maximize the scalability of your solution or your team will pay by use and would have many more uses if it was inexpensive enough. In those cases, you can sometimes establish a goal by finding a lower level bottleneck beyond which you can\u0026rsquo;t improve. For example, if you\u0026rsquo;re parsing CSV files and your storage read speed is 6 GB/s, you probably don\u0026rsquo;t need to figure out how to parse any faster than that.\nBuild a Realistic, Scalable Sample Performance tuning is a very, very iterative process. You measure, make a change, measure again, and revert or keep the change. There can easily be dozens of alternatives for a single operation (even dozens of overloads of a single function), and combinations of changes can often interact with each other. If you have a fast, smooth process for measuring the results, you can try many more variations and get much more potential improvement in a given amount of time.\nIdeally, I try to isolate the code to optimize in a console application and scale my input data so that the code completes in about ten seconds. That\u0026rsquo;s quick to iterate on, but also enough runtime to get reliable measurements even after I\u0026rsquo;ve optimized the code down somewhat.\nIt\u0026rsquo;s very important that the code remain realistic, because it\u0026rsquo;s easy to get performance gains that don\u0026rsquo;t actually work at all in the real environment. If your code reads from a database, you want the sample to read from a comparable database. If you interact with the network or disk, try to keep network and disk interaction in the code, and try to optimize on a computer as similar to the real production environment as possible.\nAs you improve the code, it will (hopefully) get drastically faster, so you need to be able to scale up the data size to continue getting reliable measurements. You can either identify realistic subsets of the data at different scales, or generate synthetic data that can quickly be re-created at different sizes. In either case, try to make sure the code still runs the same way it does with your real data.\nIf you\u0026rsquo;re not sure if your scaled data is realistic, you can run the profiler on real data once (even if it takes a long time) and compare the profiler output to your sample data to make sure roughly the same amount of time is spent in different functions.\nMake sure to profile release code with optimizations. It\u0026rsquo;s very common for the bottlenecks in Debug and Release code to be totally different. Optimize the same builds you will use in production.\nMeasure with a Sampling Profiler I almost always optimize code with a sampling CPU profiler. A sampling profiler captures the current call stack in your code many times per second. Sampling profilers don\u0026rsquo;t have to change your code (\u0026ldquo;instrumenting\u0026rdquo; profilers do), so sampling profilers are usually easier to get working and are running your code more like it is in production. Profilers can measure memory use, allocations, thread context switches, and other things, but generally just measuring CPU time is enough to identify your bottleneck, even if it is memory or contention related.\nOnce you have your isolated sample, run it under a sampling profiler to get measurements. In the world of C# and Visual Studio, there is a built in performance profiler (Debug -\u0026gt; Performance Profiler\u0026hellip;) which works nicely. If you have to find a profiler for your environment, look for one that is easy to run (you\u0026rsquo;ll be doing so often) and that produces easy to read output. I really like the \u0026ldquo;top functions\u0026rdquo; and \u0026ldquo;hot path\u0026rdquo; reporting from the Visual Studio Profiler. These two views allow you to see the lowest level operation taking the most time (string splitting) and go through the call hierarchy to see where (Analyze -\u0026gt; ReadRow -\u0026gt; ReadCells).\nMeasure, Tweak, Repeat Once you have your sample and profiler ready, run your code and look at the report. The initial report will often surprise you, with the majority of runtime spent on something you didn\u0026rsquo;t expect. In the same way that it\u0026rsquo;s hard to write hundreds of lines of code with no serious functional bugs, it\u0026rsquo;s hard to write a lot of code with no serious performance bugs. Since we often don\u0026rsquo;t performance test code at all for a long time, there are often really, really easy fixes which can make an enormous initial difference.\nFor example, you might find out that accessing a property on an object (say FileStream.Length) is causing computation every time, and since you don\u0026rsquo;t expect the value to change, you can just move it outside of a loop and find significant performance gains.\nOnce you find a bottleneck, try out alternatives. Do other overloads of the function work better? (Do they skip some unneeded work?) Is there a way to do just the work you want more directly? Can you reuse work from a previous step to avoid doing it repeatedly? Are there related classes you could use instead which might be faster? Could you do the work in different batch sizes?\nWith each single change, run the code again and write down the situation (FileStream.Length before loop) and the runtime (5,750 ms) somewhere. You will keep the changes that help and discard the changes that don\u0026rsquo;t, so you need to keep track of what you\u0026rsquo;ve tried as you go.\nIf you don\u0026rsquo;t see anything in the code which should have a significant runtime, look for surprise allocations or conversions. For example, in C#, if you pass a struct to a function that takes that argument as an interface type, C# has to make a System.Object wrapper around the struct to pass for every call. (Can you make a version of the function which takes the concrete struct type directly?) If you pass arguments to a function which takes any number of arguments as a params array, C# must allocate an array to hold them. Can you make a version which takes an exact number of arguments directly?\nIf you can, it\u0026rsquo;s very helpful to get the debugging symbols and source code for libraries you\u0026rsquo;re using, as stepping into them in the debugger can help you understand why the runtime is longer than you expect.\nFinally, if you have no idea why a function is expensive and whether there are cheaper alternatives, try searching online. (\u0026ldquo;DateTime.Parse slow; fastest DateTime parsing C#\u0026rdquo;). It\u0026rsquo;s quite possible others have tried to optimize similar code and can help point you in the right direction.\nCheat to be Faster You can often make code run 2-10x faster just by eliminating surprise bottlenecks, finding faster overloads, or hand-implementing functions which do just the work you want (instead of calling built-in functions designed for many more cases). If those \u0026ldquo;easier gains\u0026rdquo; run out well below your performance goal, the next thing to consider is \u0026ldquo;cheating\u0026rdquo; - bending the requirements of the problem to drastically improve performance.\nSome dimensions of cheating to consider:\nDo It Earlier or Later Does the problem you\u0026rsquo;re solving need to be solved now? Could it be done later (after a filtering step reduces the set you have to work on, maybe)? Could it be done earlier (when you generate the data, on machines that aren\u0026rsquo;t busy, before you bring it all together)? Could it be done only if the user asks for it and be off by default?\nSolve Once and Cache Are you doing the same work repeatedly? If so, can you save your previous answer and reuse it instead? If you are retrieving data, are you often asked for the same value a few times? Can you check the last value you returned and only search if the caller wants something different? Can you just change the calling code not to ask you multiple times?\nOr, are you doing almost the same work repeatedly? If so, could you incrementally update the previous answer instead? For example, I had to write code to take a byte position in a file and map to a line and character position. I realized that the code often mapped several posititions in a given file, so rather than counting newlines from the beginning of the file every time, I saved the previous position and found line and character and just found newlines incrementally from there when possible.\nIf you\u0026rsquo;re doing an expensive conversion from one form (text) to another (binary) can you save the converted form to reuse?\nSolve a Simpler Problem Instead If you are solving a problem exactly, would an approximate solution be enough? For example, if searching for a phrase, you might be able to search for just the rarest word in the phrase alone much more quickly, and then you could post-filter the results for the whole phrase afterward.\nIf you\u0026rsquo;re looking for events that took a long time, can you rule many of them out simply (End - Start \u0026lt; Threshold) before looking in more detail?\nUse a Different Algorithm If you\u0026rsquo;re doing something for which there are well known algorithms, would another one work better for your problem? If you\u0026rsquo;re using a library to do something, are there other libraries that do it differently?\nAre you searching linearly when you could binary search? (Could your data source give you sorted data if it isn\u0026rsquo;t now?)\nUse Different Data Structures If you\u0026rsquo;re iterating over a set of values, an array is much faster than a linked list. If your collection is sorted and must stay sorted through changes, a linked list or tree will be better. If there are several common data structures you could use, consider trying a few different ones to see if any of them behave differently for your situation.\nIf you are using a resizing data structure, can you tell it how big it needs to become in advance?\nSkip Conversions If you\u0026rsquo;re converting data (numbers in text to binary numbers), do you need to do the conversions? If you\u0026rsquo;re just comparing for equality, for example, you could compare the numbers in text form instead (if the formatting was consistent). If you\u0026rsquo;re looking through text DateTimes for one day, you only need to parse the year-month-day part.\nIf you\u0026rsquo;re looking for JSON with a specific property=value, can you just string search the JSON without parsing it at all?\nUse Different Inputs and Outputs If your bottleneck is parsing a big ball of JSON from a caller, does it have to be JSON? Could you split out a few giant values into separate files which then won\u0026rsquo;t have to be parsed and decoded? Could you ask the caller to omit parts of the data you don\u0026rsquo;t even intend to use?\nIf your data is using too much space, do you really need all of it? Could you just keep a window of values? Do you need full precision or could you discard some lower-order bits?\nIf you are working with just one field from a collection of objects often, can you split out that field into a separate array by itself?\nVerify Your Gains Once you\u0026rsquo;ve finished a set of optimizations (and before you invest days or weeks into a difficult optimization) try out your changes in your real environment with your real data to confirm it works. Computers are complicated and have a whole host of optimizations and bottlenecks interacting, so sometimes improvements in your environment don\u0026rsquo;t pan out in production.\nIf you do see optimizations which work locally but not in production, try to get a more production-like environment or more production-like data. You can even iterate with a single change or two while trying to figure out how to get a properly realistic environment.\nProtect Your Gains Code changes over time, and the next person to change the code may not know what you did to optimize it. It\u0026rsquo;s a very good idea to add comments indicating that the code is performance sensitive, to identify the calls you optimized, and to call out the more normal overloads which were slower and which you removed.\nIt\u0026rsquo;s a really good idea to add a performance test to ensure the performance stays fast if you can. If your codebase doesn\u0026rsquo;t have any performance testing apparatus, you can make a unit test to try to sanity check that performance doesn\u0026rsquo;t get much worse, but it\u0026rsquo;s difficult to get right - your test will run on debug code on slower, busy computers and a randomly failing test is awful. You can try to restrict it to Release (if your unit tests are ever run in release) or sample a tiny known workload to make a relative performance goal. Another option is to have your code track work done and and make sure it\u0026rsquo;s still doing the optimal amount of work. (How many times did you ask my mock File System API for folder files for this test?)\nAnother option, if you can\u0026rsquo;t add tests, is to add some production telemetry for when performance is below goals. You might not prevent performance regressions from being checked in and deployed, but catching them quickly is much better than finding them weeks or months later.\n","permalink":"https://relentlessoptimizer.com/code/2022/08/10/how-to-performance-optimize-existing-code/","summary":"You\u0026rsquo;ve got some existing code and you might want to make it faster. How hard is it to make it faster?","title":"How to Performance Optimize Existing Code"},{"content":"I love the Visual Studio C# Performance Profiler, and am shocked to find out how many engineers around me haven\u0026rsquo;t used it before. It\u0026rsquo;s very easy to quickly check the performance of your code and you\u0026rsquo;d be amazed how often there are significant performance bottlenecks there that are very easy to fix.\nCheck out \u0026ldquo;How to Optimize Existing Code\u0026rdquo; for an overview of the process, or keep reading to walk through an example with me.\nThe Scenario Your code processes files that contain large numbers of events in a simple text format. Each line starts with a DateTime (\u0026ldquo;2022-04-14T02:32:53.4028225Z\u0026rdquo;). The files can be very large - as many as 100 million events - so that the system doesn\u0026rsquo;t have too many files to pass around and manage. You want to count the number of events in different time ranges and quickly find specific events in a time range.\nTo focus on DateTime parsing as our sole performance problem, we\u0026rsquo;ll work with files with just DateTimes in them, instead of the real log files. I\u0026rsquo;ll talk more about that at the end.\nInitial Code You start with the most common C# APIs for File Operations and Date Parsing - File.OpenText, StreamReader.ReadLine, DateTime.Parse. The DateTimes are converted to the local time zone by DateTime.Parse, which you don\u0026rsquo;t want, so you convert them back with DateTime.ToUniversalTime().\nusing (StreamReader r = File.OpenText(filePath)) { List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(); while (true) { string? line = r.ReadLine(); if (line == null) { break; } DateTime value = DateTime.Parse(line).ToUniversalTime(); results.Add(value); } return results; } You run this on a sample log with 100 million DateTimes, and it takes 69 seconds. This isn\u0026rsquo;t terrible, but you would like to be able to go through a file in just a second or two if possible. Could that be achieved?\nYou make a scaled sample of 10 million DateTimes, which takes 6.9 seconds (6.901 milliseconds) to parse, and run it under the Performance Profiler in Visual Studio (including the free Community Edition).\nIf our goal for 100 million DateTimes is two seconds, we would need to parse 10 million in 200 ms. This means our runtime is currently more than 30x slower than our goal, which might seem very difficult to achieve. Let\u0026rsquo;s see what we can do.\nProfiler Setup When profiling C#, your runtime will often be spent (ultimately) down in .NET Framework APIs, so you\u0026rsquo;ll want to know what they are doing. To make this easier, set some Tools -\u0026gt; Options to help:\nTurn on Debugging -\u0026gt; General -\u0026gt; Enable .NET Framework Stepping Turn off Debugging -\u0026gt; General -\u0026gt; Enable Just My Code Turn on Debugging -\u0026gt; Symbols -\u0026gt; Microsoft Symbol Servers Next, invoke the Profiler from Debug -\u0026gt; Performance Profiler.\nMake sure the target it set to your Console App Project and CPU Usage is enabled, then click Run. For future iterations, select Debug -\u0026gt; Relaunch Performance Profiler to re-run immediately.\nI\u0026rsquo;m running on .NET 6.0 on Windows 11 on a 2020 Lenovo IdeaPad Flex 5 (Ryzen 7 4700U, 16 GB RAM) if you\u0026rsquo;d like to put these results in context.\nSo, what does the initial code profile look like?\nInitial Code Profile On the Hot Path at the bottom, you can see Program.Original (with my test code) is 98% of the runtime. This means my data isn\u0026rsquo;t muddled by things happening before or after what I want to measure.\nThe Hot Path also shows 60% of the runtime is in DateTime.TryParse and another 21% is in ConvertTime (probably what ToUniversalTime calls). This means I could likely get a lot of speedup by finding a faster way to do the parse, and especially if I could skip the conversion to local time and then back.\nDifferent DateTime.Parse arguments First, we can pass a DateTimeStyle argument to ask .NET to keep the DateTime as Universal - DateTimeStyles.AdjustToUniversal. Does that help?\nusing (StreamReader r = File.OpenText(filePath)) { List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(); while (true) { string? line = r.ReadLine(); if (line == null) { break; } DateTime value = DateTime.Parse(line, CultureInfo.InvariantCulture, DateTimeStyles.AdjustToUniversal); results.Add(value); } return results; } The runtime goes down from 6,901 ms to 3,704 ms, about twice as fast, for a very safe change. This is a good example of a very simple change providing a substantial gain, which is quite common.\nDateTime.ParseExact? How about if we use DateTime.ParseExact to tell .NET exactly what format to expect? In this case, we\u0026rsquo;re adding a new condition - we will require the DateTimes in the log to be in a specific format, rather than any format that DateTime.Parse accepts. Our logs always have DateTimes like 2022-04-14T02:32:53.4028225Z, so we decide this is a safe restriction.\nusing (StreamReader r = File.OpenText(filePath)) { List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(); while (true) { string? line = r.ReadLine(); if (line == null) { break; } // Fast [~2,550 ms], but returns adjusted to DateTimeKind.Local. Adding DateTimeStyles.AdjustToUniversal makes it much slower [~5,875 ms]. DateTime value = DateTime.ParseExact(line, \u0026#34;O\u0026#34;, CultureInfo.InvariantCulture);//, DateTimeStyles.AdjustToUniversal); results.Add(value); } return results; } Here we get something interesting. DateTime.ParseExact is faster - 3,704 ms to 2,866 ms - but only without the AdjustToUniversal flag. While DateTime.Parse was faster with the flag, DateTime.ParseExact is slower. I stepped into the code and found out why. The code has a \u0026ldquo;fast path\u0026rdquo; for the \u0026ldquo;O\u0026rdquo; format, but only when the flags are DateTimeStyles.None.\nAssuming we really want the DateTimes as UTC in code, this isn\u0026rsquo;t going to work. Note that if we\u0026rsquo;re just looking for DateTimes in a range, it would - we could just convert the range edges to local time.\nDateTimeOffset? .NET also introduced a newer type called DateTimeOffset, which explicitly encodes the time zone. It\u0026rsquo;s larger (16 bytes instead of 8 bytes per value) but maybe the parsing methods were more recently written and more heavily tuned. Let\u0026rsquo;s try.\nusing (StreamReader r = File.OpenText(filePath)) { List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(); while (true) { string? line = r.ReadLine(); if (line == null) { break; } // ~3,500 //DateTimeOffset value = DateTimeOffset.Parse(line); // ~1,400 DateTimeOffset value = DateTimeOffset.ParseExact(line, \u0026#34;O\u0026#34;, CultureInfo.InvariantCulture); results.Add(value.UtcDateTime); } return results; } The default DateTimeOffset.Parse overload is a bit slower than DateTime.Parse with the flag, but DateTimeOffset.ParseExact is the fastest thing we\u0026rsquo;ve seen yet with a nearly zero cost conversion to UTC. We\u0026rsquo;re down from 2,866 ms to 1,492 ms, doubling our performance again! Excellent.\nNow we decide to profile again to see what the bottlenecks look like with this change.\nIn this variation, DateTimeOffset.ParseExact and StreamReader.ReadLine now consume about equal time. This means probably can\u0026rsquo;t get under about 700 ms no matter how fast the DateTime parsing gets.\nIn .NET, when you read a file and split it into parts, you have to create a new string (and a new copy in memory) for each part. Could we avoid this?\nSpan In fact, we can. .NET introduced the Span type early in .NET Core to help. Span can refer to a whole array or a slice of an array, without needing a new copy. In the case of our file, this means we could read in a whole block of a file and then operate on little slices of it without having to make copies. Span is also a struct, not an object, so Span itself also doesn\u0026rsquo;t require allocation.\nIn this pass I\u0026rsquo;m going to try a few more improvements. I know that each DateTime is 28 characters long, and my files have two bytes for Windows-style newlines, for a total of 30 bytes for each DateTime.\nTherefore, instead of looking for newlines, I\u0026rsquo;ll read a block from the file and look at each 30 byte chunk, interpreting it as a DateTime. Note that again, I\u0026rsquo;m adding a new requirement - the DateTimes must always be exaclty 28 bytes long (no writing only whole seconds or milliseconds) and the lines but have two byte delimiters (\\r\\n). I need to check these new requirements to ensure they\u0026rsquo;re ok to assume.\nHere\u0026rsquo;s the code I end up with:\nusing (StreamReader r = File.OpenText(filePath)) { int count = (int)((r.BaseStream.Length - r.BaseStream.Position) / 30); List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(count); Span\u0026lt;char\u0026gt; buffer = new Span\u0026lt;char\u0026gt;(new char[30 * 1024]); while (!r.EndOfStream) { int lengthRead = r.Read(buffer); Span\u0026lt;char\u0026gt; block = buffer.Slice(0, lengthRead); while (block.Length \u0026gt; 0) { Span\u0026lt;char\u0026gt; valueText = block.Slice(0, 28); DateTimeOffset value = DateTimeOffset.ParseExact(valueText, \u0026#34;O\u0026#34;, CultureInfo.InvariantCulture); results.Add(value.UtcDateTime); block = block.Slice(30); } } return results; } The runtime drops from 1,492 ms to 878 ms, which is now 7.8x faster than the original code. How does the runtime split between File I/O and parsing now? The \u0026ldquo;Hot Path\u0026rdquo; didn\u0026rsquo;t show enough of the calls under my test method, so I clicked on it to look at the Call Tree View.\nI see that 66% of the time is in parsing and about 20% is in File I/O, so we would have to figure out even faster DateTime parsing to make much further progress. Is there anything left we can do?\nCustom DateTime Parsing We decided to trust that our DateTimes are always a very specific format and constant length, so what if we skip a lot of DateTime logic and just parse the parts as integers, then construct a DateTime from them?\nusing (StreamReader r = File.OpenText(filePath)) { int count = (int)((r.BaseStream.Length - r.BaseStream.Position) / 30); List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(count); Span\u0026lt;char\u0026gt; buffer = new Span\u0026lt;char\u0026gt;(new char[30 * 1024]); while (true) { int lengthRead = r.Read(buffer); Span\u0026lt;char\u0026gt; block = buffer.Slice(0, lengthRead); if (block.Length == 0) { break; } while (block.Length \u0026gt; 0) { Span\u0026lt;char\u0026gt; t = block.Slice(0, 28); DateTime value = new DateTime( int.Parse(t.Slice(0, 4), NumberStyles.None), int.Parse(t.Slice(5, 2), NumberStyles.None), int.Parse(t.Slice(8, 2), NumberStyles.None), int.Parse(t.Slice(11, 2), NumberStyles.None), int.Parse(t.Slice(14, 2), NumberStyles.None), int.Parse(t.Slice(17, 2), NumberStyles.None), DateTimeKind.Utc ); // Add sub-seconds (no ctor takes below milliseconds as parts) value = value.AddTicks(int.Parse(t.Slice(20, 7), NumberStyles.None)); results.Add(value); block = block.Slice(30); } } return results; } Here I\u0026rsquo;m parsing each part separately. I use NumberStyles.None to tell .NET it doesn\u0026rsquo;t need to look for a leading plus or minus sign or for thousands separators.\nThe runtime goes from 878 ms to 1,080 ms. This approach is slower. Sometimes that happens. We need to try something else.\nSpan You might also know that .NET was built before UTF-8 really took off, and so .NET String and Char are UTF-16 (more properly, \u0026ldquo;UCS-2\u0026rdquo;). Our file on disk is UTF-8 (thankfully) - exactly 30,000,000 bytes for 10,000,000 DateTimes - so .NET is quietly converting the file to UTF-16 as we read it. Would eliminating that conversion be faster?\nThere\u0026rsquo;s reason to think it wouldn\u0026rsquo;t help much, because File I/O isn\u0026rsquo;t our current bottleneck, but switching to bytes also allows us to Span methods for parsing, which might be better optimized.\nAfter switching to UTF-8 (Span and byte), here\u0026rsquo;s the code:\nusing (Stream stream = File.OpenRead(filePath)) { int count = (int)((stream.Length - stream.Position) / 30); List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(count); Span\u0026lt;byte\u0026gt; buffer = new Span\u0026lt;byte\u0026gt;(new byte[30 * 1024]); long length = stream.Length; while (stream.Position \u0026lt; length) { int lengthRead = stream.Read(buffer); Span\u0026lt;byte\u0026gt; block = buffer.Slice(0, lengthRead); while (block.Length \u0026gt; 0) { Span\u0026lt;byte\u0026gt; t = block.Slice(0, 28); int unused = 0; bool success = true; // Parse and build DateTime from integer parts (year, month, day, ...) success \u0026amp;= Utf8Parser.TryParse(t.Slice(0, 4), out int year, out unused); success \u0026amp;= Utf8Parser.TryParse(t.Slice(5, 2), out int month, out unused); success \u0026amp;= Utf8Parser.TryParse(t.Slice(8, 2), out int day, out unused); success \u0026amp;= Utf8Parser.TryParse(t.Slice(11, 2), out int hour, out unused); success \u0026amp;= Utf8Parser.TryParse(t.Slice(14, 2), out int minute, out unused); success \u0026amp;= Utf8Parser.TryParse(t.Slice(17, 2), out int second, out unused); success \u0026amp;= Utf8Parser.TryParse(t.Slice(20, 7), out int ticks, out unused); DateTime value = new DateTime(year, month, day, hour, minute, second, DateTimeKind.Utc); value = value.AddTicks(ticks); if (!success) throw new FormatException(\u0026#34;...\u0026#34;); results.Add(value); block = block.Slice(30); } } return results; } While .NET does not have full DateTime parsing on Span, it happily does have number parsing, so we can construct the DateTime from parts like we tried earlier. (And even though that wasn\u0026rsquo;t faster for Span, the same idea might work here).\nHow does it do?\nThe runtime goes from 878 ms (Span and DateTimeOffset.ParseExact, our previous best) to 592 ms.\nWe\u0026rsquo;re starting to get close to our 200 ms goal. Note that the code has gotten weirder and more complex with each of the last few optimizations. Our first changes kept the code pretty clear, but we\u0026rsquo;ve started trading higher complexity (and stricter input file requirements) for our gains, and so it\u0026rsquo;s worth thinking briefly about whether this code will still be ok for our team to maintain.\nHandwritten Parsing Function I didn\u0026rsquo;t expect to be able to achieve much more speed parsing DateTimes - we\u0026rsquo;re using some very optimized methods now - but decided to step into the code and look.\nUtf8Parser has (unavoidable) code to look for sign characters and is designed to stop at the first non-digit (for use when you don\u0026rsquo;t know how long the number will be). Could we write a simpler implementation ourselves?\nI want to just parse digits and only care about stopping on errors after every digit has been chewed through. Here\u0026rsquo;s what that looks like:\nprivate const byte Zero = (byte)\u0026#39;0\u0026#39;; public static int MyParse(ReadOnlySpan\u0026lt;byte\u0026gt; value, ref bool success) { int result = 0; for (int i = 0; i \u0026lt; value.Length; ++i) { byte digit = (byte)(value[i] - Zero); result *= 10; result += digit; success \u0026amp;= (digit \u0026lt;= 9); } return result; } I go through every byte, multiplying the previous sum by 10 and adding the digit. I use the fact that byte is unsigned to use only one condition (digit \u0026lt;= 9) to check for all out of range values. Values before \u0026lsquo;0\u0026rsquo; in the UTF-8 table will wrap around as large positive byte values.\nThis is a big step up in change complexity - I\u0026rsquo;ve now got a new fundamental method to test. Again it\u0026rsquo;s worth asking if the team will be ok with the additional code, though a number parsing function is about as simple as extra code could be. Let\u0026rsquo;s start using this new method and see if we get any gains from it.\nusing (Stream stream = File.OpenRead(filePath)) { int count = (int)((stream.Length - stream.Position) / 30); List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(count); Span\u0026lt;byte\u0026gt; buffer = new Span\u0026lt;byte\u0026gt;(new byte[30 * 1024]); long length = stream.Length; while (stream.Position \u0026lt; length) { int lengthRead = stream.Read(buffer); Span\u0026lt;byte\u0026gt; block = buffer.Slice(0, lengthRead); while (block.Length \u0026gt; 0) { Span\u0026lt;byte\u0026gt; t = block.Slice(0, 28); bool success = true; DateTime value = new DateTime( MyParse(t.Slice(0, 4), ref success), MyParse(t.Slice(5, 2), ref success), MyParse(t.Slice(8, 2), ref success), MyParse(t.Slice(11, 2), ref success), MyParse(t.Slice(14, 2), ref success), MyParse(t.Slice(17, 2), ref success), DateTimeKind.Utc); // Add sub-seconds (no ctor to pass with other parts) value = value.AddTicks(MyParse(t.Slice(20, 7), ref success)); if (!success) throw new FormatException(\u0026#34;...\u0026#34;); results.Add(value); block = block.Slice(30); } } return results; } The outer method doesn\u0026rsquo;t change much. One good thing is that we could easily change back to Utf8Parser.TryParse if we decided not to keep the custom method later.\nThe custom parsing brings us down from 592 ms to 485 ms.\nFully Unrolled Custom Parsing If we want to keep going, we probably need to drop the loop and hardcode four digits for year, two for month, and so on.This may seem crazy, but if we look deep enough, .NET works this way underneath for some paths:\nI\u0026rsquo;ll try this with no error handling whatsoever, to see what the best case performance could be. When I get down to custom methods, it\u0026rsquo;s common for me to write \u0026ldquo;happy path only\u0026rdquo; code first, because if it\u0026rsquo;s not faster I can revert the change without having spent the time to write it fully.\nHere\u0026rsquo;s the happy-path-only parsing:\n// 190 with AggressiveInlining vs 320 without [MethodImpl(MethodImplOptions.AggressiveInlining)] private static DateTime DateTimeParseOUnrolled(Span\u0026lt;byte\u0026gt; t) { int year = 1000 * t[0] + 100 * t[1] + 10 * t[2] + t[3] - 1111 * Zero; int month = 10 * t[5] + t[6] - 11 * Zero; int day = 10 * t[8] + t[9] - 11 * Zero; int hour = 10 * t[11] + t[12] - 11 * Zero; int minute = 10 * t[14] + t[15] - 11 * Zero; int second = 10 * t[17] + t[18] - 11 * Zero; DateTime value = new DateTime(year, month, day, hour, minute, second, DateTimeKind.Utc); // Add sub-seconds (no ctor to pass with other parts) int subseconds = 1000000 * t[20] + 100000 * t[21] + 10000 * t[22] + 1000 * t[23] + 100 * t[24] + 10 * t[25] + t[26] - 1111111 * Zero; value = value.AddTicks(subseconds); return value; } And the calling method:\nusing (Stream stream = File.OpenRead(filePath)) { int count = (int)((stream.Length - stream.Position) / 30); List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(count); Span\u0026lt;byte\u0026gt; buffer = new Span\u0026lt;byte\u0026gt;(new byte[30 * 1024]); long length = stream.Length; while (stream.Position \u0026lt; length) { int lengthRead = stream.Read(buffer); Span\u0026lt;byte\u0026gt; block = buffer.Slice(0, lengthRead); while (block.Length \u0026gt;= 28) { Span\u0026lt;byte\u0026gt; t = block.Slice(0, 28); DateTime value = DateTimeParseOUnrolled(t); //if (!success) throw new FormatException(\u0026#34;...\u0026#34;); results.Add(value); block = block.Slice(30); } } return results; } Note my addition of MethodImplOptions.AggressiveInlining. I wrote this code inline originally, then decided it should be a method and factored it out. When I did, the performance dropped by a third. At this point, either method call overhead is starting to matter, or conditions in the calling code (block.Length \u0026gt;= 28) is helping to cut out bounds checks, perhaps.\nThe runtime goes from 485 ms to 182 ms, reaching our performance goal.\nIt\u0026rsquo;s a good thing, too, because I\u0026rsquo;m not sure where we\u0026rsquo;d get further gains. The I/O is in bulk with no conversions and no copying, and the DateTime parsing is about as minimal as it could be.\nWe don\u0026rsquo;t need to go further, but if we did, I would probably choose to start changing the rules about our inputs and outputs. If we were doing this work repeatedly on the same file, could we just save a copy already converted to DateTime instead?\nDateTime UTC Ticks as Binary To find out, I decided to write a binary file where I write each DateTime.ToUniversalTime().Ticks using BinaryWriter and then read it in with BinaryReader. I might or might not be able to get the provider of the files to send them like this, but if I was scanning them repeatedly, I could also compute and cache the converted form myself.\nusing (BinaryReader r = new BinaryReader(File.OpenRead(Path.ChangeExtension(filePath, \u0026#34;.bin\u0026#34;)))) { int count = (int)((r.BaseStream.Length - r.BaseStream.Position) / 8); // Make a List correctly pre-sized List\u0026lt;DateTime\u0026gt; results = new List\u0026lt;DateTime\u0026gt;(count); // Read UTC ticks values directly and construct DateTimes from them for (int i = 0; i \u0026lt; count; ++i) { long ticks = r.ReadInt64(); results.Add(new DateTime(ticks, DateTimeKind.Utc)); } return results; } One nice thing is the code becomes a lot simpler again.\nRuntime? 261 ms, so shockingly a bit slower than our no-verification implementation. We\u0026rsquo;re making separate calls for every 8 byte value, which ultimately limits our speed.\nBinary DateTimes in Bulk Finally, down to the last option I know how to do. Could we just read the file of DateTime Ticks bytes and \u0026ldquo;cast it\u0026rdquo; to a DateTime array? Amazingly, yes, modern C# has a way to do that.\nWe make a DateTime array the correct size, reinterpret it as a byte array, and ask the Stream to read directly into it.\nusing (Stream stream = File.OpenRead(Path.ChangeExtension(filePath, \u0026#34;.bin\u0026#34;))) { int count = (int)((stream.Length - stream.Position) / 8); // Make a DateTime array the correct size DateTime[] results = new DateTime[count]; // Read the Ticks bytes directly into the array, interpreting them as DateTimes with no per-value conversion stream.Read(MemoryMarshal.Cast\u0026lt;DateTime, byte\u0026gt;(results.AsSpan())); return results; } If you see \u0026ldquo;MemoryMarshal\u0026rdquo; and get nervous, you\u0026rsquo;ve got good instincts. This very low level loading is trusting the bytes on disk to be valid, and trusting the .NET representation of DateTimes (and arrays of them) not to change. These are new requirements worth considering carefully. If we temporarily cache copies of the logs in this form, that might be fine. Storing them long term like this may not be.\nWhat\u0026rsquo;s the runtime of this craziness? 34 ms! It\u0026rsquo;s so fast I have to scale up to the full 100M DateTimes to get a reliable measurement. 100M DateTimes in binary is 760 MB and is parsed (well, loaded, really) in 340 ms, which is about 2.2 GB/s. This is as fast as the drive in my laptop can read, so we\u0026rsquo;ve hit a hardware limit with this particular variation as well.\nReshaping the Problem Note that all of these implementations still build a set of DateTimes. If the real task was to find the rows in a given time range (or count them), we really don\u0026rsquo;t need an array of all of them, and don\u0026rsquo;t need to decode all of them. We could also write a file with, say, only every 32nd DateTime. We load it, binary search for the desired range, and then find the range in the main file. Since we don\u0026rsquo;t have every row, we\u0026rsquo;ll be off by a few, but we can search around in the big file to find the exact bounds.\nIf we don\u0026rsquo;t care about full ticks precision, we ask for the DateTimes with fewer fractional seconds, and save both space and parsing time. The binary format could potentially be represented with four bytes per value instead, though we have to figure out how to expand it back to either to load. (Two digit years never hurt anyone, right? /s)\nIf we find we\u0026rsquo;re often working with small ranges in the files, another really simple idea would be to push back on the 100 million rows per file design. Could we get down to 10 million and still achieve our other goals? Could we keep the smaller files for a while and merge them into big files only after we won\u0026rsquo;t be processing them anymore?\nI gave some design restrictions up front, but hopefully your engineer mind perked up and wondered if those requirements were really strict and necessary or if they were somewhat flexible if a good enough reason came along.\nWhat about the other log fields? We\u0026rsquo;ve gone through this whole set of experiments with files with just DateTimes in them. What about the full messages with other fields? It would be slower, obviously. If we know that newlines will appear right before the DateTimes, looking for newlines in a Span can be done very, very quickly with .NET, so we might be able to stay close to the \u0026ldquo;Unrolled\u0026rdquo; performance. The file could be much bigger than the DateTimes, however, so we\u0026rsquo;ll be reading many more bytes and we might hit our disk read speed limit.\nAnother option (along the lines of writing a separate binary file) is we could have (or build) a separate file with only the DateTimes in it from the raw log, which would make exactly this example what we\u0026rsquo;re planning to process. How do we find the rows in the original file, then? We would probably have to write both the DateTimes and a byte offset in the main file where that row could be found.\nWhy no multithreading? You may object that I never tried to multi-thread this method. Why? Basically, I always want to see what I can get from one thread before I add more. If I can reach the goal in one thread, I can leave the other cores for other work, other processes, or queries from other users. In addition, if we can find a way to parallelize above the level of this code, we don\u0026rsquo;t need to do it here. For example, if we\u0026rsquo;re processing multiple logs, we can have one thread work on each file separately with no coordination or merging of results to figure out. Speaking of coordination, it\u0026rsquo;s often difficult to write multi-threaded code where the threads aren\u0026rsquo;t sitting around waiting for each other. In this case, I could split up a file into chunks, allocate a big, perfectly sized array, and have each thread fill in a segment of it. In many problems, we don\u0026rsquo;t know exactly how many results there will be and have to work harder to figure out how to merge them efficiently.\nIf you have a problem where you don\u0026rsquo;t have multi-threading above your code, you can\u0026rsquo;t hit your goal in one thread, and you can figure out how to have them split up the work and coordinate the results, go for it. I would just suggest sticking to one thread first until you hit those limits. =)\nConclusion We started with a simple problem - parsing DateTimes - and optimized it dramatically in a series of steps. The changes went from minor alterations that probably any team would be willing to maintain to some pretty weird and bespoke craziness. Such is the world of performance.\nWhat was the overall speedup we achieved?\nms Name Speedup DateTimes/s 6,901 Original 1.00x 1,450,000 3,704 AdjustToUniversal 1.86x 2,700,000 2,866 ParseExact (output not UTC) 2.41x 3,490,000 1,492 DateTimeOffset 4.62x 6,720,000 878 Span + DateTimeOffset 7.86x 11,390,000 1,080 Span + int.TryParse parts 6.39x 9,260,000 592 Span + Utf8Parser 11.66x 16,900,000 485 Span + handwritten parse 14.23x 20,600,000 182 Span + unrolled parse (no checking) 37.91x 54,900,000 261 Binary UTC Ticks 26.44x 38,300,000 34 Binary bulk into DateTime[] 202.98x 297,000,000 So we could get 4.6x faster just by swapping the parsing method (to DateTimeOffset.ParseExact), 7.8x faster by switching to Span for I/O, and 11.6x faster still with standard parsing. Custom code got us to 37.9x, though a production-safe version would need error checking and would be slower.\nFinally, loosening the input requirements and switching to binary can get you a 200x speedup on this problem, if really need it, and can load 297 million DateTimes per second.\nIf you\u0026rsquo;d like to try running this yourself, grab the code and try it out. If you find any faster ways to do it, please let me know!\n","permalink":"https://relentlessoptimizer.com/code/2022/08/10/performance-tuning-parse-50m-datetimes-per-second-in-c/","summary":"I love the Visual Studio C# Performance Profiler, and am shocked to find out how many engineers around me haven\u0026rsquo;t used it before.","title":"Performance Tuning: Parse 50M DateTimes per second in C#"},{"content":"After two years of minimal travel, we decided to fly to New York City, and I promptly got COVID while there. Our return turned into a surprise COVID road trip; this is the story.\nIsolation We brought KN-95 masks and wore them consistently for the flight and subway rides. About half the people around us had masks, and there were a few unmasked coughing people just about everywhere. (This is why we can\u0026rsquo;t have nice things). I was congested despite taking a Zyrtec on the third day, and to my dismay my COVID test came back positive. We told the hotel staff, who were very supportive, and I isolated in the room and wore my KN-95 whenever my family was back. They had all gotten Omicron in January, so we were hopeful that they would dodge what I had. I got very familiar with the Times Square signage I could see from the window. Did you know that the Krispy Kreme rotating sign is a digital screen, not neon tubes, and it has some fake \u0026ldquo;burned out\u0026rdquo; bits to look more real? I changed my flight to ten days after my first symptoms and booked another hotel for the extra days, and toodled around on my laptop during the days. The Delta Airlines person who helped me was great, despite Delta\u0026rsquo;s reputation - no cost except the fare difference and I was all set in a few minutes.\nThe Pivot After being symptom-free for the rest of our visit, one of my daughters reported a sore throat the night before they were supposed to return home. We tested her in the morning and found that she, too, was positive. Our first hotel reservation was over. I tried to call the second hotel to get a room with two beds and a longer stay, but they cancelled my reservation when they found out we had COVID. We called the NY Department of Health. The nurse told us that the COVID-isolation-hotel program had ended. We couldn\u0026rsquo;t fly and no hotel would take us, so we could either book a hotel without telling them, or find some other way home. Hotels in New York (even over on Long Island) are expensive, and even at insane 2022 prices, a one-way car rental from Manhattan to Seattle was cheaper, so we quickly decided to drive home instead.\nEscape from Manhattan We found a Budget rental car location just a few blocks from the hotel, and just ten streets up and three avenues across to the Lincoln Tunnel. How bad could it be? We left the hotel just after noon, and after a surprisingly long wait to talk to one of the least friendly car rental workers I\u0026rsquo;ve ever met (and that\u0026rsquo;s saying something), we had a car. Budget didn\u0026rsquo;t have the car they said was available an hour earlier, but said they had a Ford Edge. A few minutes later, a Chevy Equinox came down the car elevator (!) and we were off. Unlike Delta, Budget continues to live up to it\u0026rsquo;s well-earned terrible reputation.\nI expected driving in Manhattan to be insane, and despite the short and simple route, it lived up to that. I guess the idea that driving should have rules sort of breaks down in big cities. There\u0026rsquo;s no empty street parking anywhere, so delivery trucks just stop in the middle of the street anywhere, any time. The remaining cars are the car version of an angry mass of overcaffeinated people pushing and jostling to get through wherever they can. Many cars had \u0026ldquo;bumper diapers\u0026rdquo; which serve the same purpose as diapers for babies - absorbing the small accidents which are inevitable in the situation. I think Manhattan should do away with streets altogether, with elevated moving walkways for humans (4 mph \u0026ldquo;local\u0026rdquo;, 8 mph \u0026ldquo;express\u0026rdquo;, and 12 mph \u0026ldquo;angry New Yorker\u0026rdquo; speeds) above a narrow lane for stopped trucks and psychotic bicyclists to share.\nOur Manhattan drive ended with a three-to-one lane merge with jostling busses and a cement mixer during a 50 foot turn into the tunnel, and we had escaped.\nDay One Escaping Manhattan felt great, but ultimately it\u0026rsquo;s the same drivers with the same loose sense of driving rules on the other side of the Hudson. Still, dense city gave way to green within an hour or so, and things seemed to calm down. We were surprised by the endless round green trees of the (aptly named) Garden State, and the East Coast as a whole. We\u0026rsquo;re used to the often brown hills of California and the pointy evergreens of the West, and so this terrain seemed just a bit alien.\nThe point of driving home was to avoid hotels, so we would need places to camp and some gear. We have nice gear at home, so we stopped at Walmart to get just some very cheap basics. We found a $30 two-kid backyard tent and three $12 sleeping bags. Walmart didn\u0026rsquo;t have reasonable sleeping pads, so at the next Walmart we bought two more sleeping bags to sleep on. We also picked up a fuzzy blanket, a few pillows, and a $10 pocketknife, comprising the most minimal and questionable camping setup we\u0026rsquo;ve ever tried to use.\nThe shopping stops took some time, especially because we sent only one non-sick family member into the store. On the next leg of the drive we picked a private campground in Emlenton, PA, which we reached at dusk. As we set up the tent and ate dinner at the camp table with an improvised bag-on-phone lantern, the kids spotted fireflies and managed to catch one in a bottle. For the first time since the positive COVID test, it felt like a happy adventure.\nThe girls slept in the car and Darinee and I in the tent. I could only fit in the tent diagonally, and sleeping bags under us were a poor replacement for real sleeping pads. We got three and four hours of sleep that night, according to our FitBits, and then packed up and were off.\nDay Two We set off around 8:00am, but had a bit more shopping to do. We picked up an electric kettle and a car USB charger along with more snacks, and made our way toward Chicago on I-80/I-90 West. Our rental car was supposedly equipped for electronic tolls, but we\u0026rsquo;d seen a worrying message going through the last toll booth entering Pennsylvania (\u0026ldquo;GO - TOLL NOT PAID\u0026rdquo;), so we wanted to avoid tolls for the remainder of the trip. It remains to be seen how and what we get charged for the tolls early in the trip.\nThe second day also gave us a chance to appreciate the rental car. We knew we wanted an SUV to sleep at least a few of us inside, but I\u0026rsquo;d expected the gas mileage to be awful, like pickup trucks I\u0026rsquo;d researched a year or two earlier. It wasn\u0026rsquo;t. Somehow the 170 hp four-cylinder engine was enough power for passing and fast driving but was also managing just over 30 mpg for the drive. The seats were comfortable, the ride height and suspension very pleasant, and the Equinox has shallow storage under the whole trunk, making a perfect place for food storage where you can instantly find and get to anything.\nWe also discovered that COVID really takes a lot of the stress and decision-making out of road trips. We didn\u0026rsquo;t want to stop anywhere or go into any stores, so we only stopped at gas stations, rest areas, and campgrounds, for the most part. We enjoyed the scenery and midway through the day the kids tired of their tablet and phone and just started talking to each other and making up games. As they debated the rules for an apparently hilarious extended rock-paper-scissors, we switched from I-80 to US-30 to avoid tolls near Chicago and learned why the toll road was worth it.\nUS 30 calls itself a highway, but it\u0026rsquo;s really more like a big street, like WA-161 on the way to Mount Rainier. The speed limit is relatively high, but there\u0026rsquo;s an incessant stream of traffic lights as you plow right through the endless suburbs of Chicagoland. Traffic was light but progress was slow. Mercifully our route took us right by some proper Chicago Deep Dish Pizza (Lou Malnatti\u0026rsquo;s), which we enjoyed in a beautiful Target parking lot nearby amid the gentle sound of Chicago muscle car traffic. It was a surprisingly pleasant picnic dinner, considering.\nAfter we ate, and before any Target staff might come out to complain, we headed off. We chose a route right through the Chicago and Milwaukee downtowns, to at least get the sight of some other big cities on our way past. Traffic was dense but steady in Chicago, and while we saw quite a bit of the downtown and elevated train system, we didn\u0026rsquo;t get close enough to see Lake Michigan. We ended up bypassing the Milwaukee to make it to a county campground near Madison, Wisconsin, once again arriving at dusk. Despite the quality of our sleeping setup, we passed out quickly and slept soundly.\nDay Three In most places we\u0026rsquo;ve camped, if you arrive after the entrance station is closed, you find a site, camp for the night, and pay in the morning. Apparently that\u0026rsquo;s not the case in Wisconsin. They have a great website showing up-to-the-moment campsite availability (which is awesome), but you need to pay before you set up. We got a warning in the morning and called to pay by phone, then went off looking for some proper cheese before getting back to the highway.\nWe chose to follow I-90 through South Dakota, and enjoyed the 80 mph speed limits of the region. The mileage of the Equinox dropped to 27 mpg at 90 mph (roughly the prevailing speed) but we made great time. We watched the farms go by and finally saw the ceaseless and apparently un-irrigated green fields give way to the more familiar brown of our own side of the country.\nWe pulled into a city park in Spearfish, South Dakota to end our third day. The city was gearing up for a festival of some sort, so the campground was relatively busy. Unlike the formal design of most state campgrounds, it was really just a big field where you park and pitch wherever you want.\nWe were lucky to camp without any bad weather thus far, but after a beautiful purple sunset, a thunderstorm broke our streak. I slept in the car with the windows down and towels blocking bug and rain entry while the girls and Darinee filled up the tent. It was exciting for a while as the storm raged by, but returned to calm relatively quickly.\nDay Four At this point we were pretty sure we would need two more days to finish the trip, as we had not been managing the full 12 hour driving days needed to make it in four. We headed out before the festival traffic got too heavy, got coffee and shockingly great pastries at a coffee shop in town (Ruby\u0026rsquo;s Roost, if you\u0026rsquo;re ever there), and were back on the highway around 8:30am.\nWe decided to brave a long detour away from I-90 on US-212 for a shorter path. Like US-30, it was a mistake. They don\u0026rsquo;t believe in doing road closures a mile or two at a time in South Dakota, apparently, instead closing a good ten or twenty miles at a time, with stoplights and pilot trucks to escort wagon trains of hapless vehicles slowly through. When we finally returned to I-90 near the Little Bighorn monument, we\u0026rsquo;d probably lost as much time to traffic as we had hoped to save in distance, if not more. We ran into several closed Rest Areas as well, delaying our first driver swap until the early afternoon.\nBack on I-90, we made quick time with the fast drivers of Montana (who also consistently move over to allow you to pass) and made it to Bozeman to pick up cold drinks by early afternoon. At this point, Google Maps told us we could somehow be home by midnight, and we decided to go for it. We made a gas and dinner stop in Missoula and a quick top-off just after Spokane to make it all the way back.\nRetrospective Four days, 2,951 miles, and 99.7 gallons of gas later, we\u0026rsquo;d made it. The math says the Equinox managed 29.6 mpg for the trip, which is amazing given the tall frame and our high speeds. We were pleasantly surprised that small SUVs are much more efficient these days than we\u0026rsquo;d thought. Apparently, this crazy trip used half of the fuel that four seats on the plane would use, somehow.\nThe next evening I drove to the airport to return the car and pick up our own (belatedly) from parking. You get some funny looks wandering the airport with absolutely no luggage, but people do seem to get the sense you\u0026rsquo;re anxious to get done with your travels. Driving back home in the Model 3 reminded me how shocking the acceleration really is, how close to the ground the ride feels, and how it\u0026rsquo;s almost as unpleasant to drive in Seattle as in other big cities. I guess open roads and polite passing is really an urban-versus-rural thing more than anything.\nWhile I wouldn\u0026rsquo;t recommend anyone take a COVID road trip intentionally, if the planes and hotels don\u0026rsquo;t want you, it\u0026rsquo;s a workable way to get home. It turns out you can sleep on just about anything after a night or two of terrible sleep, and camping road trips, no matter the circumstances, always seem to come with some fun memories.\n","permalink":"https://relentlessoptimizer.com/life/2022-07-21-covid-road-trip/","summary":"After two years of minimal travel, we decided to fly to New York City, and I promptly got COVID while there.","title":"COVID Road Trip: An Unexpected Journey"},{"content":"For most of my life, I\u0026rsquo;ve bought clothes on sale which seemed \u0026ldquo;good enough\u0026rdquo;. My outerwear lasts a really long time, though. As a few favorites finally wore out, I decided that I should really just get exactly what I want and get rid of the rest. With that, my quest for some perfect sweaters began.\nGoals After so many years of picking things off the sale rack, it was satisfying to think about what I really want in a sweater and what I\u0026rsquo;ve liked in my recent favorites. Overall, my goal is to find three sweaters which are ideal for indoor use, outdoors in very mild (65-75F) temperatures, or for layering under a jacket. In addition, I want:\nFleece I wore soft shells everywhere for a long time, but I would get sweaty indoors if it was too warm, they made noise every time I shifted in my chair, and people would sometimes ask if I wanted to \u0026ldquo;hang up my jacket\u0026rdquo;. Fleece sweaters fix all of this - they are much more breathable, quiet, and normal indoor wear. Cotton feels cold when I first put it on, and gets and stays a lot wetter in rain.\nWarm Ultimately, I want my sweaters for indoor use first. My office can be 65-72F or so, so I want something which is great over a shirt in that whole range. I am usually cold, so this means a mid- to heavyweight fleece.\nFull Zip Pullovers try to pull my shirt off as I remove them. I also like being able to unzip my sweater when it\u0026rsquo;s otherwise a bit too warm for it.\nNo Hood Hoods are nice for extra outdoor warmth, but annoying against a chair or an outer layer.\nRelaxed Fit, Hip Length, Long Enough Sleeves I want a sweater that fully covers my waist and wrists. I\u0026rsquo;ve had too many sweaters that were a bit too short and I want something that really feels the right size.\nDurable I\u0026rsquo;m willing to spend for a nice sweater, but want it to last a decade or longer. It shouldn\u0026rsquo;t pill or wear through too quickly.\nCoordinated and Fashionable I\u0026rsquo;m too lazy to make sure my clothing colors match and my clothes aren\u0026rsquo;t too fancy or casual for whatever I\u0026rsquo;ll be doing. I want to pick colors that work with all of my pants and a wide variety of situations, so I can just grab any of them and go. Knit exteriors have a nice look, though they may be less durable.\nWinners KUIU Base Camp Full Zip | $100 | 21 oz When shopping for a great backpacking mid-layer, I stumbled upon KUIU. I got the \u0026ldquo;Base Camp\u0026rdquo; sweater because it was on sale and it quickly became a favorite. It\u0026rsquo;s just the right warmth, a comfortable fit, and I like the look. It pills a lot, especially on the bottoms of the sleeves, so durability is a concern. I got a \u0026ldquo;sweater shaver\u0026rdquo; and shaved the pills off, and it\u0026rsquo;s looking nice again. Mine is hooded, but since I already have it, I\u0026rsquo;m keeping it until it wears out.\nPatagonia Better Sweater Fleece Jacket | $140 | 21 oz My previous favorite was a (hooded) Better Sweater, which somehow I lost. It had the same nice knit exterior, perfect warmth, and great fit. I bought an unhooded one to replace it. I especially like that the sleeves articulate well - when I raise my arms overhead, the bottom of the sweater doesn\u0026rsquo;t ride up much. The collar for the unhooded version feels a bit tall, but otherwise it\u0026rsquo;s great.\nREI Hyperaxis 2.0 | $130 | 17 oz As I was trying on my candidates at REI, the Hyperaxis caught my eye, so I decided to try it on and immediately loved it. It\u0026rsquo;s made of Polartec Power Stretch Pro, which is warmer than I expect for the weight. The Hyperaxis has a hood, but the material is thin enough I think it might sit flat out of the way. It does not have a knit face, so it looks more casual, but it might also be a lot more durable than my knit choices.\nClose Contenders Arc\u0026rsquo;teryx Covert Cardigan | $180 The Covert Cardigan is extremely similar to the Better Sweater. It has a nicer cut (particularly at the shoulders) and a trimmer but comfortable fit. The collar doesn\u0026rsquo;t feel too tall, but the arm articulation isn\u0026rsquo;t as good as the Better Sweater. I picked the Better Sweater instead, but it\u0026rsquo;s close between the two.\nArc\u0026rsquo;teryx Kyanite AR | $160 The Kyanite, like the Hyperaxis, is made from Polartec Power Stretch Pro, so it doesn\u0026rsquo;t have the nice knit look, but is likely to be much more durable. I couldn\u0026rsquo;t find it in store to try out.\nKuhl Interceptr | $130 The Interceptr looks and feels great, but was a much slimmer fit with tight sleeves.\nREI Groundbreaker 2.0 | $50 | 13 oz The Groundbreaker has a soft, \u0026ldquo;traditional fleece\u0026rdquo; exterior rather than a knitted one. It seemed to catch on my inner layers more as I removed it. Since it was $35 (!!) during the REI Spring Sale, I picked one up as an \u0026ldquo;at home only\u0026rdquo; sweater.\nOther Possibles Rab Quest Fleece Jacket | $100\nOutdoor Research Vigor Plus Jacket | $150\nConclusion So far, going down from about ten \u0026ldquo;pretty good\u0026rdquo; sweaters to three great ones has been really nice. I put three hooks next to my bed and grab the one I feel like with little thought. My frugal instincts struggled with the prices, but if they last as long as my previous sweaters, it will be cheaper than cycling through \u0026ldquo;pretty good\u0026rdquo; $25 Costco options which don\u0026rsquo;t love and donate after a year or two. We\u0026rsquo;ll see.\n","permalink":"https://relentlessoptimizer.com/life/2022-06-01-ultimate-sweater/","summary":"For most of my life, I\u0026rsquo;ve bought clothes on sale which seemed \u0026ldquo;good enough\u0026rdquo;. My outerwear lasts a really long time, though.","title":"Search for the Ultimate Indoor Sweater"},{"content":"I recently started using an M1 MacBook Pro 14\u0026quot;. I wanted to know which of my cables and chargers work with it and how fast it charges from them. My previous laptop, an ASUS Zephyrus G14, only charges from 20v (60w+) USB-C chargers, so I was expecting the same. I was shocked to find out that the MacBook will charge from every charger I have, at any voltage!\nHere are all of the chargers which worked with the M1 MacBook, from right to left (high to low power):\nCharger Model Ports Outputs Aukey Omnia 90w PA-B6S 2C, 1A 5v 3A, 9v 3A, 12v 3A, 15v 3A, 20v 4.5A, 3.3-11v 5A PPS Aukey Focus 63w PA-D5 2C 5v 3A, 9v 3A, 12v 3A, 15v 3A, 20v 3A Anker Nano II 65w A2663 1C 5v 3A, 9v 3A, 15v 3A, 20v 3.25A Anker Nano II 45w A2664 1C 5v 3A, 9v 3A, 15v 3A, 20v 2.25A, 3.3-16v 3A PPS KTEC 27w KSA-27A 1C 5v 3A, 9v 3A Google Pixel 18w G1000-US 1C 5v 3A, 9v 2A Samsung 15w EP-TA20JWE 1A 5v 3A, 9v 1.67A Google Stadia 7.5w G1001 1A 5v 1.5A Every cable I tried works as well, though of course you can only charge over 3A from a high power (5A) marked cable. It seems to charge at the peak rate possible with everything except the USB-A chargers, from which it only draws 5w (5v 1A).\nSide Note: Having a USB power meter is really nice for knowing whether devices are using a charger the way you expect.\nI plan to carry my Anker Nano 45w around, which is tiny but enough for MacBook peak power consumption (~40w) and a full charge in a few hours during normal use (~6w). It\u0026rsquo;s nice to know that even an 18 watt phone charger will keep it going and provide an overnight charge in a pinch!\n","permalink":"https://relentlessoptimizer.com/life/2022-05-04-m1-macbook-charging/","summary":"I recently started using an M1 MacBook Pro 14\u0026quot;. I wanted to know which of my cables and chargers work with it and how fast it charges from them.","title":"M1 MacBooks charge from anything!"},{"content":"I\u0026rsquo;ve been using FFMPEG to transcode gaming videos often lately, and I find the reference documentation confusing.\nCheat Sheet Transcode for Blog Transcode to H.264 quality 24 and mono 96 kbps AAC audio.\n%ffmpeg% -i \u0026#34;%in%\u0026#34; -y -c:a aac -b:a 96k -ac 1 -c:v libx264 -crf 24 \u0026#34;%out%\u0026#34; Extract Audio as 128 kbps MP3 %ffmpeg% -ss %startTime% -i \u0026#34;%in%\u0026#34; -t %duration% -b:a 128k -y -vn \u0026#34;%out%.mp3\u0026#34; Extract Video Frames to PNG %ffmpeg% -ss %startTime% -i \u0026#34;%in%\u0026#34; -t %duration% -vf \u0026#34;fps=%fps%\u0026#34; -vsync vfr -f image2 -y \u0026#34;%outDir%\\F%%03d.png\u0026#34; Encode at 2x Speed %ffmpeg% -i \u0026#34;%in%\u0026#34; -y -filter_complex \u0026#34;[0:v]setpts=0.5*PTS[v];[0:a]atempo=2.0[a]\u0026#34; -map \u0026#34;[v]\u0026#34; -map \u0026#34;[a]\u0026#34; \u0026#34;%out%\u0026#34; Extremely Tiny (720p, Q30, no audio, 2x speed, 0.5 fps) %ffmpeg% -i \u0026#34;%in%\u0026#34; -y -an -preset veryfast -crf 30 -filter_complex \u0026#34;[0:v]setpts=0.5*PTS[v]\u0026#34; -map \u0026#34;[v]\u0026#34; -r 1/2 -s 1280x720 \u0026#34;%out%\u0026#34; Add Time Overlay Encode with the elapsed time shown as 24pt white Arial in mm:ss.ff format in a black box at the top right.\n%ffmpeg% -i \u0026#34;%in%\u0026#34; -filter_complex \u0026#34;drawtext=x=(w-text_w-5): y=5: fontfile=arial.ttf: fontcolor=white: fontsize=24: text=\u0026#39;%%{pts\\:gmtime\\:0\\:%%M\\\\\\:%%S}.%%{eif\\:100*t-100*trunc(t)\\:d\\:2}\u0026#39;: box=1: boxcolor=black@0.90: boxborderw=5\u0026#34; -c:a copy -c:v libx264 -crf 24 -y \u0026#34;%out%\u0026#34; You can write expressions for X and Y and refer to the measured text and overall video width and height (w-text_w-5).\nUse %{pts\\:gmtime\\:0\\:%M\\\\\\:%S} to show elapsed time (pts) using the gmtime formatting with \u0026ldquo;mm:ss\u0026rdquo; format.\nUse %{eif\\:100*t-100*trunc(t)\\d:\\:2} to show elapsed time (t) as an integer (eif) with just hundredths of a second, padded to two digits.\nArgument Quick Reference Argument Explanation -i [filePath] Input File Path [outFilePath] Output File Path (last argument) -ss 00:01:30.5 Start Time [put before -i] -t 00:30:00 Duration to Transcode [hh:mm:ss.ffff] -y Overwrite output if already present -c:a copy Audio: Copy to output as-is -c:a aac Audio: Encode as AAC (or: mp3, opus) -b:a 96k Audio: Encode at 96 kbps -ac 1 Audio: Downmix to one channel (mono) -an Audio: Remove audio entirely -c:v libx264 Video: Encode as H.264 -crf 24 Video: Quality to 24 (lower is better) -s 1280x720 Video: Scale to 1280x720 -r 5 Video: Framerate to 5 fps. (\u0026lsquo;1/5\u0026rsquo; for 0.2 fps) -vn Video: Remove video entirely Codecs and Quality Experiments on a nine minute 1080p recording of Kingdom Rush using Xbox Game Bar, which was originally 500 MB. Every 128 kbps (for video plus audio) is 960 KB per minute.\nVideo Q (h.264) Perception Video kbps Out Size 22 Excellent 1,135 75 MB 24 Great 820 54 MB 27 Good 600 40 MB 30 OK 450 30 MB 32 Bad 350 23 MB Audio kbps Codec Perception Out Size 128 (stereo) AAC Excellent 8.4 MB 96 (mono) AAC Excellent 6.3 MB 64 (mono) AAC Fine 4.2 MB 48 (mono) AAC Bad 3.2 MB 96 (stereo) Opus Excellent 6.3 MB 64 (stereo) Opus Great 4.2 MB 48 (stereo) Opus Fine (detectable) 3.2 MB 32 (stereo) Opus Stereo \u0026lsquo;Full Band\u0026rsquo; lower limit 2.1 MB 24 (mono) Opus Speech ok, music weird 1.6 MB 192 (stereo) MP3 Excellent 12.6 MB 128 (stereo) MP3 Fine 8.4 MB 96 (mono) MP3 Fine 6.3 MB MP3 is fine down to 128 kbps stereo, 96 kbps mono. AAC is fine down to 96 kbps stereo, 64 kbps mono. Opus is fine down to 64 kbps stereo, ~48 kbps mono, ~24 kbps mono speech only. Quality seems to drop quickly below those thresholds. Opus isn\u0026rsquo;t supported everywhere, but AAC is.\nSpotify defaults are 128 kbps AAC (Web) or 96 kbps (Mobile, \u0026ldquo;Normal\u0026rdquo; quality).\nAt lower video quality (Q30), 1080p is 450 kbps and 720p is 260 kbps. At those rates, 128 kbps audio becomes big, so encoding to 96 kbps or 64 kbps mono is important to file size.\n","permalink":"https://relentlessoptimizer.com/code/2022/03/15/ffmpeg-cheat-sheet/","summary":"I\u0026rsquo;ve been using FFMPEG to transcode gaming videos often lately, and I find the reference documentation confusing.\nCheat Sheet Transcode for Blog Transcode to H.","title":"FFMPEG Cheat Sheet"},{"content":"I love the tower defense game Kingdom Rush. More than anything else, it has just the right amount of complexity - just enough towers and abilities to give you options, and just enough tactical play to keep you busy between build steps. The difficulty rises smoothly across the levels, slowly asking more of you as you improve. It\u0026rsquo;s great fun and has massive replayability. Thanks to a vibrant community, YouTube walkthroughs are there to help if you get stuck or need new strategic ideas.\nUnfortunately, following a walkthrough while you play is really awkward. You\u0026rsquo;re constantly pausing and resuming the game and walkthrough as you play. You have to watch closely or you can easily miss an ability upgrade. You really can\u0026rsquo;t skip around or have the walkthrough playing \u0026ldquo;off to the side\u0026rdquo; as you play.\nRefining your own strategies as you play is similarly difficult. It\u0026rsquo;s hard to remember everything you did during a 20 minute level, and then to think about what went wrong and how to improve on top of that. I found myself making a lot of the same mistakes on replays and getting frustrated.\nI needed an easy way to write down the steps I took in a level, tweak the plan on paper, and then follow my plan on my next attempt.\nSo I built a \u0026ldquo;chess-like\u0026rdquo; Kingdom Rush syntax to transcribe my games.\nL5 G7 Arti3 E9 Barr2 # Upgrade provided Arch3 to a Ranger\u0026#39;s Hideout E7 Rang E7 Pois1 # Redirect to blocking and killing the spiders G6 Barr E7 Wrat3 G6 Barr2 # Poison for stronger bandits E7 Pois2 It was satisfying to be able to write my strategies and iterate on them, but the text plans were still hard to follow as I replayed the levels. I needed something much easier to follow than a walkthrough video - just the build steps, easy to \u0026ldquo;step through\u0026rdquo;, easy to pick out the last change, and easy to see ability upgrades.\nSo I built a Kingdom Rush Animator which takes the text syntax and animates it on the level map. It shows just the build steps, so they\u0026rsquo;re short. The last step is highlighted so you can find it at a glance while playing. Ability upgrades are drawn next to the towers, so you can\u0026rsquo;t miss them. You can watch the animations like a video or tap through them like a slideshow as you play.\nWith the animator, life was much better. I could transcribe my games, iterate on the strategy, and then follow it easily on a replay. The one problem left was transcribing the games. My goal was to stop watching walkthrough videos, but now I had to watch my own games to write down what I had done. By the time I was done, it was harder to remember what went wrong that I wanted to change for the next play through.\nSo I built an AI-powered scanner to transcribe my gameplay videos for me.\nNow I just record a game, drag-and-drop the video to the browser for a transcript, tweak the script for next game, and follow the animation to try it. These tools make it much easier for me to see what I did and make intentional changes, getting better playthroughs on each iteration. They transformed the game for me, and so I wanted to share them. Enjoy!\n","permalink":"https://relentlessoptimizer.com/gaming/2022/02/16/optimizing-kingdom-rush/","summary":"I love the tower defense game Kingdom Rush. More than anything else, it has just the right amount of complexity - just enough towers and abilities to give you options, and just enough tactical play to keep you busy between build steps.","title":"Optimizing Kingdom Rush"},{"content":"Today I\u0026rsquo;m releasing a new version of Regex Builder, 14 years after the previous release, thanks to an email from a fan. Regular Expressions (regexes) are a powerful way to search text, but also hard to write and very hard to debug, kind of like SQL queries. I wrote Regex Builder originally around 2004 (!!) to help me to iterate on regexes more quickly.\nI was testing the Visual Studio html editor at the time, and I liked regexes as an easy way to have my tests navigate around in the editor. After too many iterations trying to get a regex to work, I made a little Windows Forms app to let me see matches instantly, so that I could test it against several examples fast. I open sourced the code and made my last release in 2007, and haven\u0026rsquo;t touched it since other than briefly in 2017 to move it to GitHub when the old hosting site shut down.\nFast forward 14 years. I got an email yesterday thanking me for writing Regex Builder, telling me that the \u0026lsquo;help\u0026rsquo; URLs were broken, and asking for the ability to copy all matches to the clipboard. (Thanks, Serdar, for the great suggestions!)\nIn most of my programming experience, owning a software product has been like owning a house - constant maintenance to keep it working against the relentless forces of decay. I built a tool with a web front end in 2012, and by 2014 I couldn\u0026rsquo;t get the front end to compile without an unknown amount of effort.\nI was about to reply to my user to say that it would be too hard to update the tool when I decided to just try it, and much to my surprise, Visual Studio 2019 was able to migrate and build the project and .NET 4.7.2 was happy to run it on the very first try.\nToday was a reminder for me of how easy maintaining software could be if we all cared more about compatibility. I know that Windows Forms had been declared dead and then reincarnated since Regex Builder was first written, so I feel very lucky that the foundations had been rebuilt when I wandered back to get it building again. (Thanks to the .NET and Visual Studio teams for the energy they\u0026rsquo;ve put into compatibility, especially recently, to make stories like mine possible.)\nRegex Builder is a lot like Windows Forms - there are newer, fancier tools out there to solve the same problem today, but it\u0026rsquo;s simple and focused on helping you solve a problem quickly. If you need to iterate on Regular Expressions often or you have them fail to match when software runs and want to be able to \u0026ldquo;double-click to debug\u0026rdquo; them, Regex Builder is under 60 KB and might be worth a look. =)\n","permalink":"https://relentlessoptimizer.com/code/2021/12/08/regex-builder-2.10/","summary":"Today I\u0026rsquo;m releasing a new version of Regex Builder, 14 years after the previous release, thanks to an email from a fan.","title":"Regex Builder 2.10"},{"content":"I\u0026rsquo;ve been updating my backpacking loadout and learning from the \u0026ldquo;ultralight\u0026rdquo; backpacking community. I was struck by the parallels between backpack-packing and budgeting and how backpacking wisdom can apply to finance.\nThink About Your Values Andrew Skurka, a well-known backpacker, says there are two kinds of backpackers, \u0026ldquo;hikers\u0026rdquo; and \u0026ldquo;campers\u0026rdquo;. \u0026ldquo;Hikers\u0026rdquo; want to travel light and get to the destination quickly. \u0026ldquo;Campers\u0026rdquo; bring many things and want the most comfortable journey. Neither philosophy is better, of course. Thinking deeply about your own preferences can help you choose a deliberate place on this continuum and ultimately enjoy your trips more. People who seem crazy to you may just have different philosophical priorities. Finally, when choosing companions to journey with, you\u0026rsquo;ll be much happier if they have a similar philosophy to your own.\nThe world of money is similar, though we don\u0026rsquo;t often think of it in such clear terms. You can choose to spend as much as you earn to try to maximize comfort, or spend as little as possible to reach financial freedom faster. Either choice is fine, like with packing, but you\u0026rsquo;ll be happier if you make a deliberate choice in line with your values. When choosing a companion for your financial journey, you\u0026rsquo;ll be a lot happier if they have similar goals to your own.\nPlanning is Necessary With backpacking and budgeting, you can carefully plan what you want to include or just throw everything in and hope you can carry it all. As with a budget, planning your packlist with a tool like LighterPack takes a block of up-front time, but is easy to maintain afterward. It\u0026rsquo;s tempting to skip planning, but it will almost certainly identify things you can leave out altogether and things you can optimize. Whether you care about speed or comfort, including the right things provides more bang for your buck.\nYou can just weigh your filled pack to see how far you are from your goals, but in order to optimize you need to list and weigh everything to know what you can improve and how much a given change will matter. Similarly, it\u0026rsquo;s not too hard to estimate your overall spending, but you need more detail to optimize your spending.\nThe Big Four Many backpacking experts tell you to first look carefully at your \u0026ldquo;Big Four\u0026rdquo; - your backpack, shelter, sleeping pad, and sleeping bag. These are the heaviest non-consumable items you\u0026rsquo;ll be carrying. They aren\u0026rsquo;t the only things that matter, but if they are too heavy, you\u0026rsquo;ll struggle to meet a weight goal. If you want a 15 pound \u0026ldquo;base weight\u0026rdquo; (pack without consumables), and your \u0026ldquo;big four\u0026rdquo; weigh 12 pounds, you\u0026rsquo;re going to struggle. Swapping out any of the Big Four items is expensive, but will make a huge difference in your hike.\nIn a budget, the parallel is the \u0026ldquo;Big Three\u0026rdquo; - housing, transportation, and food. These are typically the biggest spending categories. If you want a budget of $4,000 per month but your rent and car are already $3,000, you\u0026rsquo;re going to struggle. Changing any of these items is difficult (moving, selling and buying a car, or working out a new diet), but can make a huge improvement in how easily you can \u0026ldquo;carry\u0026rdquo; your budget.\nWhile the big items are important, \u0026ldquo;death by a thousand paper cuts\u0026rdquo; is a problem, too. Smaller items are still tracked on the list and still can\u0026rsquo;t get out of hand.\nMeasure Some Things in Groups It\u0026rsquo;s important to understand where all of the weight in your pack comes from, but you\u0026rsquo;ll have some groups of tiny items that aren\u0026rsquo;t practical to think about individually. You probably don\u0026rsquo;t want to weigh every single bandage and pill in your first aid kit, but rather have overall goals about what needs it must fulfill and how heavy it should be overall.\nSimilarly, a few categories in your budget are too much work to track purchase-by-purchase. For us, our \u0026ldquo;day-to-day\u0026rdquo; spending is like this (coffee, meals out, groceries, household items, movie rentals, \u0026hellip;). Instead of tracking these individually, we set an overall weekly budget for them and a separate account and debit card. We check our account balance to tell if we need to slow spending down (or if there\u0026rsquo;s room for a splurge this week) with very little effort. If we\u0026rsquo;re over budget for the week, we\u0026rsquo;ll look at the specific purchases to see what happened, but otherwise we just worry about the overall balance.\nRemoval is the Ultimate Optimization It\u0026rsquo;s fun to research and buy new, better gear, but nothing will save more weight in your pack than removing something entirely. Removing things is also fast and free, but hard. The backpacking community says that people \u0026ldquo;pack their fears\u0026rdquo;, bringing things they are worried they\u0026rsquo;ll need in addition to things they really do need. It takes a leap of faith to try going without something for the first time, and sometimes you\u0026rsquo;ll cut something that you\u0026rsquo;ll find really is necessary. If you pay attention to what you don\u0026rsquo;t use on your trips, you can trim thoughtfully and bring a lighter pack each time.\nA lot of our spending is tied to our habits, and changing those habits is uncomfortable. Making changes like going without cable, eating out less, and doing more driving trips and less flying ones felt like losing something sometimes. Once we\u0026rsquo;ve made the leap, we often get used to the new routine quickly.\nBe Prepared for Emergencies Even in an ultralight pack, there are a few critical redundant items people carry and a few items only used in emergencies. It\u0026rsquo;s wise to have two ways to clean water, two ways to make fire, two light sources, and a backup way to find your way home (a compass and map) in case your phone battery dies. Having a backup plan for your most critical needs is important, because things do go wrong sometimes. Backpackers also bring a first aid kit and a communicator for emergencies, even though hopefully they won\u0026rsquo;t be used.\nThe financial equivalents are an emergency fund and insurance. Money in an emergency fund ensures that a surprise expense doesn\u0026rsquo;t keep you from paying critical bills (rent, car, utilities, food). It is money that isn\u0026rsquo;t invested to grow, but it is available to make sure critical bills are going to be paid no matter what. Carrying appropriate insurance - car insurance, home insurance, medical insurance, and disability insurance - means that in a big disaster that could easily bankrupt anyone, you\u0026rsquo;ll have others coming to help you.\nConclusion At their cores, budgeting and backpacking are both exercises in optimizing around your values, which is probably why I enjoy spending so much time on them. If, like me, you are interested in retirement and the outdoors, it\u0026rsquo;s fun to think about how the wisdom from one of these worlds applies to the other. Backpackers like to say \u0026ldquo;hike your own hike\u0026rdquo;, which means to remember that your journey is yours. Don\u0026rsquo;t worry about how fast (or slow) others go. Don\u0026rsquo;t worry about what other people think is most important. If your journey reflects your values, that\u0026rsquo;s what really matters. Safe travels!\n","permalink":"https://relentlessoptimizer.com/finance/2021/11/29/budgeting-is-like-backpacking/","summary":"I\u0026rsquo;ve been updating my backpacking loadout and learning from the \u0026ldquo;ultralight\u0026rdquo; backpacking community. I was struck by the parallels between backpack-packing and budgeting and how backpacking wisdom can apply to finance.","title":"Budgeting is Like Backpacking"},{"content":"My Samsung Galaxy Watch 4 battery ran out on the first day by 4:00pm, and I was pretty disappointed. After a few device resets and a lot of measurements, however, my watch is now using only about a third of the battery per full 24 hour day. Here\u0026rsquo;s what I learned.\nTL;DR:\nReset your Watch to fix excessive battery usage\nDo not install the Spotify app\nTurn off \u0026ldquo;Always On Display\u0026rdquo; and the gesture settings for best results\nI bought the Galaxy Watch 4 44mm LTE non-Classic, hoping to try phone-free life. On the first day, I quickly installed the apps I wanted (Gboard and Spotify), turned most things on (Always On Display, continuous health measurements) and the battery died by 4:00pm. :/\nI went back to the default settings (Always On Display off, gestures off, and default health measurement intervals). This improved my situation to about 50% battery use during a 12 hour day and about 25% overnight while I slept. Still pretty disappointing.\nAfter five days or so, I saw a few really good days with only 36% use during the 12 hour day. I made the mistake of turning on Developer Mode to try making a custom watch face. My battery life went right back to the 50% day / 25% night usage, even after turning Developer Mode off as best I could.\nI eventually decided it was time to try a device reset. You can keep your Mobile Plan settings during a reset, but I had to re-configure AT\u0026amp;T NumberSync (the watch-shares-your-phone-number feature). NumberSync setup is very unreliable - I see constant web page redirects from AT\u0026amp;T - but if I leave one Chrome tab signed in to AT\u0026amp;T and open another tab directly to the NumberSync setup URL, it eventually works.\nSince I\u0026rsquo;d read that Spotify caused problems with earlier watches, I left it uninstalled on this go-around.\nTo my surprise, the battery life was instantly drastically better. I had 80% battery left after a 12 hour day, and after my evening recharge woke up the next day with 90% left. (So, down from 36% daytime and 24% overnight use to 20% daytime and 10% overnight).\nAfter more tests, I found that if I turn on Always On Display, daytime use goes up to 36%. If I want to leave my phone at home, daytime use goes to 45%. However, if I go back to bringing my phone and turning AoD off, I\u0026rsquo;m right back to the 20% day / 10% night use I wanted.\n\u0026hellip;until I installed Spotify. My battery shot up to 50% day / 25% night, and uninstalling Spotify didn\u0026rsquo;t fix the issue - it was right back to the terrible initial battery life I\u0026rsquo;d seen. I reset the Watch again (with a slightly smoother NumberSync setup this time) and am back to the 20% day / 10% night use I\u0026rsquo;d like to see.\nIf you\u0026rsquo;re having problems with Galaxy Watch 4 battery life, try resetting your device. I suggest leaving the default settings and apps for a few days to see what your \u0026ldquo;vanilla\u0026rdquo; usage is, and then add things slowly so that if one particular thing is wrecking your battery life, you can find out what it is. In my case, apparently it was Spotify.\n","permalink":"https://relentlessoptimizer.com/life/2021-10-11-galaxy-watch-battery/","summary":"My Samsung Galaxy Watch 4 battery ran out on the first day by 4:00pm, and I was pretty disappointed. After a few device resets and a lot of measurements, however, my watch is now using only about a third of the battery per full 24 hour day.","title":"Samsung Galaxy Watch 4 Battery Life"},{"content":"The Samsung Galaxy Watch 4 recently came out, and it inspired me to try going phone-free, carrying only the watch. I spend too much time glued to my phone, and I wanted to take back my attention, but I know I need to be reachable. For me, the core problem is the endless scrolling apps - Reddit, YouTube, Google News, and a few pages-of-links websites I obsessively visit.\nThe Goal More abstractly, my goal was to have a cellular-connected device which can call, text, message, unlock my car, play music, have maps, make NFC payments, take notes, and that\u0026rsquo;s about it.\nSkipping the details, the Galaxy Watch 4 can\u0026rsquo;t quite do all of that. It doesn\u0026rsquo;t have all of the apps I need, overheats quickly during calls, and the screen is likely too small for realistic notes and conversations. It\u0026rsquo;s tantalizingly close, and maybe new apps and software updates will get it there.\nI still wanted to do my phone-free experiment, however, and had the obvious insight that it was much easier to \u0026ldquo;dumb down\u0026rdquo; my phone than find a \u0026ldquo;just smart enough\u0026rdquo; device. So, I took all of the offending apps off my phone and lived with it for two weeks. No Reddit, no YouTube, no Google News, no Google, no Amazon, no browser. My rule was that I could use those things if I wanted, but I had to dig out my laptop to do so.\nHow It Went First, I was amazed about immediately I noticed the difference and how big the difference was. The moment that I didn\u0026rsquo;t have my phone to look at every time I was bored, I was bored. When I went to pick up the kids from school, I just sat and looked around and thought about things waiting for the bell to ring. When I watched shows at night, I couldn\u0026rsquo;t browse at the same time, so I just paid attention to the show. When I wanted to look something up, I had to just go without knowing it or try to remember it.\nIt was a shock to realize just how often I would instinctively reach for my phone during a given day. I realized that most of the things I look up or learn while browsing I just don\u0026rsquo;t need to know. Without the phone, I had much more patience, energy, and attention to spend on the things and people around me. I spent more time playing catch with my kids and checking out things they made and wanted to show me. I thought more about what I wanted to do with my evenings and what I wanted to watch, and didn\u0026rsquo;t settle for borderline activities that were merely good enough \u0026ldquo;for the background\u0026rdquo;. In short, it\u0026rsquo;s been great, and I wish I\u0026rsquo;d done it sooner.\nThe Aftermath So, now that the two weeks is up, what have I kept as-is and what am I bringing back?\nIn short, I want to continue not using my phone for scrolling through content.\nI want to use Google for answering important questions, but not browsing stories. I want Amazon to quickly buy things, but not to browse product options or deals. I want YouTube to control my TV queue, but not to watch when I\u0026rsquo;m away from my couch. I want the browser to deal with links in emails, but not to surf.\nTo hopefully achieve this, I\u0026rsquo;ve left these apps off my home screen, giving me a few more seconds to decide if a given use is really necessary. I turned off automatic content from them where possible. Google and the browser no longer show stories by default. Since I\u0026rsquo;ve added them back, I\u0026rsquo;m amazed to think about how much my phone distracted me from itself, nudging me toward a story while I\u0026rsquo;m trying to search for something. At least that isn\u0026rsquo;t happening anymore. Outlook mails still sometimes interrupt me when I go to check my calendar, but I can\u0026rsquo;t see how to make the default \u0026ldquo;view\u0026rdquo; the calendar when the app starts like I do on the desktop Outlook.\nConclusion A comedian once said that as a kid he would run out his door carrying nothing, but as an adult the mere idea of going out without his keys, wallet, and phone gave him panic attacks. I look forward to the day where watches get \u0026ldquo;just smart enough\u0026rdquo; that I can go through life with completely empty pockets if I want.\nIn the meantime, my experiment reminded me that phones are tempting but malleable. You can knock enough of the \u0026ldquo;smart\u0026rdquo; out of your smartphone to make it what you want it to be, keeping things you need (like payments and maps) without things you don\u0026rsquo;t (like stories and videos) if you want.\nIf you find your phone excessively distracting, I can\u0026rsquo;t recommend a two week break highly enough. =)\n","permalink":"https://relentlessoptimizer.com/life/2021-09-24-no-phone-experiment/","summary":"The Samsung Galaxy Watch 4 recently came out, and it inspired me to try going phone-free, carrying only the watch. I spend too much time glued to my phone, and I wanted to take back my attention, but I know I need to be reachable.","title":"No Phone Experiment: Taking Back My Attention"},{"content":"I used to think that \u0026ldquo;being frugal\u0026rdquo; and \u0026ldquo;being cheap\u0026rdquo; were basically the same thing. Along my saving journey, however, I found out that the two are very different. To me, In a nutshell, \u0026ldquo;being cheap\u0026rdquo; means trying to spend as little as possible and \u0026ldquo;being frugal\u0026rdquo; means to spend as thoughtfully as possible. What do those concepts really mean?\nHere\u0026rsquo;s a more broken out comparison:\nBeing Cheap Being Frugal Don\u0026rsquo;t buy anything you don\u0026rsquo;t have to. Don\u0026rsquo;t buy anything you won\u0026rsquo;t appreciate. Buy the cheapest version of everything. Buy the best value that solves the problem. Keep until you\u0026rsquo;re forced to replace. Maintain things so they last. Ok, so how are these ideas different?\nDon\u0026rsquo;t Buy Anything… Let\u0026rsquo;s take groceries, for example. If I want to be cheap, I make a list of meals for the week and groceries to buy, and I only buy the things on the list. It\u0026rsquo;s definitely the cheapest way for us to eat. We miss out on things doing this, though. Maybe ground beef is on sale, and I know we will use it even though it\u0026rsquo;s not on the list for this week. Or I see that Rainier cherries are out this week and look good, and I know my family loves them.\nIf I\u0026rsquo;m feeling frugal, instead of asking whether something is on the list of needs, I ask whether we would appreciate it. I know we like Rainier cherries, so I\u0026rsquo;ll get them. I won\u0026rsquo;t get three different kinds of fruit, however, because I know we won\u0026rsquo;t get through them before they spoil.\nBuy the Cheapest… Continuing the grocery example, when I\u0026rsquo;m feeling cheap I\u0026rsquo;ll stick to the cheapest version of everything I can find. Red cherries are cheaper than Rainiers, so I\u0026rsquo;ll stick with them (if I get fruit at all). The store brand milk and bread will be fine.\nWhen I\u0026rsquo;m feeling frugal, I am willing to spend more if I know I appreciate the difference. My family really does love the Rainier cherries a lot more. I will still get grapes instead of cherries if the grapes are a much better deal this week, because I know my family will enjoy either of them. I think the Franz breads are worth paying more for, though I don\u0026rsquo;t think the brand milks taste any different from the store brand.\nShifting to another example, I tend to buy midrange smartphones. It\u0026rsquo;s possible to buy a smartphone for $150, but I know I appreciate a high quality screen, top-tier performance, and wireless charging, and I use my phone every day. When security updates stopped for my Pixel 2, I looked around and found that the $700 Galaxy S20 FE ticked the right feature boxes. It wasn\u0026rsquo;t a cheap choice, certainly, but I knew I\u0026rsquo;d appreciate the extra speed and features over the $500 Pixel 4a 5G. On the other hand, there was little difference between the FE and the $1,200 S20+. I\u0026rsquo;m looking for that \u0026ldquo;sweet spot\u0026rdquo; that solves the problem I want solved at the best price.\nKeep Until… Whether I\u0026rsquo;m feeling frugal or cheap, I want my things to last. I get a case and screen protector for my phone. I keep my car maintained. The difference is that if I\u0026rsquo;m feeling cheap, I\u0026rsquo;ll try not to replace something until it\u0026rsquo;s absolutely used up. I could\u0026rsquo;ve kept my Pixel 2, for example, until it wouldn\u0026rsquo;t hold a charge. If I\u0026rsquo;m feeling frugal, I\u0026rsquo;m open to replacing something if a replacement will be a lot better, but I still maintain my things so that I\u0026rsquo;m not forced to replace them before that. I\u0026rsquo;m also willing to attempt a repair even for an old item if I don\u0026rsquo;t think I\u0026rsquo;d really appreciate a replacement. Earlier this year the a heating element in our oven failed, and though the oven is at least 15 years old, we decided to try getting a replacement element first, and we successfully fixed the problem for $35.\nWhat\u0026rsquo;s the Point? To summarize, to me being cheap means not spending money unless I need to, and being frugal means not spending money unless I\u0026rsquo;ll appreciate what I get for it. In both cases I\u0026rsquo;m being mindful of my spending and trying not to waste money. The difference in mindset is really important to me, however.\nWhen I\u0026rsquo;m being cheap, I sometimes feel like I\u0026rsquo;m just scraping by and I can\u0026rsquo;t have anything that I merely want. I feel like I don\u0026rsquo;t have \u0026ldquo;enough\u0026rdquo;, no matter how much money I\u0026rsquo;m saving every month. In contrast, when I\u0026rsquo;m being frugal I feel a lot better. I don\u0026rsquo;t feel like there\u0026rsquo;s anything I can\u0026rsquo;t have, only things I don\u0026rsquo;t get that aren\u0026rsquo;t really worth getting. At the same time, I also feel good that I\u0026rsquo;m not wasting what I have, and I\u0026rsquo;m making progress toward my longer term goals by saving.\nOf course, I feel lucky that I can choose to spend more on living frugally. Many people can\u0026rsquo;t afford more than their needs every month, and they\u0026rsquo;re stuck in a difficult place until they can find more income or lower core expenses. I\u0026rsquo;m sure it feels much more painful than the \u0026ldquo;not having enough\u0026rdquo; I stumbled into voluntarily.\nIf you do have the choice, striking the right balance ideally means progress toward long term freedom without feeling like you don\u0026rsquo;t have enough along the way. If you\u0026rsquo;re feeling regret about not saving enough for the future, or feeling like you don\u0026rsquo;t have enough now, it\u0026rsquo;s a good hint to consider adjusting your balance in making spending choices.\n","permalink":"https://relentlessoptimizer.com/finance/2021/09/14/being-frugal-vs-being-cheap/","summary":"I used to think that \u0026ldquo;being frugal\u0026rdquo; and \u0026ldquo;being cheap\u0026rdquo; were basically the same thing. Along my saving journey, however, I found out that the two are very different.","title":"Being Frugal vs Being Cheap"},{"content":"It\u0026rsquo;s surprising, but keeping food costs down was a big part of sticking to our budget and ultimately retiring early. Food is the third highest spending category for US households (after housing and transportation), so it\u0026rsquo;s a big part of most budgets. It\u0026rsquo;s easier to change your food choices than to move to a new house or car, so if you want to save more, it\u0026rsquo;s a good place to start.\nSurprisingly, it takes some solid life experience to grocery shop successfully. We started out often coming home from work to an empty fridge. Next we had food, but not all of the ingredients needed for anything. Then we tried out buying things that spoiled before we got around to eating them.\nAfter a few years of this, we finally got things working. Most importantly, we make a meal and grocery list each week. At first it felt constraining to choose meals so long in advance, but it was better than shopping after work in order to eat. As we drifted toward meals without fast-spoiling ingredients, however, that flexibility came back. If we don\u0026rsquo;t eat a meal from the list, we can usually have it a few weeks later. We generally buy everything for three or four dinners per week, and find that with leftovers, meals planned in earlier weeks, and occasional meals out fill the other nights.\nFor example, this week\u0026rsquo;s meals:\nCrab Quiche with Orzo Tortellini English Muffin Mini-Pizzas Japanese Curry These days we have a stocked pantry with lots of the long-shelf-life basics needed to make things - pasta, rice, beans, flour, sugar, spices, and lots of canned things. We buy longer lasting vegetables like carrots, cabbage, and broccoli rather than salad mixes that expire within the week. Our freezer has a variety of meats, bought in bulk on sale and then portioned and sealed flat enough to quickly defrost.\nIn our most frugal days, we use the weekly grocery store ads while meal planning. If we feel like pork teriyaki for the week, we\u0026rsquo;ll get pork shoulder regardless. If we aren\u0026rsquo;t feeling too picky, however, and ground beef is on sale, we might lean toward hamburgers or beef stroganoff instead. Since ground beef freezes well, we stock up if we\u0026rsquo;re running low even if we won\u0026rsquo;t eat it that week. You can also shop sales by walking the aisles, but then you\u0026rsquo;re much more vulnerable to impulse buys and you aren\u0026rsquo;t next to your fridge and pantry to see what you already have for a just-in-time meal swap.\nIf you have a grocery list, you can take the next step and save even more by only buying the things on the list. For a long time we only allowed ourselves one \u0026ldquo;off-list-item\u0026rdquo; each per week. It meant missing out on some things, but it probably took another 20% or so off our typical grocery bill.\nWe also often shop at Costco these days. Costco has consistently great quality food and often the best prices, though they sell foods in large quantities, so you have to have the space to store it and you have to know what you eat regularly enough to get through it.\nCostco is also excellent if you don\u0026rsquo;t feel like cooking. Our family of four can eat out for under $10 at the food court, and they have the best hot dogs anywhere. If we don\u0026rsquo;t want to eat there, we can bring home a $5 rotisserie chicken or one of the \u0026ldquo;ready-to-bake\u0026rdquo; meals near the meat section.\nSo, to sum things up:\nFind meals you like to cook and eat that don\u0026rsquo;t use quick-spoiling ingredients Make a meal and grocery list each week while at home Meal plan from the weekly grocery store ads Limit buying things that aren\u0026rsquo;t on the grocery list Stock up on non-perishables and freezable ingredients when they\u0026rsquo;re on sale Get a food sealer to portion out foods for easier use Costco has \u0026ldquo;ready to cook\u0026rdquo; and \u0026ldquo;ready to eat\u0026rdquo; food at great prices ","permalink":"https://relentlessoptimizer.com/finance/2021/08/19/frugal-groceries/","summary":"It\u0026rsquo;s surprising, but keeping food costs down was a big part of sticking to our budget and ultimately retiring early. Food is the third highest spending category for US households (after housing and transportation), so it\u0026rsquo;s a big part of most budgets.","title":"Frugal Groceries"},{"content":"The latest in my series of game replays is Batman: Arkham Asylum, thanks to a recent GOG Sale that had it going for $5.\nAs a kid, I loved the fantastic \u0026ldquo;Batman: The Animated Series\u0026rdquo; cartoon. It\u0026rsquo;s well written, engaging, features a large cast from the Batman comic world, and has top notch voice talent. I\u0026rsquo;ll always consider Mark Hamill\u0026rsquo;s Joker and Kevin Conroy\u0026rsquo;s Batman to be the definitive versions of the characters.\nBatman games, on the other hand, were a mixed bag and often disappointing, like DCEU movies recently.\nFortunately, Batman: Arkham Asylum, a 2009 reboot by Rocksteady Studios which started the \u0026ldquo;Arkham\u0026rdquo; series, is great. Most importantly, they managed to get key writers and voice actors from \u0026ldquo;Animated Series\u0026rdquo; involved, so it really feels like I\u0026rsquo;m playing as the Batman I loved in the version of Gotham I remember.\nIn Arkham Asylum, Batman delivers Joker to Arkham, only to have Joker take over the asylum for a \u0026ldquo;party\u0026rdquo; he\u0026rsquo;s planned for Batman. Batman runs into a number of familiar villains along the way - Bane, Zsasz, Scarecrow, Ivy, Croc, Harley - but their involvement in the story makes sense rather than feeling like a \u0026ldquo;greatest hits\u0026rdquo; playlist with questionable segways.\nPerhaps the biggest benefit of the story is that since Joker controls the asylum, he\u0026rsquo;s watching Batman\u0026rsquo;s progress and taunting him through the whole game, putting the voice performances from Hamill and Conroy center stage.\nArkham Asylum is the first appearance of the \u0026ldquo;FreeFlow Combat System\u0026rdquo;, which also features in the later Arkham games and the Middle Earth: Shadow series. Batman can easily outmatch a few thugs at once even when you start the game, and if you take the time to really get good at the combat, he turns into an unstoppable beast. The combat is so fun that that there\u0026rsquo;s a separate mode, Challenge Mode, which just drops you in a room with waves of goons to take out, and I\u0026rsquo;ve spent hours doing so with no particular goal I\u0026rsquo;m chasing. Take a look at Combat Challenge videos on YouTube to fully appreciate what a skilled Batman can do.\nArkham Asylum also mixes things up with some rooms guarded by armed thugs which you have to take out with stealth rather than bare knuckle brawling. These \u0026ldquo;Predator Challenges\u0026rdquo; are very different from the combat and also very satisfying to complete, and again, they fit naturally in with the story.\nLike the rest of the game, Rocksteady filled the Combat and Predator modes with a constant stream of relevent and hilarious Joker taunts, some of which play only in very particular situations. Hearing them again was a big reason I was excited to replay the game, especially since I couldn\u0026rsquo;t find them collected on YouTube. Since I loved the Joker taunts so much and couldn\u0026rsquo;t find them, I collected as many as I could, so I can hear them again even if I can\u0026rsquo;t get the game to run. Enjoy.\nFavorites All I really appreciate that I don\u0026rsquo;t need the internet to get through Arkham Asylum, a rarity in modern games. The game provides you clear objectives, both in the map and via in-game dialog (\u0026ldquo;I should get back to the Morgue\u0026rdquo;). Available actions are shown onscreen along with the button to press (to grapple up, open a door, switch to \u0026ldquo;Detective Mode\u0026rdquo;, and so on). The map shows you the rough positions of remaining collectibles, so you know where to look for them. There\u0026rsquo;s even another pause menu tab with a list of the collectibles by building, so you know which buildings to return to. If you do look them up on the internet, the list means you know exactly which item to find helpful screenshots for.\nArkham Asylum didn\u0026rsquo;t run perfectly for me out of the gate. I ran into an Unhandled Exception on startup on Windows 10 (FileNotFoundException for Microsoft.DirectX.Direct3D), but fixed it by installing the latest DirectX End-User Runtime.\nArkham Asylum isn\u0026rsquo;t perfect. Some visual details (like the faces) look dated, and it is missing some features I appreciate from later in the Arkham series, like the ability to really fly around the map with your grapple and cape. That said, Arkham Asylum holds up very well after all these years and is great fun to go back and play.\n","permalink":"https://relentlessoptimizer.com/gaming/2021/08/14/batman-arkham-asylum/","summary":"The latest in my series of game replays is Batman: Arkham Asylum, thanks to a recent GOG Sale that had it going for $5.","title":"Batman: Arkham Asylum"},{"content":"After you retire, you need to decide how much you can spend each year, which investments to take the money from, and when to rebalance your investments. Collectively, this is called your \u0026ldquo;withdrawal plan\u0026rdquo;.\nThe Default - the 4% Rule Withdrawal Strategy Since the \u0026ldquo;4% Rule\u0026rdquo; is so well known, you might consider the withdrawal plan the 4% rule uses to be the \u0026ldquo;default\u0026rdquo;.\nBasically:\nYour initial retirement spending is 4% of your portfolio balance when you retire\nEach year you raise your sending to match inflation\nEach year you rebalance back to 50% stocks / 50% bonds and take out your spending for the year\nThere\u0026rsquo;s a lot to like about this strategy. It is easy to understand and follow. You don\u0026rsquo;t have to worry about cutting your spending, since the plan doesn\u0026rsquo;t ever do that. You only check your portfolio once per year to take out your spending and rebalance, so you can ignore most of the market\u0026rsquo;s noisy ups-and-downs.\nThere are downsides, too, however. First, your spending is based on your portfolio balance on a single day. If your portfolio drops 20% right before you retire, the strategy says you need to spend 20% less for life. Second, since your spending adjusts only with inflation, you won\u0026rsquo;t spend more even if your portfolio has doubled since you retired. Conversely, since you don\u0026rsquo;t make spending cuts, your spending needs to be relatively conservative just in case markets crash right after you retire. Third, you rebalance mechanically each year. In a long stock market crash, you\u0026rsquo;ll sell some of your safer bonds for stock which might have a lot further to fall.\nThe 4% rule is a fantastic planning tool, but we wanted a strategy that addressed these shortcomings.\nOur Withdrawal Strategy Our strategy is:\nSpend 3% of the previous peak balance of our portfolio, adjusted for inflation. Cut spending to 4.5% of our current portfolio, if it would otherwise be higher. Sell bonds to fund spending. Rebalance only from stocks to bonds, and only when stock prices are high. What effects do these changes have?\nSetting our spending based on our previous peak balance means our planned spending is more consistent - a person who retires just before a crash can spend the same amount as they would if they retire during the crash instead. When you\u0026rsquo;re nearing retirement, it feels a lot better not to watch your lifetime spending jumping up and down with the market.\nThis design also allows for raises in retirement. Each time the market hits new highs, our \u0026ldquo;previous peak\u0026rdquo; goes up and our allowed spending does, too. If our portfolio doubles in retirement, our spending target will, too.\nDuring a crash, we still allow raises to match inflation, but also allow for some spending cuts. If our target spending is more than 4.5% of the current balance, we will trim spending to that limit. So, if our overall portfolio drops by more than one third, we have to trim spending. Since we keep about 66% of our money in stock, stock prices must drop by more than 50% before we would make any cuts.\nIf you follow the 4% strategy and your portfolio drops one third in a crash just after you retire, you will be taking out 6% of the current balance. Our strategy causes less strain on our portfolio during situations like this.\nFinally, by rebalancing only from stocks to bonds, we hold onto our bonds during a long crash. Since we have about 33% in bonds and spend about 3% per year, we know we have about 11 years of spending in bonds while we wait for a crash recovery.\nRebalancing every year, like the 4% strategy does, has two effects. When stock prices are high, you sell some stock to \u0026ldquo;lock in\u0026rdquo; gains, increasing portfolio safety. When stock prices drop, you sell some bonds and buy stock to take advantage of low prices, increasing long term returns. Before retirement, both of these benefits are valuable. In retirement, don\u0026rsquo;t need maximum gains anymore. By rebalancing only by selling stock for bonds, we\u0026rsquo;re keeping just the \u0026ldquo;increase safety\u0026rdquo; effect and maximizing safety in long, deep market crashes.\nSo, to recap, setting spending based on our previous peak provides more predictability before retirement and allows for raises during retirement if the portfolio has grown. Accepting spending cuts during significant crashes reduces portfolio stress. Rebalancing only by selling stock at high prices increases portfolio safety, losing some long term growth that we no longer need to maximize.\nWhy 3%? We chose 3% rather than 4% as our basic spending target for a few reasons.\nMost importantly, setting spending at the previous peak means we\u0026rsquo;re emulating the worst-case scenarios for the 4% rule, when you retire at a high and promptly hit a crash. We always set our spending based on the last high, so we use a slightly lower spending rate to make up for the reduced safety. That said, our willingness to make spending cuts will also increase safety quite a bit in the worst years.\nMore personally, we retired early and will have a very long retirement. Our portfolio must keep up with inflation for a very long time. We also want a higher chance of long term spending increases in retirement, and spending less to start means more of our money can compound to support longer term increases. Finally, we worked longer than we\u0026rsquo;d planned to, so we can afford a lower spending target.\nI had originally planned for us to spend 3.5% of our previous peak and cut down to 4.75% if needed. I suspect our strategy at 3.5% / 4.75% is as safe as the 4% rule, but I haven\u0026rsquo;t dug up historical return data to formally test it.\nConclusion The 4% rule is a great planning tool, but it\u0026rsquo;s really just a starting point. Your retirement is personal, and your withdrawal strategy can be, too. If you want to get into this topic in depth, check out the book Living Off Your Money by Michael McClung. The book is an excellent, in-depth analysis of a number of strategies and provides a nice comparative analysis of them. If you want to maximize safety and are willing to be very flexible about your spending, check out the Bogleheads Variable Percentage Withdrawal (VPW) Strategy, which many Bogleheads swear by.\n","permalink":"https://relentlessoptimizer.com/finance/2021/07/23/our-retirement-withdrawal-plan/","summary":"After you retire, you need to decide how much you can spend each year, which investments to take the money from, and when to rebalance your investments.","title":"Our Retirement Withdrawal Plan"},{"content":"How should you split your retirement investments between stock and bonds? How do you make this decision? Your chosen split is called your Asset Allocation, and you\u0026rsquo;ll often see it written as two numbers; for example, 60% stock and 40% bonds is written as \u0026ldquo;60/40\u0026rdquo;. Let\u0026rsquo;s dig into it.\nGoals To decide on an asset allocation, it\u0026rsquo;s worth first thinking about your goals from your retirement portfolio. Saving for retirement isn\u0026rsquo;t the same thing from beginning to end - your goals really do change over time.\nWhen you have a long time until retirement, your goal is to grow your retirement investments as fast as safely possible. You have a large target balance to save up, so the faster your investments grow, the faster you\u0026rsquo;ll get there. Ups and downs don\u0026rsquo;t matter, as long as you don\u0026rsquo;t lose everything. Your new savings can make up for price drops (and take advantage of the discount).\nWhen you\u0026rsquo;re getting closer to retirement (say, 10 years or less), your goal is to reach your retirement target with some predictability. You have a lot saved up. You still need your portfolio to grow, but stability is starting to matter, too. You want to know when you can quit. It\u0026rsquo;s ok if your retirement date shifts a little, but you don\u0026rsquo;t want a crash to set you back five years. You are not ready to work 10 years more than planned if things go wrong. Your new savings each year can\u0026rsquo;t make up for big portfolio swings anymore.\nWhen you\u0026rsquo;re retired, your goal is to draw retirement income with reasonable stability and safety. You want a relatively stable retirement income - cutting spending by 10% might be ok, but 40% likely isn\u0026rsquo;t. You need that income to keep up with inflation, too. You want a very low risk of running completely out of money. You have no new savings, so you need what you have to last. Of course, you still need good performing investments so that you don\u0026rsquo;t have to save an enormous amount to retire.\nTo sum up, your goals always include growth and stability to some extent, but as you get closer to retirement, your need for growth decreases and your need for stability increases.\nWhy Have Stock? Stock provides great long term returns (10% per year on average), but with a lot of ups and downs. If you could put your money in a bank savings account that returned 10% per year like clockwork, that would be obviously better, right?\nUnfortunately, banks don\u0026rsquo;t have to offer 10% interest to get people to deposit money, so they don\u0026rsquo;t. Ultimately, every investor is looking for the best return for a given level of safety, so investors will flock to safer investments and \u0026ldquo;bid up\u0026rdquo; the prices until the returns are in balance with other options. This means that it\u0026rsquo;s very hard to find a \u0026ldquo;free lunch\u0026rdquo; - if you want higher returns, you have to accept more risk.\nStock has a very high long term return. The great return helps in two ways: you need a smaller target balance to get a given retirement income, and your money grows toward that target balance more quickly.\nStock also provides relatively good inflation protection. While stock prices aren\u0026rsquo;t guaranteed to rise with inflation, ultimately the businesses you own will raise prices (and wages) with inflation, so they do tend to keep up with it.\nWhy Have Bonds? If stock has a much better long term return, why hold bonds at all? The short answer is stability. While stock prices can drop by 50% or more in a severe crash, bond prices are unlikely to move more than 5% in equivalently bad times.\nIf you retire and the stock market promptly drops by half, it\u0026rsquo;s a high risk situation. In an all-stock portfolio, suddenly the 4% withdrawals you were counting on are 8% of the portfolio. The chances of your portfolio growing enough in the recovery to make up for your larger during-crash withdrawals becomes much lower.\nBonds provide a stable source of income during stock market crashes. If 40% of your portfolio is in bonds and you withdraw 4% each year, you\u0026rsquo;ve got ten years of spending while you wait for that recovery.\nIf you are not yet retired, having 40% in bonds means that our example crash reduces your portfolio by 30% instead of 50%, reducing the change to your retirement date. Not only that, but when you adjust your portfolio back to your 60/40 target, you\u0026rsquo;ll be selling normal-price bonds to buy heavily discounted stock, boosting your growth during the recovery. (This effect is called the \u0026ldquo;rebalancing bonus\u0026rdquo;.)\nIs There A \u0026ldquo;Best of Both Worlds\u0026rdquo;? If it\u0026rsquo;s only safe to spend about 4% of your portfolio each year, the ultimate investment would grow with inflation each year like clockwork and provide a dividend to spend. This investment exists, and it\u0026rsquo;s called TIPS (Treasury Inflation Protected Securities). Unfortunately, since investors flock to safe investments like this, the current (2021) return for them is 0.125%, not 4%, and even then they currently sell for more than the \u0026ldquo;face value\u0026rdquo;. You\u0026rsquo;d need an enormous portfolio to retire today with ultra-safe TIPS.\nAsset Allocation Ranges Ok, so stock provides a great long term return and bonds provide stability. You want both growth and stability, with more growth early on and more stability later.\nHere are some reasonable target ranges:\nSaving Phase Suggested Stock/Bond Allocation \u0026gt; 10 years to retirement 70/30 to 90/10 \u0026lt; 10 years to retirement 50/50 to 80/20 in retirement 30/70 to 70/30 When you have a long time until retirement, you\u0026rsquo;re holding around 80% in stock. Thanks to the \u0026ldquo;rebalancing bonus\u0026rdquo;, a small bond allocation reduces returns only minimally. It\u0026rsquo;s helpful to have bonds to get used to how they behave and the process of rebalancing.\nGetting close to retirement, you shift to closer to 60% stock, reducing returns more distinctly but providing much more predictability in your retirement date.\nIn retirement, you reduce your stock percentage further. Note that I\u0026rsquo;ve listed a large recommended range. This is because safe retirement incomes are designed around the worst-case situations. Holding more bonds both reduces your safe income (lower returns) and raises it (smaller worst-case drops). As a result, a relatively similar retirement income is safe for a surprisingly wide range of allocations.\nChoosing Your Asset Allocation I\u0026rsquo;ve explained stocks and bonds and given rough ranges, but how do you pick your specific allocation? The Bogleheads community has a great maxim for this: \u0026ldquo;Your asset allocation should depend your need, ability, and willingness to take risk\u0026rdquo;. What does this mean?\nYour need to take risk depends on how much growth you need to make your plan work. If you are retired and have just enough money, you need a high enough stock allocation to provide the income you plan to draw. In contrast, if you have a lot more than your target, you could afford a lower stock allocation. Before retirement, your need to take risk depends on how likely your savings are to grow to your portfolio goal by your desired retirement date. If you want to retire \u0026ldquo;as soon as possible\u0026rdquo;, you probably want a high stock allocation.\nYour ability to take risk is all about psychology - when you see your portfolio drop in a crash, will you be able to stick with your plan? Stock market crashes are a bad time to make changes. However, there\u0026rsquo;s no better time to really assess your ability to take risk. Use them to figure out what you can stick with comfortably make changes when things recover.\nThe absolute impact of crashes also grows with your portfolio. For us, the 2008 crash temporarily wiped away about four years worth of spending at the lowest point. Our balance dropped even with our new savings for the first time. It was rough. During the 2020 pandemic, in contrast, we lost four years of spending a one month, and we were much less willing to work extra years at that point.\nYour willingness to take risk is about your preferences. How much do you care about growth versus stability in your current situation? If you have more money than you need but want to leave the largest possible inheritance, you still have a high willingness to take risk. If you are dead set on not seeing your balance drop more than 15%, you have a low willingness to take risk.\nThink about these factors and how they apply in your situation to decide where within the suggested ranges you might want to be.\nOur Allocation and Rationale What decision did we come to ourselves? In 2021, we\u0026rsquo;re retired, and our goal is to keep our asset allocation around 65/35.\nWe worked longer than we planned and have more than we need saved up. At the same time, we need our portfolio to last through an extra-long retirement and keep up with long-term inflation. Between these two factors, we have a moderate need to take risk.\nWe\u0026rsquo;ve sat through several crashes (including last year) and we didn\u0026rsquo;t panic and make changes, so I believe we have a moderately high ability to take risk. At the same time, I appreciate knowing we have bonds to sell during a long crash, so I wouldn\u0026rsquo;t want to have only 20% bonds at this point, for example.\nWe want a fair amount of stability. We know how we would cut our spending by 20% if we needed to, but really wouldn\u0026rsquo;t want to cut more than that. Leaving a huge inheritance isn\u0026rsquo;t a goal; we want to be able to help our girls get started with saving and home-buying, potentially, but not too much more than that. We have a lower willingness to take risk.\nWith a moderate need, high ability, and lower willingness to take risk, you might expect us to choose an allocation near the middle of the range, like 50/50. I\u0026rsquo;m as concerned about long-term inflation long-term as I am about short-tern crashes, however, so 65/35 feels like the safest balance between those conflicting concerns.\nConclusion Asset Allocation is an important choice but not an easy one to make. Fortunately, a high stock allocation isn\u0026rsquo;t too hard to stick to early on (you don\u0026rsquo;t lose years of savings in a crash) and a surprisingly wide range of allocations works in retirement (bond returns lower your safe income, as bond stability raises it). Your asset allocation is also not a choice you\u0026rsquo;re locked into forever - you can and should revisit it periodically. I hope the guidance above helps you choose your allocation, but if you\u0026rsquo;re still unsure, this is a good topic to talk to a fee-only financial planner about.\n","permalink":"https://relentlessoptimizer.com/finance/2021/07/16/how-much-stock-vs-bonds/","summary":"How should you split your retirement investments between stock and bonds? How do you make this decision? Your chosen split is called your Asset Allocation, and you\u0026rsquo;ll often see it written as two numbers; for example, 60% stock and 40% bonds is written as \u0026ldquo;60/40\u0026rdquo;.","title":"How Much Stock vs Bonds"},{"content":"This blog is hosted on CloudFlare Pages with CloudFlare-managed DNS, and I finally have DNS resolution working fully. The documentation was confusing and incomplete - here is what I needed to know.\nBuy Your Custom Domain Early CloudFlare provides DNS hosting and domain management, but you can\u0026rsquo;t (currently) buy a domain from them initially. I had to buy my domain via domain.com, wait 60 days so that it could be transferred, and then go to CloudFlare to have them take over DNS management.\nCloudFlare Pages requires CloudFlare DNS management for custom domains, so I had to host on GitHub Pages for the first 60 days.\nCloudFlare Configuration You need DNS entries and you need CloudFlare Pages to know the custom domain names for resolution to fully work. You also want both the apex domain (relentlessoptimizer.com) and www (www.relentlessoptimizer.com) to resolve to the website.\nCloudFlare Pages has a \u0026ldquo;wizard-like\u0026rdquo; setup process which will do both pieces of configuration, so:\nLog in to CloudFlare. Select \u0026ldquo;Pages\u0026rdquo; on the right side navigation. Select the name of your CloudFlare Pages Site. Select \u0026ldquo;Custom domains\u0026rdquo;. Select \u0026ldquo;Set up a custom domain\u0026rdquo; and follow the steps. Do this for both your apex domain and \u0026ldquo;www\u0026rdquo; (relentlessoptimizer.com, www.relentlessoptimizer.com). Wait a while and test the name resolution. Why CloudFlare Pages? I wanted to host on CloudFlare Pages instead of GitHub Pages mostly because:\nCloudFlare offers unlimited bandwidth (vs 100 GB), even in the free tier\nCloudFlare provides basic no-JS analytics\nIn my brief page performance testing, it looks like CloudFlare provides slightly lower latency globally than GitHub Pages, though they both seem to have globally distributed by site (so it won\u0026rsquo;t take seconds to load in Australia, for example).\nMinor Gotchas I want to briefly call out a few other problems I ran into setting up the site.\nThis blog uses Hugo and is hosted in a GitHub repository. You can get GitHub Pages or CloudFlare Pages to build a Hugo site for you, but the version of Hugo that CloudFlare Pages uses was too old. I ended up setting up a GitHub Action to do the Hugo build and publish the outputs to a branch, and then I deploy to CloudFlare Pages with no build action from that branch.\nAlso, CloudFlare Pages offers some analytics, but it looks like they don\u0026rsquo;t keep anything longer than 28 days and they aren\u0026rsquo;t really geared to show views per post (just the top few URLs). I\u0026rsquo;m trying to build my own simple analytics using my Raspberry Pi. More on that in another post.\n","permalink":"https://relentlessoptimizer.com/code/2021/06/26/cloudflare-pages-custom-domain-setup/","summary":"This blog is hosted on CloudFlare Pages with CloudFlare-managed DNS, and I finally have DNS resolution working fully. The documentation was confusing and incomplete - here is what I needed to know.","title":"CloudFlare Pages Custom Domain Setup"},{"content":"Learning to budget and invest put us on a path to retire early, but our choice to keep the same budget for eight years (adding all of our raises to saving) enabled us to retire really early. In this post, I\u0026rsquo;m going to explain how we accomplished that.\nFirst, a quick recap of how we budget. Our paychecks go into a transfer account. We have monthly transfers into accounts for each category: day-to-day spending, monthly bills, irregular spending, house, car, and fun. We automatically invest the rest.\nHere was our budget from 2004 to 2012:\nCategory Per Month House (Mortgage) $2,000 Day-to-Day Spending $1,500 ($350/week) Monthly Bills $500 Irregular Spending $667 Car $333 Fun $200 Giving $250 Total $5,450 What happens when we get a raise? Before the budget, when we just had a checking account, the new money just disappeared mysteriously into new spending. With the transfer account however, our budgets stayed the same by default, so the extra money piled up in the transfer account waiting for us to intentionally choose what to do with it. We just kept investing the extra money.\nOk, but how did we keep the same budgets while inflation was slowly raising prices?\nFor many accounts, the tiny yearly decrease in purchasing power wasn\u0026rsquo;t noticeable. Take vacations, for example. We plan vacations based on our \u0026ldquo;irregular spending\u0026rdquo; balance. If it\u0026rsquo;s a little lower than last year, we automatically make slightly cheaper choices. We take more road trips instead of flying, wait for better airfare discounts, stay in slightly cheaper hotels, or spend a day less traveling and a day more at home decompressing before going back to work. We are spending less, but we really didn\u0026rsquo;t notice it.\nIt was the same story for other accounts, too. Car? Wait a bit longer to replace our cars. House? Our mortgage stayed almost constant. Irregular Spending? Spread other big purchases out a bit more.\nThe two accounts where we did notice inflation were monthly bills and day-to-day spending.\nMonthly Bills Our monthly bills would go up a bit each year, so we had to make changes to keep the same budget. For a $500 budget, our bills went up by about $10 each year (2%), so we had to cut that much.\nOver the years, we:\nCancelled Cable TV (\u0026ldquo;cut the cord\u0026rdquo;) and went to Netflix. Found Cheaper Internet (a 30/30 plan for $35/mo was awesome for a long time) Found Cheaper Cell Phone Service (Cricket Wireless and then AT\u0026amp;T Prepaid; $70 for two lines w/8GB each) Tuned our Car Insurance (Higher Deductibles, Liability only for old cars, Underinsured coverage to match car value) Lowered our Heating Bills (attic insulation, insulated window blinds, programmable thermostat) These changes each saved closer to $20 per month (cable more and heating less), so we had to make one of these tweaks every other year or so.\nDay-to-Day Spending For day-to-day spending, our initially comfortable budget became tighter over time. Most of the improvements we made there were about food.\nFirst, groceries. Initially we bought groceries whenever we needed something, browsing aisles, and wasting food (often leftovers or salad mix that got too old). The biggest improvement we made was planning our meals each weekend and making a grocery list. This reduced our impulse purchases and our food waste right away. It also saved time - we had one weekend shopping trip and rarely had to run to the store midweek for missing ingredients. Later on, we started using the weekly grocery store mailer when planning meals, which helped us to take advantage of deals. (Pork is on sale? Let\u0026rsquo;s make Pork Teriyaki). Over time, the meal lists also showed us what we should stock up on - ingredients we would reliably use before they spoiled.\nSecond, dinners out. Over time we ate out less often (from maybe six dinners per month to closer to three). We also choose cheaper meals more often (burritos, teriyaki, pizza) and expensive ones less (sushi, steak, and dumplings). We now know that if we don\u0026rsquo;t feel like cooking but the spending account is already low, Costco is an amazing option. For $10 we can have hot dogs, chicken bakes, and soft serve, or bring home a pizza which takes us two days to eat. The rotisserie chicken and the \u0026ldquo;cook and eat\u0026rdquo; meals in the back of the store are also great easy options.\nThird, lunches. We bought lunch at the cafes at work most days. Over time we got a bit pickier about choices (the $4.50 pizza instead of a $7 fancy burger). We would bring leftovers for lunch sometimes, but honestly never loved that. Eventually we started intermittent fasting (another story), so we would often skip lunch and eat a big dinner instead.\nTrimming our food spending was enough to keep our budget steady for the most part. Aside from food, day-to-day spending goes largely to Costco, Amazon, and Target for household products (paper towels, detergent, \u0026hellip;), gadgets (cables, chargers, headphones), and gifts. We didn\u0026rsquo;t trim much in these categories. We do try to wait for deals if we don\u0026rsquo;t need something soon. We like buying gadgets on Black Friday week, when possible. Getting household products and clothes from Costco has also been great.\nCaveats So, was keeping the same budget for so long worth it? Yes and no.\nYes, keeping our budget steady helped us to retire a lot earlier. If we had spent our raises, we probably would\u0026rsquo;ve been able to retire in about 20 years (instead of crossing the line originally in 10). Most of the tweaks we made to save money really didn\u0026rsquo;t hurt, either.\nI do have a few regrets, however.\nWe should\u0026rsquo;ve spent more on home improvements over the years. Our \u0026ldquo;House\u0026rdquo; budget was just the mortgage, and \u0026ldquo;Irregular Spending\u0026rdquo; really wasn\u0026rsquo;t enough for any big projects, so we didn\u0026rsquo;t do much beyond replacing things that broke during the years. We now have a separate \u0026ldquo;House\u0026rdquo; account that covers both our Property Taxes and some budget for home improvements each year.\nI also wish we\u0026rsquo;d spent a bit more on vacations. Our small budget was enough for a few short trips a year before we had kids, but with kids and more vacation time we ended up focused on a lot of camping and road trips. We created a separate vacation account to make sure we have money set aside for travel, and allocate a lot more money to it these days.\nFinally, we stuck to the budget too strictly sometimes. I remember looking for cheaper gifts for friends and family than ones I knew they\u0026rsquo;d like. I skipped buying socks on sale when I knew I\u0026rsquo;d need them soon to keep within the budget. Those choices made us feel bad and weren\u0026rsquo;t necessary. These days, we care about sticking to the budget over the year, but don\u0026rsquo;t have to stay perfectly within it every week or month. One big benefit of spending less than you earn is that you have the money to go over budget here and there for things you\u0026rsquo;ll really appreciate.\nAfter 2012 You might wonder what happened after 2012. In 2012, we \u0026ldquo;hit our number\u0026rdquo; - we had saved enough to retire. We weren\u0026rsquo;t quite ready to quit, so we decided to work \u0026ldquo;one more year\u0026rdquo; and raise our spending to match what our bigger retirement portfolio would support. This is apparently pretty common among people about to retire. We took the leap to early retirement in 2014, went back to work in 2015/2016, and quit again in 2020.\nOur budget now supports twice-a-month housekeeping, much more travel, more home improvements, a higher car budget, and more giving. Even with the increases, we\u0026rsquo;re now spending a much lower percentage of our portfolio than we did in 2014.\nShould we just have spent more like our current budget the whole way along? Maybe. I was really glad knowing we could quit in 2012. That freedom also gave me the confidence to switch to working part time, which I\u0026rsquo;ve loved.\nConclusion In \u0026ldquo;How Long Does It Take To Retire\u0026rdquo;, our sample couple would retire eight years earlier by cutting spending by 1% per year and saving the money. We effectively did that in our real lives (keeping our budget despite 2% inflation). It\u0026rsquo;s possible, and it\u0026rsquo;s a great way to accelerate your early retirement.\nIf you do the math and find you\u0026rsquo;re already on track to retire as early as you want, you might be able to spend more now. If you want to retire as early as possible, trimming your fixed bills and optimizing your food spending can go a long way. What should you do? That\u0026rsquo;s up to you. =)\n","permalink":"https://relentlessoptimizer.com/finance/2021/06/09/how-we-kept-the-same-budget-for-eight-years/","summary":"Learning to budget and invest put us on a path to retire early, but our choice to keep the same budget for eight years (adding all of our raises to saving) enabled us to retire really early.","title":"How We Kept The Same Budget for Eight Years"},{"content":"Once you retire, which accounts should you take your retirement spending from first? If you retire before age 59.5, how do you get IRA money out at all? Are there any retirement tax surprises to watch out for?\nIf you are many years from retirement, you don\u0026rsquo;t need to worry about this stuff. Save in the right account types with the right investments and don\u0026rsquo;t try to pre-plan for your 2040 taxes right now. Tax laws change.\nApproximate Federal Taxes Taking your retirement money in the right mix from different account types can drastically lower your taxes. I tried to write an accurate but simplified summary of the tax rules. It was still a mess. So here\u0026rsquo;s a version which provides approximate tax amounts with much, much less complexity.\nFirst, there are three types of income:\nIncome Type Tax % Sources Ordinary 10% - 37% - Job Income\n- Social Security Income*\n- Tax-Deferred withdrawals (ex: IRA)\n- Taxable Bond interest Qualified 0% - 24% - Taxable withdrawals (capital gains)*\n- Taxable Stock Dividends* Tax-Exempt 0% - Tax-Free withdrawals (ex: Roth IRA)\n- Tax-Exempt Bond interest Caveats (*) that matter:\nStock must be held for over one year for dividends to be Qualified income.\nStock must be held for over one year for capital gains to be Qualified income.\nSocial Security is ordinary income, but not all of it is taxed.\nNext, there are tax brackets. For a married-filing-jointly couple in 2021:\nRough Bracket Sizes Ordinary Tax Rate Qualified Tax Rate $25,000 0% 0% $20,000 10% 0% $60,000 12% 0% $90,000 22% 15% $160,000 24% 19% [more] 32%-37% 19%-24% The first \u0026ldquo;bracket\u0026rdquo; is really the \u0026ldquo;Standard Deduction\u0026rdquo;, and is tax-free for all income types. I\u0026rsquo;ve made the bracket sizes even numbers, but they actually change a little every year. The real \u0026ldquo;qualified\u0026rdquo; bracket sizes are different than the ordinary ones. There\u0026rsquo;s a 3.8% \u0026ldquo;net investment income tax\u0026rdquo; that shows up halfway through the \u0026ldquo;15%\u0026rdquo; qualified bracket. Crazy-pants.\nYour income \u0026ldquo;fills up\u0026rdquo; each tax bracket in order. Ordinary income is \u0026ldquo;filled in\u0026rdquo; first, and then qualified income second. If only a little of your income reaches into a new tax rate, only that part is taxed at the higher rate.\nSuppose you have $40,000 in ordinary income and $60,000 in qualified income. Here\u0026rsquo;s your estimate:\nRough Bracket Sizes Ordinary Income Ordinary Rate Qualified Income Qualified Rate Tax $25,000 $25,000 0% 0% $0 $20,000 $15,000 10% $5,000 0% $1,500 $60,000 12% $55,000 0% $0 What happened? Ordinary income went first. $25,000 went into the first (0%) tax bracket. The remaining $15,000 went into the second bracket, for $1,500 ($15,000 x 10%) in tax. Next, $5,000 of qualified income filled the last of the second bracket, adding $5,000 x 0% = $0 tax. Finally, the remaining $55,000 of qualified income went into the third bracket, also adding $0 tax.\nIn total, your $100,000 in income cost only $1,500 in tax (1.6%). If instead you took the whole $100,000 from a tax-deferred account, your tax would be $8,600.\nIf you\u0026rsquo;re saying, \u0026ldquo;Wow, that\u0026rsquo;s way less good!\u0026rdquo;, you\u0026rsquo;re right! That\u0026rsquo;s why this topic matters. If you keep your ordinary income in the first two brackets, they are barely taxed. If your qualified income stays within the first three brackets, it\u0026rsquo;s totally tax-free.\nHow close are these estimates to the real numbers? Use the TaxCaster app to get real numbers quickly. The exact numbers are $1,523 (vs $1,500) and $8,632 (vs $8,600). Close enough? Close enough.\nWhich Accounts First? Now that we know some tax basics, where should your retirement spending come from?\nIn short, usually this order:\nTaxable Dividends and Interest Tax-Deferred Withdrawals Taxable or Tax-Deferred Withdrawals Tax-Free Withdrawals Why? Let\u0026rsquo;s dig in a bit.\nFirst, you get to pay tax on any dividends and interest in your taxable account no matter what, so you might as well use them for part of your spending. If your account is set up to reinvest them, change it to withdraw them instead when you retire.\nSecond, as you saw above, the first bracket (standard deduction) is tax-free no matter what. Take some money from your tax-deferred accounts to take maximum advantage of that 0% rate.\nThird is a toss up. You can take more tax-deferred withdrawals at the relative bargain 10% and 12% tax rates in the next two brackets. Or, you could take from taxable accounts for zero tax.\nHuh? Why not just use taxable accounts for all of this range?\nWell, when you turn 72, you will have Social Security income and mandated minimum tax-deferred withdrawals (see RMDs in the next section). Together, these might cause a much higher tax rate than you had earlier in retirement. If they do, it might be a better overall deal to spend IRA money sooner to reduce taxes later.\nFourth, your tax free accounts are always free, of course, so if you are near one of the \u0026ldquo;tax surprises\u0026rdquo; below, you can lower your taxable income by taking some tax free money to avoid them. Tax-free accounts are also best to spend last because if your portfolio grows really well, they don\u0026rsquo;t hurt so much when you raise your retirement income and are the most tax-efficient for people to inherit.\nRetirement Tax Surprises With all of the different income sources and subsidies that come together in retirement, there are some combinations which can cause really high tax increases for small changes in income. Look out for:\nSocial Security Taxation As mentioned, your Social Security income is not all taxed. There\u0026rsquo;s a formula which decides how much (between 0% and 85%) is taxed. If you have $45,000 in other income, your Social Security income is 85% taxed. Otherwise, put your numbers into TaxCaster and then try again with $1,000 less in non-Social Security income. If your tax goes down by $400+, it\u0026rsquo;s because you are in the \u0026ldquo;Social Security tax bump\u0026rdquo;, and taking some tax-free account money could reduce your taxes quite a bit.\nRequired Minimum Distributions (RMDs) At age 72 you start being required to take money out of your tax-deferred accounts. The government is tired of waiting for that tax money. This can mean much higher taxes than the earlier part of your retirement.\nWhen you retire, find out what your Social Security income and early RMD amounts will be. If the taxes are much higher than your pre-age-72 plan, meet with a tax professional to work through your options for optimizing things.\nMedicare IRMAA Thresholds If you have Medicare, your premiums go up if your income is too high. These are called \u0026ldquo;IRMAA\u0026rdquo; charges. In 2021, these happen at a (married-filing-jointly) income over $176k.\nACA / Obamacare Subsidy Cliff If you are under 65 and get health insurance from the ACA exchanges, you can get (substantial) subsidies to help pay for your premiums. These subsidies abruptly disappear at 400% of the \u0026ldquo;federal poverty level\u0026rdquo; for your household size. This is called the \u0026ldquo;ACA subsidy cliff\u0026rdquo;. In 2021, for two people, that\u0026rsquo;s $69,680. If your income will be close to that amount, it\u0026rsquo;s probably a very good deal to stay just under that threshold.\nGetting IRA Money Before Age 60 The advice above is great if you\u0026rsquo;re 60+ and can pull from any account, but how do you get money out of tax-deferred retirement accounts (401(k)s and IRAs) before 60? The rules seem clear: pay a 10% penalty for withdrawals before age 59.5. However, there is a workaround - \u0026ldquo;Roth ladders\u0026rdquo;. There are two rules which make them work:\nFirst, you are allowed to \u0026ldquo;convert\u0026rdquo; money from a regular IRA to a Roth IRA at any time. You pay taxes on any amount you convert as ordinary income, since you didn\u0026rsquo;t pay tax putting it into the IRA and won\u0026rsquo;t pay tax taking it out of the Roth IRA. You can convert as much as you want each year no matter your income. No limits.\nSecond, you are allowed to take contributions out of a Roth IRA any time. You only have to wait until age 59.5 to take out growth. Roth conversion amounts count as contributions.\nSo, can you just convert IRA money to a Roth and immediately take it out? No, the government thought of that. There\u0026rsquo;s one more rule - you can\u0026rsquo;t take out a Roth converted amount for five years after the conversion.\nHmm, so what if you convert one year of spending every year, and then after five years, you\u0026rsquo;ll have a five-year-old conversion available to take out? This is a Roth ladder, and this is allowed.\nSo, Roth ladders require you to pay for the first five years of retirement some other way. If you have a brokerage account, you can use that. If you contributed to your Roth IRA while working, those contributions are usable immediately. You could do some last saving in a bank account to cover it. Or, if you have to, use IRA money and pay the penalty for the first few years.\nAlso, note that you\u0026rsquo;re still paying the same tax as you would from regular IRA withdrawals - you\u0026rsquo;re converting one year of spending per year. This isn\u0026rsquo;t a tax break, just a way to use your IRAs early.\nYou might read about another option for early withdrawals - \u0026ldquo;Substantially Equal Periodic Payments\u0026rdquo; (SEPP). Roth ladders are just better, though. If you start SEPP payments, you must continue until age 60. If you make a mistake, you owe penalties on everything you\u0026rsquo;ve taken out. A Roth ladder does the same thing with more safety and flexibility.\nDonating Money I know, this is getting long. A quick word on donating money - if you have a plush retirement and want to make a lot of charitable donations, read about \u0026ldquo;qualified charitable donations\u0026rdquo; (QCDs) and \u0026ldquo;donor advised funds\u0026rdquo; (DAFs). These are ways you can get money from your retirement accounts to charities without triggering any taxes in the middle.\n","permalink":"https://relentlessoptimizer.com/finance/2021/06/05/getting-retirement-money-out/","summary":"Once you retire, which accounts should you take your retirement spending from first? If you retire before age 59.5, how do you get IRA money out at all?","title":"Getting Retirement Money Out"},{"content":"You\u0026rsquo;re ready to start saving for retirement, but there are several different accounts you could use. Brokerage accounts, IRAs, Roth IRAs, 401(k)s. Where should your retirement savings go, and why?\nRetirement Account Types Broadly, there are three categories of retirement accounts, called \u0026ldquo;taxable\u0026rdquo;, tax-deferred\u0026quot;, and \u0026ldquo;tax-free\u0026rdquo;.\nFirst, you could just open a regular brokerage account to buy index funds (or individual stocks, or other mutual funds). These are just like a regular bank account. You put in regular after-tax money, and you pay tax on any dividends you earn every year. When you sell shares of a fund, you also pay capital gains tax on any gains since you bought it. You can put as much money in as you want, and take it out whenever you want. These accounts are \u0026ldquo;taxable\u0026rdquo; accounts, since they just follow the same tax rules as a regular bank account.\nIf you save in an IRA, 401(k), or 403(b) instead, you get some bonuses. First, you get to deduct your contributions from your taxable income. If you are in the 25% tax bracket and you put $1,000 into an IRA, you put in $1,000 but then get $250 off on your federal taxes. Overall, you got $1,000 in retirement money for only $750 less in after-tax income. Even better, any dividends or gains you get inside these accounts doesn\u0026rsquo;t get taxed, so they grow as much as possible. There is a downside, however - you have to pay tax on all of the money you take out as if it was normal income. You also (normally) can\u0026rsquo;t get the money out until you reach age 59.5. There are limits to how much you can put in each year. These accounts are \u0026ldquo;tax-deferred\u0026rdquo;, because you defer any tax on the money until you take it out.\nYou can also save in an account called a Roth IRA. Like the IRA, any dividends or gains in the account are tax-free. Unlike a normal IRA, though, the contributions are not deducted from your taxes. In exchange, when you take the money out, you pay no tax at all. You can\u0026rsquo;t take any growth in the account until age 59.5, but you can take out your original contributions any time. Some 401(k) accounts also let you make \u0026ldquo;Roth contributions\u0026rdquo; to them, which act just like a Roth IRA. These accounts are \u0026ldquo;tax-free\u0026rdquo;, because you pay no tax on the growth from them.\nWhich is Best? Which account type should you use? As I\u0026rsquo;ve said earlier, your taxes are usually much lower when you retire. So, most people should use a tax-deferred account like a 401(k) or IRA first, getting a big tax discount now rather than a smaller one later.\nFor an IRA, you may only contribute a certain amount per year ($6,000 in 2021, or $7,000 if you are age 50 or older) and you may only contribute if your income is under a certain limit ($198,000 for a married-filing-jointly couple in 2021).\nFor a 401(k), there is also an annual contribution limit ($19,500 in 2021, or $26,000 if you are 50+), but no income limit.\nAfter you\u0026rsquo;ve filled up your tax-deferred options, look for tax-free options next. The IRA contribution limit is shared with Roth IRAs, so if you contributed as much as you\u0026rsquo;re allowed to an IRA, you can\u0026rsquo;t contribute anything to a Roth. While there is an income limit for Roth IRA contributions, there\u0026rsquo;s a weird tax rule which allows you to contribute after-tax to a regular IRA and then move that money into a Roth IRA. This is called a \u0026ldquo;backdoor Roth\u0026rdquo; contribution.\nIf your 401(k) allows \u0026ldquo;after-tax contributions\u0026rdquo; (separate from regular and Roth contributions) and \u0026ldquo;in-service distributions\u0026rdquo;, you can contribute money over the normal 401(k) limit as \u0026ldquo;after-tax\u0026rdquo; contributions and then ask your company 401(k) provider to turn it into a Roth 401(k). This is called a \u0026ldquo;mega backdoor Roth\u0026rdquo; contribution. There is a limit to how much your 401(k) contributions plus any company match plus any after-tax contributions can be ($57,000 in 2021), so the limit for just your after-tax contributions depends on that.\nIf you\u0026rsquo;ve hit the tax-deferred and tax-free contribution limits and still have more to save (bravo!), it\u0026rsquo;s finally time to contribute to regular taxable accounts.\nSpecial Cases I\u0026rsquo;ve said taxes are usually much lower in retirement. If, for some reason, you expect higher taxes in retirement, save in tax-free accounts first.\nIf you have money you want to save for retirement but might need it sooner, you can save in a taxable account so that you can get the money early if you need it. For example, if you\u0026rsquo;re worried that the college fund for your kids won\u0026rsquo;t be enough, you could put some savings in a taxable account for easy access if needed.\nFinally, if you\u0026rsquo;re getting close to retirement and will retire before age 59.5, you should save up for the last few years in a taxable account. Basically, you can get money from tax-deferred and tax-free accounts before age 59.5, but you need a few years of spending in a taxable account to get things started.\nWhich Investments in Which Accounts? So, if you decide you want 75% stock and 25% bonds, should each of your accounts have exactly that ratio? Well, no.\nFirst, let me say that if you only have one kind of account (all tax-deferred), you don\u0026rsquo;t have to worry about this. It\u0026rsquo;s also not a big deal until your account balances get relatively large. (So you don\u0026rsquo;t need to figure this out to get started.)\nThat said, money you take out of a tax-free account is tax-free, money from a tax-deferred account is taxed at high rates, and money from a taxable account is taxed at moderate rates. You ideally want your fast-growing investments (stock) in your tax-free accounts, and your slow-growing investments (bonds) in your tax-deferred accounts.\nIn your taxable accounts, interest from bonds is taxed at a high rate, while dividends and gains from selling stock are taxed at a lower rate. So, if all of your bonds fit in your tax-deferred accounts, great. If not, consider tax-exempt bonds in your taxable account.\nAnother consideration is \u0026ldquo;rebalancing\u0026rdquo; - exchanging one investment for another to keep your target stock and bond percentage consistent. If you rebalance in a taxable account, you have to pay taxes on any gains from stock you sell. You might end up keeping some stock in your tax-deferred accounts just so that you can do your shuffles there.\nThese tactics can help optimize your taxes somewhat, but don\u0026rsquo;t let these considerations keep you from having the percentage of stocks and bonds you feel comfortable with. If you want more bonds than you have room in your IRA for, buy them. Don\u0026rsquo;t let the \u0026ldquo;tax tail wag the dog\u0026rdquo; as they say. Also, if you have enough retirement savings that the interest and dividends are causing you a lot of taxes, it\u0026rsquo;s a very good sign for your retirement. =)\n","permalink":"https://relentlessoptimizer.com/finance/2021/06/04/retirement-account-types/","summary":"You\u0026rsquo;re ready to start saving for retirement, but there are several different accounts you could use. Brokerage accounts, IRAs, Roth IRAs, 401(k)s.","title":"Retirement Account Types"},{"content":"In \u0026ldquo;How Much You Need To Retire\u0026rdquo;, you learned that you need to save about 25 times your retirement spending to retire. When I first heard that number, I thought saving that much would take forever. Fortunately, there are two giant tailwinds to help: compounding returns and decreasing spending.\nEarly Retirement Sample Situation Now, let\u0026rsquo;s set up a (reasonable) example so we have some concrete numbers to talk about. Let\u0026rsquo;s say you\u0026rsquo;re married, and this is your situation:\nWhile Working Per Year Household Income $100,000 Social Security and Medicare Tax $7,650 Federal Taxes $7,450 Mortgage $30,000 Retirement Saving $10,000 Other Spending $45,000 What will things look like for this couple when retired?\nRetired Per Year Federal Taxes ?? Property Taxes (mortgage paid off) $6,000 Health Insurance (no longer work-provided) $4,000 Other Spending $45,000 First, our couple is done saving for retirement, and they no longer have to pay Social Security and Medicare tax. With a paid off house, their $30,000 mortgage ($2,500/mo) is replaced by $6,000 in property taxes. However, they have to pay for healthcare.\nHow much are their Federal Taxes?\nAt the highest, their taxes will now be $3,712, if all of their retirement income comes from an IRA or 401(k) and taxed as \u0026ldquo;ordinary income\u0026rdquo;. Even so, they will pay less than a quarter of the tax they had to pay when working! If half of their spending comes from Social Security ($28k), their total tax goes down to just $823, because their Social Security will only be partially taxed. If instead of Social Security, half comes from dividends in a taxable brokerage account, their taxes go down to just $323 because dividends at this income level aren\u0026rsquo;t taxed at all!\nSo, in summary, our couple went from paying $15,100 in federal taxes each year to $3,712 (worst-case) or potentially less than $1,000 per year depending on where their retirement income comes from.\nSee Getting Retirement Money Out for more on optimizing taxes in retirement.\nRetired Per Year Retirement Income (all IRA or 401(k)) $59,000 Federal Taxes $3,712 Property Taxes (mortgage paid off) $6,000 Health Insurance (no longer work-provided) $4,000 Other Spending $45,000 Let\u0026rsquo;s stick with the worst-case retirement taxes and no income from Social Security. Our couple estimates that they need $59,000 in retirement income, which means $1,475,000 saved up ($59k x 25).\nAbout Inflation When talking about retirement money, you need to remember inflation. Something which cost $100 in 1991 costs about $200 in 2021, 30 years later. If you decide you\u0026rsquo;ll need $1,500,000 to retire, you want to know when you\u0026rsquo;ll have that much in today\u0026rsquo;s dollars, rather than the less-valuable dollars of the distant future. To do that, you just need to find out the \u0026ldquo;real\u0026rdquo; or \u0026ldquo;inflation-adjusted\u0026rdquo; returns of different investments.\nAn example: If you invested $100 in an S\u0026amp;P 500 index fund in 1991 and left it alone, that account balance would now be $2,230. However, since prices are about twice as high now, the account is really worth about $1,115 in \u0026ldquo;1991-equivalent dollars\u0026rdquo;. The S\u0026amp;P 500 had a 10.94% annualized return since 1991, and an 8.46% inflation-adjusted annualized return.\nBelow, all of my numbers are after-inflation returns, so you can use them to understand how money you invest will grow in \u0026ldquo;today-equivalent dollars\u0026rdquo;.\nCompounding Returns Between 1871 and 2021, an S\u0026amp;P 500 index fund provided an after-inflation annualized return, including dividends, of 7.04% per year. How much does this matter?\nIf you\u0026rsquo;re saving $10k per year, in year two you\u0026rsquo;ll find that the $10,000 from the first year grew to $10,704. Not terrible, but not much of an impact compared to the money you put in. After a while, though, that growth really starts to pile up:\nYear Start Balance Growth You Add End Balance 1 $10,000 $10,000 2 $10,000 $704 $10,000 $20,704 3 $20,704 $1,458 $10,000 $32,162 4 $32,162 $2,264 $10,000 $44,426 5 $44,426 $3,128 $10,000 $57,553 6 $57,553 $4,052 $10,000 $71,605 7 $71,605 $5,041 $10,000 $86,646 8 $86,646 $6,100 $10,000 $102,746 9 $102,746 $7,233 $10,000 $119,979 10 $119,979 $8,447 $10,000 $138,426 After ten years, you contributed a total of $100k, but the account is worth $138k, and the growth is almost as much as your contributions.\nYear Start Balance Growth You Add End Balance 11 $138,426 $9,745 $10,000 $158,171 12 $158,171 $11,135 $10,000 $179,306 13 $179,306 $12,623 $10,000 $201,929 14 $201,929 $14,216 $10,000 $226,145 15 $226,145 $15,921 $10,000 $252,066 16 $252,066 $17,745 $10,000 $279,811 17 $279,811 $19,699 $10,000 $309,510 18 $309,510 $21,790 $10,000 $341,299 19 $341,299 $24,027 $10,000 $375,327 20 $375,327 $26,423 $10,000 $411,750 After 20 years, you make another $100k in contributions but the balance has shot up to $411k. The growth next year will be almost three times your contribution.\nYear Start Balance Growth You Add End Balance 21 $411,750 $28,987 $10,000 $450,737 22 $450,737 $31,732 $10,000 $492,469 23 $492,469 $34,670 $10,000 $537,139 24 $537,139 $37,815 $10,000 $584,953 25 $584,953 $41,181 $10,000 $636,134 26 $636,134 $44,784 $10,000 $690,918 27 $690,918 $48,641 $10,000 $749,559 28 $749,559 $52,769 $10,000 $812,328 29 $812,328 $57,188 $10,000 $879,515 30 $879,515 $61,918 $10,000 $951,433 31 $951,433 $66,981 $10,000 $1,028,414 32 $1,028,414 $72,400 $10,000 $1,110,815 33 $1,110,815 $78,201 $10,000 $1,199,016 34 $1,199,016 $84,411 $10,000 $1,293,427 35 $1,293,427 $91,057 $10,000 $1,394,484 36 $1,394,484 $98,172 $10,000 $1,502,656 After 36 years, $10k per year has grown into just over $1.5 million, enough for our sample couple to retire.\nTo summarize, over time, compounding returns are what really enable retirement.\nDecreasing Spending Hopefully, you look at the numbers above and are excited to see how much time will grow your money. You might also be discouraged, though, because it takes a long time for that compounding ball to really get rolling.\nIs there anything you can do to speed it up, or do you just get it going and then have to sit on your hands for a few decades? That\u0026rsquo;s where decreasing spending picks up.\nOnce you have an effective budget, you\u0026rsquo;re in control of how much you spend. At first, you set aside savings to get that ball rolling. What happens if as you get raises and find ways to trim your bills, you keep choosing to save more and more?\nIn this example, let\u0026rsquo;s see what happens if every year you find another $500 to save. Since you spend just under $50,000 per year on \u0026ldquo;Other Spending\u0026rdquo;, this is only a 1% cut to your spending each year (and saving an extra 0.5% of your pre-tax income).\nDo you think it will help much?\nYear Start Balance Growth You Add End Balance Retirement Budget Portfolio Needed 1 $10,000 $10,000 $59,000 $1,475,000 2 $10,000 $704 $10,500 $21,204 $58,500 $1,462,500 3 $21,204 $1,493 $11,000 $33,697 $58,000 $1,450,000 4 $33,697 $2,372 $11,500 $47,569 $57,500 $1,437,500 5 $47,569 $3,349 $12,000 $62,918 $57,000 $1,425,000 6 $62,918 $4,429 $12,500 $79,847 $56,500 $1,412,500 7 $79,847 $5,621 $13,000 $98,469 $56,000 $1,400,000 8 $98,469 $6,932 $13,500 $118,901 $55,500 $1,387,500 9 $118,901 $8,371 $14,000 $141,271 $55,000 $1,375,000 10 $141,271 $9,946 $14,500 $165,717 $54,500 $1,362,500 11 $165,717 $11,666 $15,000 $192,383 $54,000 $1,350,000 12 $192,383 $13,544 $15,500 $221,427 $53,500 $1,337,500 13 $221,427 $15,588 $16,000 $253,016 $53,000 $1,325,000 14 $253,016 $17,812 $16,500 $287,328 $52,500 $1,312,500 15 $287,328 $20,228 $17,000 $324,556 $52,000 $1,300,000 16 $324,556 $22,849 $17,500 $364,904 $51,500 $1,287,500 17 $364,904 $25,689 $18,000 $408,594 $51,000 $1,275,000 18 $408,594 $28,765 $18,500 $455,859 $50,500 $1,262,500 19 $455,859 $32,092 $19,000 $506,951 $50,000 $1,250,000 20 $506,951 $35,689 $19,500 $562,141 $49,500 $1,237,500 21 $562,141 $39,575 $20,000 $621,715 $49,000 $1,225,000 22 $621,715 $43,769 $20,500 $685,984 $48,500 $1,212,500 23 $685,984 $48,293 $21,000 $755,277 $48,000 $1,200,000 24 $755,277 $53,172 $21,500 $829,949 $47,500 $1,187,500 25 $829,949 $58,428 $22,000 $910,377 $47,000 $1,175,000 26 $910,377 $64,091 $22,500 $996,968 $46,500 $1,162,500 27 $996,968 $70,187 $23,000 $1,090,154 $46,000 $1,150,000 28 $1,090,154 $76,747 $23,500 $1,190,401 $45,500 $1,137,500 Believe it or not, this change brought your retirement forward by eight years, from a 36 year wait to a 28 year wait.\nFirst, the bigger savings means that after 28 years, you saved $1,190,401 instead of $812,328. It\u0026rsquo;s a big difference. In addition, however, you slowly trimmed your expenses from $59,000 at first to $45,500 at the end, reducing the amount you needed for retirement from $1,500,000 to $1,137,500. Together, these two changes gave you eight extra years of freedom.\nIs this plausible? Saving an extra 0.5% per year sounds reasonable, but cutting your spending from $59k to $45.5k, even over a long time, sounds hard.\nHowever, when there\u0026rsquo;s 2% inflation (as has been the average in recent US history), this really means getting by with just a 1% raise in spending each year. If you only got 1% raises, could you manage? You need to find things to trim here and there as prices go up, but it\u0026rsquo;s possible, we did it, and it can make a huge difference in your retirement over time.\nYears to Retirement Table In our original example, we saved 10% of our income and our retirement budget was 60% of our income. What happens at higher and lower savings rates?\nIn this table, I keep 30% of income as the \u0026ldquo;fixed\u0026rdquo; part (taxes and mortgage, approximately) and assume that every time you save an extra 5% of your income, your spending also goes down by 5% of your income. Here are the \u0026ldquo;years to retirement\u0026rdquo; for various savings rates:\nSave Fixed Spend Years to Save One Year Years To Retire 5% 30% 65% 13.0 46.6 10% 30% 60% 6.0 36.0 15% 30% 55% 3.7 29.5 20% 30% 50% 2.5 24.8 25% 30% 45% 1.8 21.0 30% 30% 40% 1.3 17.8 35% 30% 35% 1.0 14.9 40% 30% 30% 0.8 12.4 45% 30% 25% 0.6 10.0 50% 30% 20% 0.4 7.8 As you can see, the original \u0026ldquo;save 10%, need 60%\u0026rdquo; row has 36 years to retirement. Ramping up saving from 10% to 20% brings your retirement date from year 36 to year 25, 11 years sooner! This is mostly because you doubled your savings (10% -\u0026gt; 20%), but the slightly reduced retirement spending ($60k to $50k) also helped.\nIf you went crazy and doubled savings again, you might expect the retirement date not to get much better, because there\u0026rsquo;s a lot less time for the compounding ball to roll. However, this isn\u0026rsquo;t the case - going from 20% to 40% savings brings retirement another 12 years closer, from year 25 to year 12.5. In this latter case, the biggest difference is spending dropping drastically ($50k to $30k).\nSpending only 30% of your income isn\u0026rsquo;t realistic for most people, but with a huge income or a very modest lifestyle, it\u0026rsquo;s possible - that\u0026rsquo;s how a lot of the very early retirement bloggers have done it.\nThe big point here is that while compounding can grow huge amounts of money over time, having a high savings rate (or relentlessly raising it) can also drastically bring in your retirement date through the combination of more money to grow and less money you need.\nConclusion So, how long do you need to retire? If you save 10% of your income and need 60% of it in retirement, you should be done in about 36 years with an S\u0026amp;P 500 index fund. Doubling your savings rate will allow you to retire about ten years sooner, as will halving your retirement expenses. Since saving more also normally means spending less, even small cuts along the way can make a huge difference.\nWant to plug in your own numbers? Download the Excel spreadsheet I used for these tables and play around. =)\n","permalink":"https://relentlessoptimizer.com/finance/2021/06/03/how-long-until-you-can-retire/","summary":"In \u0026ldquo;How Much You Need To Retire\u0026rdquo;, you learned that you need to save about 25 times your retirement spending to retire.","title":"How Long Until You Can Retire?"},{"content":"So, you\u0026rsquo;ve decided to start saving for retirement. How much money will you need to save up?\nTL;DR: You need about 25 times your retirement spending invested in a 50% stock / 50% bonds portfolio for a 30 year retirement. Put another way, you can spend about 4% of your initial portfolio balance per year. For a 50+ year retirement, plan on 3.5% (or save 28.5 times your spending) and have 60-75% stock.\nRetirement Spending vs. Pre-Retirement Income Notice that the rule of thumb above is a multiple of your retirement spending, not your pre-retirement income. How are they different?\nIn retirement, you will (or can) have:\nNo payroll taxes (Social Security and Medicare Tax; 7.65% of your gross pay) Much Lower Income Tax (for us, about 20% income tax when working to less than 2% retired) No mortgage (pay off your house first) No retirement saving (you finished that already) No kids to support (if you have some still at home now) Health Care to pay for (via Medicare or the ACA Exchange) See our example couple, who earns $100k and goes from paying $15.1k tax when working to $3.7k or less in retirement.\nYour retirement spending is likely to have a lot of other small differences - maybe more spending on hobbies but less on gas since you\u0026rsquo;re not commuting - but they are hard to predict before you make the leap into post-work life.\nYou may be tempted to try to make a precise estimate, but unless you\u0026rsquo;re quite close to retirement, a lot is likely to change between now and then. To get an initial idea of the income you\u0026rsquo;ll need in retirement, take your annual income and take out taxes, your mortgage, and your current retirement savings, and add back property taxes. When you start getting close to retirement, you can get more precise by getting current health insurance costs and subsidies for your planned income and adding any remaining mortgage payoff amount, among other things.\nDon\u0026rsquo;t Forget Social Security It\u0026rsquo;s easy to dismiss Social Security as an income source. You may think Social Security won\u0026rsquo;t be there when you retire, that it will start paying too long after you retire, or that it will not cover much of your spending, but it\u0026rsquo;s worth looking up your benefit and factoring it in. You can find your income history from your Social Security statement, then fill in the Social Security calculator to see your benefit with no further contributions.\nIn 2021, a couple taking Social Security at age 70 with the maximum benefit would get $93,480 per year. Even half of that covers a significant retirement budget when there is no mortgage and minimal taxes to pay. In our case, even with only half-length careers, we\u0026rsquo;ll still get 75% of the maximum benefit. Social Security pays more of lower incomes, so your last working years increase your benefit much less than the first ones.\nWhat if you plan to retire at 40, waiting 30 years to start your maximum Social Security benefit? Crucially, it means most of your portfolio only has to last 30 years instead of 60, making 4% a much safer spending rate. If your budget is higher than the benefit you\u0026rsquo;ll get, you need to set aside a \u0026ldquo;mini-portfolio\u0026rdquo; to cover the remaining spending, but that part has 30 years to grow untouched.\nWhere is the 25x spending or \u0026ldquo;4% Rule\u0026rdquo; from? Back in 1994, retirement planners didn\u0026rsquo;t have a consistent answer to the \u0026ldquo;how much do I need\u0026rdquo; question, and a financial planner named William Bengen decided to come up with a definitive answer.\nHe assumed a family would:\nChoose an initial income upon retiring, then increase it for inflation every year.\nInvest half in stock (an S\u0026amp;P 500 index) and half in bonds (10 Year Treasuries).\nTake out spending money and trade back to 50% stock and 50% bonds each year.\nNeed the money to last for 30 years.\nBengen looked at historical investment returns and inflation rates to find the highest initial income that lasted for 30 years even in the worst starting year in his data set. The worst year turned out to be 1966, where low returns and high inflation caused a lot of trouble right at the beginning of retirement, and in that year, choosing a starting income of 4% of the initial portfolio just barely lasted 30 years. He published \u0026lsquo;Determining Withdrawal Rates Using Historical Data\u0026rsquo; with his findings.\nWhile this analysis is simplistic, it\u0026rsquo;s a great starting point for planning and has become widely accepted in the financial planning industry.\nIssues with the 4% Rule You might wonder what the safe retirement spending (often called the SWR, or safe withdrawal rate) should be in different circumstances. For example:\nWhat about retirements longer (or shorter) than 30 years? What if you cut your budget in bad years? What if you don\u0026rsquo;t trade back to 50% stock / 50% bonds each year? What about stock percentages other than 50%? What if you add other investments (international stock, gold, real estate)? These details matter, and they have been studied extensively. Since there are so many ways to handle the details, the more recent results really haven\u0026rsquo;t gotten the same broad acceptance as the original analysis.\nIf you\u0026rsquo;re a long way from retirement, my advice is not to try to get overly precise. Use 4% as a planning number to estimate your retirement needs (and date) and come back for the details when you\u0026rsquo;re getting close to retirement day. For retirements of 50 years or longer, a rate closer to 3.5% is safer, though income later in retirement (see Social Security, above) and flexibility (see below) can make 4% fine even for long retirements.\nIf you want an in-depth analysis, check out Living Off Your Money by Michael McClung. McClung summarizes a lot of different research about how to invest, how much you can spend, and tactics for how to take the money out. It\u0026rsquo;s hard to know how well a strategy really works until it\u0026rsquo;s been around for ten years or so (with returns that the researcher didn\u0026rsquo;t use to design the strategy), so be skeptical of results much higher (or lower) than the norm.\nFlexibility is Key Probably the most unrealistic simplification of the 4% rule is that people would just pick an income on retirement day and then take an inflationary raise every year, completely ignoring the world around them.\nIf you\u0026rsquo;re willing to skip raises, make spending cuts, or delay bigger purchases when returns are bad, research finds that you can use a distinctly higher initial spending rate (5.4% according to Guyton and Klinger).\nOften, if a retirement portfolio fails, it\u0026rsquo;s because returns at the very beginning of retirement are bad (or inflation is high) and the portfolio can\u0026rsquo;t grow enough to fund spending and recover. This means that delaying retirement if a crash happens right before you quit or doing a little consulting work at the beginning of a rough retirement makes a huge difference.\nOverall, if you\u0026rsquo;re flexible and ready to make some changes as your retirement unfolds, it\u0026rsquo;s really not too hard to safely navigate retirement even with a spending rate that seems a little high on paper. That\u0026rsquo;s what people did before Bengen came along in 1994, and it works, too. =)\n","permalink":"https://relentlessoptimizer.com/finance/2021/06/02/how-much-you-need-to-retire/","summary":"So, you\u0026rsquo;ve decided to start saving for retirement. How much money will you need to save up?\nTL;DR: You need about 25 times your retirement spending invested in a 50% stock / 50% bonds portfolio for a 30 year retirement.","title":"How Much You Need to Retire"},{"content":"I recently decided to make a local and second-cloud backup of our digital photos, and decided to see if I could optimize them in the process. I figured our phones would produce decently optimized JPG photos directly, but it turns out that a quick pass with an optimization tool reduced the sizes by half with no difference that I could perceive.\nI researched different tools (TinyPNG.com, TinyJPG.com, ImageMagick, PNGQuant), but it was important to me that the tool wouldn\u0026rsquo;t compress the photos too much, and I have too many photos to review the outputs manually. I finally found jpeg-recompress, which saves at multiple quality levels and runs a \u0026ldquo;human-perceived difference\u0026rdquo; algorithm to measure the perceived loss. It fits the bill perfectly. I couldn\u0026rsquo;t get it to build, and there wasn\u0026rsquo;t a built Windows executable handy, but another repo has published releases (under vendor/win), or get it here (MIT license).\nFor archive quality, run jpeg-recompress with the default settings. You also want to run it in parallel across multiple threads, and it\u0026rsquo;s worth trimming unwanted metadata from your images. In my case, I want GPS locations and Date Taken, but none of the camera details (exposure time, ISO setting, camera model name). Metadata for my images was 60 KB per image. For my 70,000 images, that\u0026rsquo;s 4 GB of data I don\u0026rsquo;t want.\nI wrote a C# script to handle the threading; rather than publishing as an EXE, this makes it easy for others to alter the behavior and see what it\u0026rsquo;s doing. To run it, install dotnet-script, download my photo-optimizer zip, open a command prompt, go to the photo-optimizer folder, and run:\ndotnet-script main.csx \u0026#34;[InputRootPath]\u0026#34; \u0026#34;[OutputRootPath]\u0026#34; How did it do? Overall, my photos were compressed from 212 GB to 114 GB, a 46% reduction. If you have unlimited cloud storage, this may not matter, but if you want to copy from cloud-to-cloud, download a local backup, or otherwise work with your images, it\u0026rsquo;s a nice savings without any clear downside.\nHere are two example images before and after optimization:\nOriginal [1,394 KB] Optimized [804 KB] Original [1,314 KB] Optimized [747 KB] You can download the sample images if you want to compare them offline.\nAnd the code:\n#! \u0026#34;netcoreapp2.0\u0026#34; #r \u0026#34;nuget: CliWrap, 3.3.2\u0026#34; // Copyright Scott Louvau, 2021, MIT License using System.Threading; using CliWrap; const double MB = 1024 * 1024; const double KeepBelowRelativeSize = 0.9; const string jpegRecompress = @\u0026#34;jpeg-recompress.exe\u0026#34;; const string exifTool = @\u0026#34;exiftool.exe\u0026#34;; if (Args.Count == 0) { Console.WriteLine(\u0026#34;Usage: photo-optimize [inputRootFolder] [outputRootFolder?]\u0026#34;); return; } string inRootPath = Path.GetFullPath(Args[0]); string outRootPath = Path.GetFullPath((Args.Count \u0026gt; 1 ? Args[1] : Path.Combine(inRootPath, \u0026#34;../Out\u0026#34;))); Stopwatch w = Stopwatch.StartNew(); Console.WriteLine($\u0026#34;Optimizing JPGs under \u0026#39;{inRootPath}\u0026#39; into \u0026#39;{outRootPath}\u0026#39;...\u0026#34;); string[] inputFiles = Directory.GetFiles(inRootPath, \u0026#34;*.jpg\u0026#34;, SearchOption.AllDirectories); long inBytesTotal = 0; long outBytesTotal = 0; Parallel.ForEach(inputFiles, (inFilePath) =\u0026gt; { string pathWithinRoot = inFilePath.Substring(inRootPath.Length + 1); string outFilePath = Path.Combine(outRootPath, pathWithinRoot); Directory.CreateDirectory(Path.GetDirectoryName(outFilePath)); Cli.Wrap(jpegRecompress).WithArguments(new[] { inFilePath, outFilePath }).ExecuteAsync().Task.Wait(); long inSizeBytes = new FileInfo(inFilePath).Length; long outSizeBytes = new FileInfo(outFilePath).Length; double sizeRatio = (double)outSizeBytes / (double)inSizeBytes; if (sizeRatio \u0026gt; KeepBelowRelativeSize) { File.Copy(inFilePath, outFilePath, true); } outSizeBytes = new FileInfo(outFilePath).Length; Console.WriteLine($\u0026#34;{pathWithinRoot}: {inSizeBytes / MB:n2} MB -\u0026gt; {outSizeBytes / MB:n2} MB ({sizeRatio:p0})\u0026#34;); Interlocked.Add(ref inBytesTotal, inSizeBytes); Interlocked.Add(ref outBytesTotal, outSizeBytes); }); Console.WriteLine(); Console.WriteLine(\u0026#34;Removing metadata...\u0026#34;); Cli.Wrap(exifTool).WithArguments($@\u0026#34;-all= -tagsfromfile @ -gps:all -alldates -Orientation -r \u0026#34;\u0026#34;{outRootPath}\u0026#34;\u0026#34; -overwrite_original\u0026#34;).ExecuteAsync().Task.Wait(); Console.WriteLine(); Console.WriteLine($\u0026#34;Done. Optimized {inputFiles.Length:n0} images ({inBytesTotal / MB:n0} MB -\u0026gt; {outBytesTotal / MB:n0} MB) in {w.Elapsed.TotalSeconds:n0} seconds.\u0026#34;); ","permalink":"https://relentlessoptimizer.com/code/2021/05/28/photo-optimization/","summary":"I recently decided to make a local and second-cloud backup of our digital photos, and decided to see if I could optimize them in the process.","title":"Photo Optimization"},{"content":"You\u0026rsquo;ve made a budget, done some initial saving, and now you finally have some savings to invest for retirement. What should you invest in, and how do you go about that?\nTL;DR? Skip to Taking Action at the bottom.\nInvestment Options There are a lot of options for investing, and they can seem daunting. Here\u0026rsquo;s a quick overview of the major ones and what they really mean.\nWhen you buy stock, you are buying a portion of a company. As that company earns money and grows, they will return some of those earnings to you as dividends. Companies are a core part of how our economy works, and by owning them, you participate in the growth of our economy as a whole.\nWhen you buy bonds, you are loaning money to the federal government (treasury or agency bonds), local government (municipal bonds), or a company (corporate bonds). The entity borrowing your money promises to pay it back along with some interest.\nWhen you buy real estate, you own some of the housing, office, or retail space where people live, work, and shop. You participate in another big part of the economy through the rent you collect from your tenants.\nYou can also buy commodities, like corn, gold, or gasoline.\nYou can trade your dollars for other currencies, like euros or bitcoin.\nFinally, you can buy and sell options, which are usually the right to buy or sell something specific (like gasoline) at a pre-arranged price (like $3.50 per gallon) at a future date (like next July).\nWhich Investments are Best? So, which investment options are the best?\nCritically, stocks, bonds, and real estate generate some income for you while you hold them. Companies return some of their earnings to you as dividends. Bonds pay interest. Real Estate generates rental income. Holding these investments means holding a part of our economy and getting some ongoing benefit as a result.\nIn contrast, when you hold commodities, currencies, or options, there is no automatic income. The only way you make money from them is if you sell them for more than you bought them for. For every buyer, there must be a seller. If you make money from them, someone else had to lose that money. Across the whole market, the overall profit from these investments is zero. In other words, these three categories are a zero sum game.\nWith stocks, bonds, and real estate, there are still buyers and sellers, and with prices going up and down, people can make and lose money trading with each other. However, in addition to that, there\u0026rsquo;s a positive sum game where the people holding these investments are also making a profit from the income they generate. If you buy the investments and hold them for a long time without selling them, any amount you over- or under-paid initially will be a lot less important than the income generated while you\u0026rsquo;re holding it.\nFor this reason, many experts recommend stocks, bonds, and real estate as the primary investments to hold.\nRisk (or Volatility) Ultimately, your goal when investing is to grow your money as much as safely possible over the long term.\nWhy do I say safely? Because investments go up and down in value (they are volatile). Suppose you own a house. You can sell that house, but the price you\u0026rsquo;ll get for the house changes over time. Maybe there\u0026rsquo;s a new housing development or many of your neighbors are selling, so prices drop. Maybe a new company set up in town, so prices rise as new people are trying to move to town.\nMost of the time, the price doesn\u0026rsquo;t matter, because you are not anxious to sell your house or buy another one. Also, you have the same house you did last week, and the mortgage you\u0026rsquo;re paying isn\u0026rsquo;t changing. You\u0026rsquo;re getting the same house for the same money as you did before.\nStocks, bonds, and real estate are like a house. The prices fluctuate, but prices only matter when you want to buy or sell them. If you\u0026rsquo;re saving for retirement, you\u0026rsquo;re buying investments that you won\u0026rsquo;t sell for a very long time, so the long term trend of prices matters, but the week-to-week (or even year-to-year) ups and downs really don\u0026rsquo;t.\nIf you are anxious to sell soon (you\u0026rsquo;re investing for your daughter\u0026rsquo;s college next year), these fluctuations do matter. Don\u0026rsquo;t buy stocks or bonds with this money - choose an investment which doesn\u0026rsquo;t have big daily ups and downs, like a savings account or a CD (certificate of deposit) at a bank.\nHowever, if an investment permanently lost value, like your house burning down, that would be a much bigger problem. Unfortunately, investments can experience losses like this, too. You can buy stock in a company which later goes bankrupt. You can lend money through bonds and then the borrower could default (fail to pay you back). You can buy real estate and it can burn down, or the town it\u0026rsquo;s in can enter a long-term depression.\nSo, how do you deal with this problem? Basically, \u0026ldquo;don\u0026rsquo;t put all of your eggs in one basket\u0026rdquo;. If you own stock in one company, you\u0026rsquo;ll lose everything if that company goes bankrupt. If you own a hundred companies, one may go bankrupt each year, but the others will likely grow enough to make up for it. If you own a hundred houses in different towns (and states), one house burning down or one town going into decline aren\u0026rsquo;t catastrophic. If you own a hundred different bonds, one defaulting is ok.\nMutual Funds and Index Funds Ok, so stocks, bonds, and real estate are good categories to invest in, but you don\u0026rsquo;t want to put all of your eggs in one basket. How do you buy a hundred companies or houses with the money you have to invest? You buy a mutual fund.\nMutual Funds are where investors pool their money together and choose a manager to invest it for them. They allow people with a small amount of money to invest in a lot of different things easily. You can buy a US stock mutual fund which allows you to invest in all of the thousands of US companies with just $50.\nOf course, the people who run mutual funds want to make money. They do this by charging you a percentage of your money to buy and sell the fund (a \u0026ldquo;load\u0026rdquo;) or every year (an \u0026ldquo;expense ratio\u0026rdquo;). This is fine, if it\u0026rsquo;s reasonable, but it\u0026rsquo;s common for some funds to charge drastically more than others.\nIn addition, the person who chooses the investments for the mutual fund could be good or bad at picking investments (or could be winning this year, but losing next year after you\u0026rsquo;ve invested).\nSo, ideally, you\u0026rsquo;d like to find a mutual fund with very low costs and where you get all of the income from holding the investments over time without the risk of losses from bad trading choices. Enter the index fund.\nAn index fund is a specific type of mutual fund. Instead of the manager trying to actively choose winning stocks (and make money at the expense of the other managers and investors out there), an index fund just invests money to follow a particular index. If the index is a basket of all of the businesses in the US, for example, then the fund will just buy a slice of every stock. These funds tend to be very low cost, because you don\u0026rsquo;t need to hire a hotshot stock picker and pay handsomely hoping they\u0026rsquo;ll beat the other hotshots.\nHowever, the index also matters. If the index is 10% each in ten different companies, the fund will have to trade every day as the prices change to keep up with that ratio. Also, maybe those ten companies are all having a rough time in the economy overall.\nFortunately, you can get a broad, capitalization-weighted index and you don\u0026rsquo;t have these problems. These indices hold most or all companies, and weight each company according to the total value of all shares. If a fund is big enough to buy 1% of the stock market, it will be 1% of Apple, 1% of Amazon, 1% of Microsoft, and so on. If the price of Apple doubles and Amazon stays flat, there\u0026rsquo;s no trading to do - it still has1% of Apple and the others. The winners and losers of the economy go up and down, but the index represents everything together.\nThe S\u0026amp;P 500 is one of the oldest US stock capitalization-weighted indices, and the first index fund open to retail investors, the \u0026ldquo;Vanguard 500 Index Fund\u0026rdquo;, has provided better results than the vast majority of mutual funds over decades by just owning a slice of everything. Bonds have similar indices, most notably one called the Barclays Capital Aggregate Bond Index. Since capitalization-weighted indices all have basically the same strategy - buy everything - you can compare the indices to each other to confirm they behave similarly and then choose an index fund based on any of them.\nNote that while stocks and bonds have good capitalization-weighted indices, it\u0026rsquo;s hard to invest in real estate this way and the companies that organize the real-estate funds (\u0026ldquo;REITs\u0026rdquo;) often take any extra return as profit. For this reason, we invest in stock and bond index funds and settle with just our own house as our real estate investment.\nPercentage Stocks and Bonds Ok, great. You know what to invest in, but how much of your money should go to stock versus bonds? Unfortunately the answer is \u0026ldquo;it\u0026rsquo;s complicated\u0026rdquo;. Stock has a higher long term return, but also much more volatility. The decision about how to split your money up is called \u0026lsquo;Asset Allocation\u0026rsquo;, and different people will often choose differently based on how well they handle the day-to-day ups and downs of the market and how many years from now they\u0026rsquo;ll want the money.\nPeople a long time from retirement often want a high percentage of stock (80-90%) to maximize long term growth, and those close to or in retirement want less (40-60%) for less exciting ups and downs. It\u0026rsquo;s really not necessary to have more than 80% stock (returns are barely higher at 100% stock than 80%), and less than 30% stock is a bad idea even in retirement because returns become too low to keep up with spending and inflation over time. See \u0026ldquo;How Much Stock vs Bonds\u0026rdquo; for more detail.\nWe\u0026rsquo;ve just been talking about \u0026ldquo;stock\u0026rdquo; here, but you can buy stock in US companies or companies from other countries. Opinions vary about how to much of your stock should be international. People often think having more stock in your local country is good. After all, the returns are in the currency you want to spend. Others want to own as much of the world as possible, and try to own the \u0026ldquo;capitalization-weighting\u0026rdquo; of every country. In our case, about a quarter of our stock investments are international stock.\nTaking Action To actually buy these funds, set up a mutual fund or brokerage account with a financial company and buy index funds from them. We personally invest through Vanguard and Fidelity, though you can usually buy these funds from a brokerage account with any other company, and BlackRock also offers excellent low cost index funds.\nVanguard Fidelity US Stock Index VTSAX FSKAX, FZROX International Stock Index VTIAX FTIHX, FZILX US Bond Index VBTLX FXNAX Don\u0026rsquo;t Take My Word For It Investing advice is all over, and it can be hard to decide what to believe. Please, don\u0026rsquo;t read just one source (even this one) to decide what to do with your life savings. Here are some other great resources which agree with the principles of investing I\u0026rsquo;ve outlined:\nBogleheads - Investment Philosophy Warren Buffet Investopedia - Index Funds NerdWallet - Index Funds vs Mutual Funds SPIVA - S\u0026amp;P 500 vs Active Mutual Funds Comparison Book: The Millionaire Next Door Book: The Automatic Millionaire Book: The Little Book of Common Sense Investing Summary Whew, that was a lot of territory to cover! In summary, stocks, bonds, and real estate are good investments because they generate income for you. Prices change from day-to-day, but the fluctuations only matter right when you\u0026rsquo;re buying and selling. You can buy stocks and bonds easily and efficiently through index funds. Make sure the index fund has a low expense ratio (0.10% or less), has no \u0026ldquo;loads\u0026rdquo; (no fees to buy and sell), and follows a capitalization-weighted index.\n","permalink":"https://relentlessoptimizer.com/finance/2021/05/26/how-to-invest/","summary":"You\u0026rsquo;ve made a budget, done some initial saving, and now you finally have some savings to invest for retirement. What should you invest in, and how do you go about that?","title":"How to Invest"},{"content":"We retired early (the first time) in 2014 at age 33. Within two years, we were both back at work. After knowing what went wrong, we made adjustments, and I\u0026rsquo;m happy to say that we retired again in 2020 and it\u0026rsquo;s been going much better. Without further ado, here are five things we did wrong (and five we did right) in our first retirement attempt:\nWrong: Had a Financial Advisor review right AFTER retiring You can fully plan retirement yourself, and I highly recommend it. I wanted a second opinion for such a big decision, however, so a asked a (fee-only) financial advisor for one. We found, however, that while advisors are comfortable telling a 60 or even 50 year old how much they need for retirement, many of them become very nervous and extremely conservative talking to someone 40 or younger. The truth is, though, that a 40 year retirement (age 50 to 90) already needs portfolio growth to keep up with inflation and make up for withdrawals, so studies looking at retirement rates suggest only slightly lower \u0026ldquo;safe withdrawal rates\u0026rdquo; for 50 or 60 year retirements. For example, the excellent Early Retirement Now chart estimates 95%+ safety from a withdrawal rate of 4.00% for 30 years, 3.75% for 40 years, and 3.50% for 50 and 60 years from a 75% stock portfolio.\nIf you talk to a financial advisor, do it before rather than after you stop working. If you get very conservative recommendations, ask what they would suggest if you were age 60 with the same portfolio to estimate how much they\u0026rsquo;re adjusting things for your age. In addition, keep in mind that an early retirement can be safer for younger retirees in some ways - social security is more like a \u0026ldquo;bonus\u0026rdquo; midway through retirement than something you\u0026rsquo;re depending on in your default plan, and it\u0026rsquo;s likely easier for you to go back to work if for some reason you need to.\nWrong: Checked our portfolio too often Fresh from the discouraging financial advisor review, I decided my main job was to make sure our portfolio would last. I went from checking our balances about monthly to basically every day, and getting caught up in the ups and downs caused me a lot of extra stress. It was hard to resist the urge to \u0026ldquo;do something\u0026rdquo; when I was transfixed by the daily activity. When I finally went back to checking monthly, I often saw that stock prices went on an adventure mid-month and then ended up about where they started.\nYou don\u0026rsquo;t need to make changes based on day-to-day swings, so check your portfolio as infrequently as you can manage. As a retiree, you\u0026rsquo;ll likely want to rebalance using your withdrawals for spending, so take out enough for several months at a time and don\u0026rsquo;t worry about what\u0026rsquo;s happening in the middle.\nWrong: Didn\u0026rsquo;t know how to fill my time I noticed this after the two issues above, but it\u0026rsquo;s the most important problem with our first retirement attempt. We had taken some leaves of absence before quitting altogether, but my activities during the breaks were really pretty work-related, and without work projects to give me ideas to explore, I became bored. In the years afterward I\u0026rsquo;ve done a better job identifying hobbies I enjoy, and during our last leave I didn\u0026rsquo;t end up doing anything work-like at all. Since quitting in December, I\u0026rsquo;ve been constantly busy and much happier.\nPosters on the bogleheads forum, a fantastic retirement resource, often say \u0026ldquo;retire TO something, not FROM something\u0026rdquo; but I was frustrated at work and hope that it was more pithy phrase than wisdom. If you don\u0026rsquo;t know how you\u0026rsquo;ll fill your time in retirement, don\u0026rsquo;t wait until you quit to find out. It\u0026rsquo;s hard to find the time, but start on a few hobbies or projects and find something that grabs you before you have nothing else to do. You don\u0026rsquo;t have to wait until retirement is imminent to do this, either! =)\nWrong: Cut daycare way back for our young kids When we retired the first time, we had a one- and three-year-old at home, and we cut back from full time daycare to two half days per week, because we were both going to be home all the time. I love my kids and I love spending time with them, but children that young require constant supervision and get bored quickly. Caring for them all day was drastically different than spending a few hours between work and bedtime each day, and I really couldn\u0026rsquo;t spend much time on hobbies or independent activities even if I wanted to. On our second go-around, our kids are now six and eight, which makes a world of difference. They have school each day, they can play much more independently, and I can do a lot of my favorite activities with them (climbing, hiking, and camping) rather than only when my wife is on duty.\nIf you\u0026rsquo;re in the (admittedly exceptionally rare) situation of considering retirement with young kids, I suggest setting aside money to keep up with full time daycare or a solid set of after-school activities for older kids. You\u0026rsquo;ll enjoy spending more time with them, but I think individual time to pursue your own interests is important to a happy retirement, too.\nWrong: Missed things in our budget Don\u0026rsquo;t get me wrong - we had a stable budget we\u0026rsquo;d lived on for years before retiring, so we had a very good idea what our spending would be. However, we didn\u0026rsquo;t look carefully at how we\u0026rsquo;d used our annual bonuses. We saved most of them each year, but we also set aside 10% for each of our \u0026ldquo;fun accounts\u0026rdquo; for individual purchases and sometimes used some bonus money to supplement our next car fund for a car purchase or our vacation fund during a higher travel year. We also didn\u0026rsquo;t set aside increased budget for hobbies, so we felt uncomfortable spending a lot more on them now that we had the free time.\nWhen setting up your retirement budget, live on it for a while, check for any \u0026ldquo;supplementing\u0026rdquo; you\u0026rsquo;re doing to it, and leave some space for extra activities and hobbies. It\u0026rsquo;s no fun to be retired and feel like you shouldn\u0026rsquo;t spend more on playing than you did when you were working and barely had time.\nRight: Did a retirement \u0026ldquo;trial run\u0026rdquo; Before quitting entirely, we were fortunate enough to take several three month unpaid leaves of absence during the summers to get a feel for it. I wouldn\u0026rsquo;t trade back those blocks of free time with my family for anything. They were also great chances to try out our budget with retirement-level free time. That said, a three month break wasn\u0026rsquo;t a perfect simulation - I didn\u0026rsquo;t get out of the \u0026ldquo;honeymoon period\u0026rdquo;, so even though I hadn\u0026rsquo;t figured out hobbies, I didn\u0026rsquo;t quite get to feeling bored.\nStill, before you quit, try to ask about a leave of absence or try to save up vacation days for the longest break you can manage. It\u0026rsquo;s a great chance to get a sense for how retirement will feel with an \u0026ldquo;undo\u0026rdquo; option still available.\nRight: Was comfortable with portfolio ups and downs I realize that this contradicts \u0026ldquo;checked our portfolio too often\u0026rdquo; above, but once I settled back into monthly portfolio checks, I felt fine again. Having checked my portfolio monthly for a long time before quitting work, the monthly variations felt familiar and not out of scale with what I\u0026rsquo;d seen before.\nSo, while I would suggest checking your portfolio infrequently in retirement, before you quit make sure you check your portfolio often enough. The ups and downs feel different when you\u0026rsquo;re not adding any new savings every month, so being used to them before you quit really helps.\nRight: Had a plan for cutting our budget If you have a reasonable withdrawal rate, you likely will see few (if any) years that require you to make spending cuts. However, watching the 2015 flash crash after quitting felt a lot different than declines I lived through while working. The \u0026ldquo;I\u0026rsquo;m buying stock on sale\u0026rdquo; feeling wasn\u0026rsquo;t there to make up for concern about whether this would derail our retirement plans.\nFortunately, I\u0026rsquo;d already written down a plan for spending cuts and a threshold - if our spending was more than 4.5% of our current portfolio, we would cut down to the 4.5% cutoff by reducing giving, our vacation fund, and our next car fund. Having a plan that a calm version of myself had written made me feel a lot better during those first declines. Our portfolio never dropped enough to trigger the 4.5% threshold, and I also felt good that I didn\u0026rsquo;t have to agonize over a plan in real time or stress about whether the cuts would hurt, since I\u0026rsquo;d already thought them through.\nRight: Figured out healthcare before quitting Before we quit, I took the time to research plans on our state ACA (Affordable Care Act) website and found the current costs, so we knew exactly what to sign up for. I also looked into the premium subsidies and had a good idea what our subsidy would be at different potential income levels and where the sudden cutoffs were.\nIn addition to these, for our second retirement we made sure to use work healthcare benefits before leaving (LASIK!).\nRight: Figured out retired taxes before quitting Taxes in retirement deserve several dedicated posts, but let me summarize very briefly. We have money in IRAs, Roth IRAs, taxable brokerage accounts, and (a bit) in bank accounts, and so in retirement we have a lot of control over our taxable income and taxes. Our taxable account dividends are unavoidable but tax-efficient. We can get our remaining spending from cash or old Roth contributions for tax-free income, sell taxable stock for capital gains income, or make Roth conversions from our IRAs (for eventual spending) as regular income.\nWith these choices, you can tune your income to optimize your taxes. In our case, aiming for an income around $102,000 ($62k conversion + $40k dividends) causes a tax bill of under $100 (!) for our family, and is (just) low enough to keep us qualifying for ACA health care subsidies. With the pandemic, 2021 and 2022 have changed our optimal income, but afterward, this is the plan.\nI highly recommend estimating your in-retirement taxes with the free Intuit TaxCaster (I prefer the Android app) to quickly estimate taxes and try different situations, and you might consider using tax optimization software like I-ORP to plan out your Roth conversions if you have a lot of IRA savings.\nI hope this list helps a few aspiring retirees somewhere to avoid some of the pitfalls I unintentionally explored.\n","permalink":"https://relentlessoptimizer.com/finance/2021/05/15/five-mistakes-we-made-during-our-first-early-retirement/","summary":"We retired early (the first time) in 2014 at age 33. Within two years, we were both back at work. After knowing what went wrong, we made adjustments, and I\u0026rsquo;m happy to say that we retired again in 2020 and it\u0026rsquo;s been going much better.","title":"Five mistakes we made during our first Early Retirement"},{"content":"Quest for Glory 1 is one of my favorite role-playing games, and one of the first I played. Sierra walked the line between adventure and puzzle games beautifully in the series, making something that still feels unique. Ultimately, though, what keeps bringing me back is the setting and the story, told with impressive graphics, great music, and witty dialog that still hold up well so many years later.\nI recently came back to play it again. You can find it on GOG, seven megabyte monster that it is. I highly recommend the excellent Gamer Walkthrough for it and a map, which are great for hitting the highlights and solving the more subtle puzzles.\nEven ten playthroughs in, walking out of town into the forest and hearing Hero\u0026rsquo;s March gives me that feeling of nervous excitement and imminent adventure.\nThe beautiful art has permanently established this setting - castles, forest, waterfalls, mountains - as the definitive role playing setting for me. It wasn\u0026rsquo;t until Fallout 3, many years later, that I found a setting outside this stereotype that could evoke a similar level of immersion and wonder in me.\nOh, man, the seedy tavern theme and the Thieves Guild. It really feels like your choice of player class provides a lot of unique gameplay.\nAnd, of course, Erana\u0026rsquo;s Peace. It\u0026rsquo;s profoundly calming to walk into this grove in the middle of the night, running from monsters that are much too powerful for you. I think some of my adulthood hiking and camping adventures are really about trying to find a place like this in the real world. =)\nLike all games, not everything in Quest for Glory is great. Puzzles, as noted earlier, can be quite hard if you haven\u0026rsquo;t talked to the right person. Magic is awkward to use outside combat. You rapidly run out of mana and stamina, so potions are important to avoid death due to overexertion. Combat is frustrating as it\u0026rsquo;s quite hard to see enemy movements in time to dodge. Here\u0026rsquo;s me about to get clocked\u0026hellip;\nStill, I\u0026rsquo;m amazed at how much I enjoy this game so many years later. I think it was released at just the right moment, when VGA graphics, SoundBlaster sound, and mouse interaction made games drastically more playable and immersive than they were just a few years earlier.\nThis isn\u0026rsquo;t a walkthrough, but I can\u0026rsquo;t help but leave a few tips:\nSleep in Erana\u0026rsquo;s Peace - full healing, fruit to eat, and flowers to sell. Play the daggers game with the Chief Thief to quickly earn money. Work in the stables and practice with the Weapon Master to quickly improve your skills. Practice lockpicking safely at the Healer\u0026rsquo;s Hut (even in the daytime!) Battle the Goblins in their camp to finish training combat skills. Keep a few potions handy - running out of stamina can easily lead to death. I took too many screenshots for one post, but you can find the full set here. In DOSBox, use Ctrl+F5 to get perfect native resolution screenshots, and ImageMagick -scale 400% to make pixel-perfect scaled versions. =)\n","permalink":"https://relentlessoptimizer.com/gaming/2021/04/20/quest-for-glory-i/","summary":"Quest for Glory 1 is one of my favorite role-playing games, and one of the first I played. Sierra walked the line between adventure and puzzle games beautifully in the series, making something that still feels unique.","title":"Quest for Glory I"},{"content":"So you\u0026rsquo;ve made a budget and now you\u0026rsquo;re starting to save. What should you do with the money?\nCredit Card debt Emergency Fund (one month of expenses) Other Non-Mortgage Debt (car loan, student loans) Some Retirement Saving (get employer match) Future Big Purchases (house, trip, car, kid college) More Retirement Saving Audacious Goals: House Payoff, Early Retirement, Year off from Work, \u0026hellip; First, if you have any credit card debt, pay it off. Put the credit cards away so you stop using them. Pay with a debit card instead. I know, debit cards don\u0026rsquo;t have rewards and fraud protection. But if you\u0026rsquo;re in debt, stopping the bank from taking your money every month in interest matters much more than the value of credit card rewards and the potential risk of losing some to fraud.\nOnce your credit cards are paid off, the interest you were paying is now free for other saving. If your \u0026ldquo;monthly bills\u0026rdquo; account included minimum credit card payments, that money can go to other goals now. Since \u0026ldquo;monthly bills\u0026rdquo; aren\u0026rsquo;t paid from your day-to-day checking account, the new savings won\u0026rsquo;t disappear into other spending.\nNext, start building up an emergency fund. Even if your month-to-month spending is manageable, surprises and emergencies will happen. Maybe your car breaks down, your roof starts leaking, or you get injured and have medical costs to cover. Your goal is to save up money to handle these kinds of situations without getting back into credit card debt. Having just one month of expenses saved up provides a huge boost to peace of mind, knowing that you can handle a surprise bill or manage if you lose your job without immediate disaster. Make sure to keep your new emergency money in a bank account you can easily access, because the point of the money is to be available instantly when you need it.\nAfter you\u0026rsquo;ve saved one month of expenses, I would suggest shifting most, but not all, of your saving to your next goals. Many people recommend saving six months of expenses in emergency money, but that takes a very long time and money set aside for later goals can often be repurposed as emergency money if needed.\nWith credit card debt gone and an emergency fund, it\u0026rsquo;s time to wipe out your other non-mortgage debt. If you have car loan or student loan, start allocating some of your money to pay those down. Once you pay off your current car, put your car payment money toward other debt, then accumulate it so that you can buy your next car without a loan.\nNow that any debt other than your house is out of the way, it\u0026rsquo;s a good time to start some retirement savings. If your job offers a 401(k), saving money for retirement will reduce your taxes. Many companies also offer to match some of your savings, providing a huge boost. You can also save pre-tax money for retirement in an IRA (individual retirement account) on your own. Try to save enough to maximize any matches, or about 5% of your income even if there aren\u0026rsquo;t any matches available.\nAlong with some initial retirement savings, you can start thinking about future big purchases. If you know you\u0026rsquo;ll want to buy a house, pay for college for kids, take a big trip, buy a fancier car, or make another big purchase in the next few years, start saving for those goals. Retirement saving is important for your future, but the point of saving is to help your present as well. Having some big spending goals you can achieve makes the benefits of saving feel a lot more real.\nIf you\u0026rsquo;ve paid off all of your debt, are making steady progress toward any big purchases, and still have money left, congratulations! It\u0026rsquo;s a great feeling. At this point you can work toward some truly audacious goals like early retirement, paying off your house, saving for a year off from work, and other things that most people aren\u0026rsquo;t able to do. If you ramp up retirement savings, take the time to estimate how much you\u0026rsquo;ll need for retirement. (More on that in a future topic). Retirement savings have no tangible, day-to-day benefit, so calculating how much your extra saving will increase your future lifestyle or allow you to retire sooner is really important to help keep you motivated.\n","permalink":"https://relentlessoptimizer.com/finance/2021/04/13/what-to-save-for/","summary":"So you\u0026rsquo;ve made a budget and now you\u0026rsquo;re starting to save. What should you do with the money?\nCredit Card debt Emergency Fund (one month of expenses) Other Non-Mortgage Debt (car loan, student loans) Some Retirement Saving (get employer match) Future Big Purchases (house, trip, car, kid college) More Retirement Saving Audacious Goals: House Payoff, Early Retirement, Year off from Work, \u0026hellip; First, if you have any credit card debt, pay it off.","title":"What To Save For"},{"content":"I\u0026rsquo;ve been a fan of the Starbucks Vanilla Sweet Cream cold brew since it came out and a lover of cold brew coffee since the days before Seattle\u0026rsquo;s Best Coffee disappeared. I\u0026rsquo;m not willing to buy coffee out every day, so I learned to make cold brew at home and mix reasonable replicas of my Seattle\u0026rsquo;s Best iced mocha and the Vanilla Sweet Cream between coffee outings.\nHome cold brew is great, but it\u0026rsquo;s annoying to make and easy to end up with a sour or bitter batch.\nNot long ago, I learned that Starbucks provides free refills. Buy any drink with the app, then bring the cup back to the counter to get a free refill of drip coffee, tea, or plain cold brew. I can\u0026rsquo;t drink a second cold brew without shaking, but then I realized I could bring it home instead.\nNow I buy coffee out twice a week, and bring home a no-ice plain cold brew refill each time to make my home drinks for the other five days of the week.\nI\u0026rsquo;ve tried basically every grocery store cold brew available, including the Starbucks carafes, cans, and pitcher brew-bags, but I\u0026rsquo;ve never found any at home option as good or consistent as the cold brew from the Starbucks cafes.\nWith the refills, I get the best cold brew I can find, never have to brew at home, and don\u0026rsquo;t pay any more than the two coffee outings I\u0026rsquo;m going to do anyway. I highly recommend it!\nSeattle\u0026rsquo;s Best Coffee Iced Mocha 6 oz cold brew 8 oz milk 1 oz Ghirardelli Chocolate Sauce Starbucks Vanilla Sweet Cream Cold Brew 6 oz cold brew 0.35 oz heavy cream 0.70 oz Starbucks Vanilla Syrup ","permalink":"https://relentlessoptimizer.com/finance/2021/04/12/frugal-tip-starbucks-cold-brew-refills/","summary":"I\u0026rsquo;ve been a fan of the Starbucks Vanilla Sweet Cream cold brew since it came out and a lover of cold brew coffee since the days before Seattle\u0026rsquo;s Best Coffee disappeared.","title":"Frugal Tip: Starbucks Cold Brew Refills"},{"content":"The American Rescue Plan became law on March 11th, 2021, and I was surprised to figure out that it changes the taxable income we want to aim for in 2021 and 2022 significantly.\nBriefly, we\u0026rsquo;re married filing jointly (MFJ), retired, have two kids under 16 at home, get health care from the ACA (Affordable Care Act) exchange, and want to do Roth conversions.\nSince we have IRA, Roth, and taxable investments we can spend from and can choose how much to Roth convert, we have a lot of control over our taxable income.\nIn recent years, it made sense for us to aim for a taxable annual income just over $100,000. We want the full $4,000 benefit from the two child tax credits, which are not fully refundable, which means at least $61,725 in ordinary income ($25,100 standard deduction + $19,750 x 10% + $16,875 x 12% = $4,000 tax). After that, another $44,425 of qualified income (qualified dividends or long term capital gains) are also tax free.\nHowever, our maximum tax free income of $106,150 goes over the income where ACA subsidies disappear, which is $104,800 (400% of the Federal Poverty Level or FPL).\nWith our taxable account interest and dividends, we can Roth convert about $52,000 per year with no tax cost other than a reduced ACA subsidy, which is effectively a 9.83% tax and a good deal to us.\nHowever, after reading an excellent summary of the American Rescue Plan, I found out that things will be a lot different for 2021 and 2022.\nFirst, the child tax credit is fully refundable, so we no longer need a particular minimum income to fully use the child tax credit.\nSecond, the ACA Advance Premium Tax Credit (APTC, or \u0026ldquo;ACA subsidy\u0026rdquo; below) will be larger for 2021 and 2022. There\u0026rsquo;s a \u0026ldquo;premium percentage\u0026rdquo; of your income that ACA expects you to pay for health care, but then the subsidy covers the rest of the cost of your local \u0026ldquo;benchmark plan\u0026rdquo;. These premium percentages are much lower for 2021 and 2022 at a wide range of income levels. Using the 2020 Federal Poverty Levels:\nIncome [% of FPL] Income [Family of 4] 2021-2022 Premium Percentage \u0026lsquo;Normal\u0026rsquo; Premium Percentage \u0026lt; 133% \u0026lt; $34,846 0.00% 2.07% 133% $34,846 0.00% 3.10% 150% $39,300 0.00% 4.14% 200% $52,400 2.00% 6.52% 250% $65,500 4.00% 8.33% 300% $78,600 6.00% 9.83% 350% $91,700 7.25% 9.83% 400% $104,800 8.50% 9.83% \u0026gt; 400% \u0026gt; $104,800 8.50% N/A (no subsidy) Together, these two changes mean that a much lower target income is best, because we aren\u0026rsquo;t losing part of the child tax credit and the ACA subsidy decreases much more quickly as our income increases, acting like a higher marginal tax than normal.\nIn our case, it looks like our income for the next two years should be about $72,000 (275% of FPL), which is the maximum income at which our (bronze plan) ACA premiums are fully reimbursed.\nThis will mean doing a $22,000 smaller Roth conversion. Normally that would only save us $2,162 in ACA subsidies (9.83%), in which case we\u0026rsquo;d rather stick with the bigger Roth conversion. For 2021 and 2022, however, it\u0026rsquo;ll save $2,640 in federal tax (we\u0026rsquo;re not losing any child tax credit) and a stonking $5,600 in ACA subsidies, for a total of $8,240, almost four times the normal benefit.\nIf you receive the child tax credit, buy healthcare from the ACA exchanges, and have control over your taxable income, it\u0026rsquo;s worth looking to see if you should have a different plan for this year and next.\nA few more notes for 2021 and 2022:\nStimulus checks are officially based on 2021 income, but will be sent based on your latest taxes filed when the IRS initially processes the payments. You don\u0026rsquo;t have to pay them back if your 2019 or 2020 taxes triggered a higher payment than your 2021 income would qualify for. You may want to delay filing taxes if your 2019 income was lower than 2020. Watch out for the $150,000 income level (MFJ) because any stimulus payment and the extra child tax credit very rapidly phase out. The ACA APTC is not limited to incomes under 400% of FPL, though your subsidy shrinks as you\u0026rsquo;re expected to pay 8.5% of your income toward the benchmark healthcare plan. There are also dependent care account, COBRA, unemployment assistance, and tuition debt ","permalink":"https://relentlessoptimizer.com/finance/2021/04/12/the-american-rescue-plan-aca-and-roth-conversions/","summary":"The American Rescue Plan became law on March 11th, 2021, and I was surprised to figure out that it changes the taxable income we want to aim for in 2021 and 2022 significantly.","title":"The American Rescue Plan, ACA, and Roth conversions"},{"content":"When we got our first real jobs, we put our paychecks into our checking account and bought everything from there. It couldn\u0026rsquo;t be easier, and I\u0026rsquo;m sure many people do the same thing. The problem was that while we didn\u0026rsquo;t spend more than we had, we also weren\u0026rsquo;t saving up anything. When we wanted to take a vacation, it wasn\u0026rsquo;t clear how we would pay for it. When we had an unexpected expense (a gift for someone, a car repair, or whatever) our account would be knocked down and we\u0026rsquo;d have to cut back for a while to try to refill it. It felt like we were constantly being knocked off track and forced to make cuts.\nThis went on until we decided we wanted to buy a house and realized we needed to save up a down payment. At the time we couldn\u0026rsquo;t imagine saving up so much money. We read some articles about budgeting and tried tracking all of our expenses, but it felt like too much work. What we really wanted was a way to control our spending and do some saving without a lot of effort or a lot of compromises.\nEventually, we settled on the idea of having multiple accounts (doesn\u0026rsquo;t sound simple, does it?) and have stuck with that system ever since. First, we put our paychecks into a transfer account instead of our checking account, so that we could split up the money for different goals. Then, in addition to our checking account for day-to-day use, we opened a new account for our monthly bills, one for irregular spending, and one for each savings goal (next car, house down payment, vacations).\nWe added up our monthly bills and transferred the total to the bills account each month. Now we don\u0026rsquo;t have to worry about the power bill knocking us off track. We added up our \u0026ldquo;day-to-day\u0026rdquo; purchases going back a month or two and transferred that amount to our checking account, so we weren\u0026rsquo;t really cutting back spending overall. We set aside a little big for each goal and put the rest in \u0026ldquo;irregular spending\u0026rdquo;.\nWhile simple, this change really helped. Our monthly bills didn\u0026rsquo;t catch us off guard anymore! We were automatically saving for irregular expenses, so we often could pay for them without transferring money from anywhere else. We could just look at the day-to-day account to decide how much to spend. If we wanted to eat out and the balance looked good, we could go for something fancier. If the balance was low, hot dogs at Costco or stay home. At first we didn\u0026rsquo;t allocate much to our other savings goals, but even a little was much better than nothing. Similarly, when deciding to take a vacation or looking at our next car, we again had one account balance to check to decide what we should spend.\nWhen we got our next raises, we found another benefit - the extra money accumulated in our transfer account instead of disappearing into new spending. We could intentionally allocate it, and we chose to save most of it for goals instead of automatically spending it all day-to-day. When we got our bonuses, we saved them rather than watching them melt in our checking account. When we found cheaper phone plans, the money was saved instead of vanishing elsewhere. This turned out to be the most important thing we did - saving most of our raises each year dramatically increased our savings rate over time.\nSo, that\u0026rsquo;s the process. No tracking every purchase, no spreadsheets, no budget software. Just separate accounts, automatic transfers, and one balance to check for any given spending decision.\nOne bonus trick: Our day-to-day account used to sometimes be a low on grocery day, and it felt bad to scrimp on groceries or gas to stay on budget. We shifted our day-to-day account transfers from bi-monthly (when our paychecks came) to weekly on Fridays. This means Friday night dinner and groceries and gas on Saturday are now always right after \u0026ldquo;payday\u0026rdquo;, and any cutting happens to Amazon purchases and lunches out midweek instead.\n","permalink":"https://relentlessoptimizer.com/finance/2021/03/30/how-we-budget/","summary":"When we got our first real jobs, we put our paychecks into our checking account and bought everything from there. It couldn\u0026rsquo;t be easier, and I\u0026rsquo;m sure many people do the same thing.","title":"How We Budget"},{"content":"Some quick tables about DOSBox that I kept looking for.\nSound Card Defaults Sound - DOSBoxWiki\nSoundBlaster 16 Base Address: 220h IRQ: 7 DMA: 1 HDMA: 5\nDOSBox Commands Commands - DOSBoxWiki\nGoal DOSBox Command Mount Host Folder mount E: Local\\Path Mount Floppy (to boot) imgmount 0 BootDisk.img -t floppy -fs none Mount Floppy (to access) imgmount A: BootDisk.img -t floppy Boot from Floppy boot -L A Mount Drive Image (to boot) imgmount 2 HDD.img -t hdd -size [Geometry] -fs none Mount Drive Image (to access) imgmount D: HDD.img -t hdd -size [Geometry] Boot from Drive boot -L C Unmount mount -u D: DOSBox ImgMount Geometry IMGMOUNT - DOSBoxWiki\nimgmount -size [BytesPerSector], [SectorsPerHead], [Heads], [Cylinders] All hard drives (at least that I found or created) had 512 bytes per sector and 63 sectors per head.\nSize [MB] Geometry [-size XXX] 64 512,63,4,520 128 512,63,8,520 256 512,63,16,520 512 512,63,32,520 1,024 512,63,64,520 2,048 512,63,128,520 96 512,63,4,780 192 512,63,8,780 384 512,63,16,780 768 512,63,32,780 1,536 512,63,64,780 ","permalink":"https://relentlessoptimizer.com/gaming/2021/03/25/dosbox-cheat-sheet/","summary":"Some quick tables about DOSBox that I kept looking for.\nSound Card Defaults Sound - DOSBoxWiki\nSoundBlaster 16 Base Address: 220h IRQ: 7 DMA: 1 HDMA: 5","title":"DOSBox Cheat Sheet"},{"content":"I needed Windows to run SimTower, so I decided to try getting Win95 to run on DOSBox. The walkthroughs online had some skippable steps and I ran into some problems, and then I got distracted optimizing it.. Anyway, here are my terse, working steps for getting very nice Win95 DOSBox images.\nIn addition to a Win95 CD ISO and key, you\u0026rsquo;ll need:\nEmpty FAT-16 HDD images S3 Video Driver DOS 6.22 Boot Disk I\u0026rsquo;ve also packed up all of my DOSBox scripting, if you don\u0026rsquo;t want to copy and paste it from here.\nRecommendations Use Win95C (OSR 2.5) I saw the fewest unhandled exceptions and other problems with the last Win95 release.\nTrim the Win95 install CD You can delete all of the files on the Win95C CD which aren\u0026rsquo;t on the Win95A CD to get the latest Win95 fixes, but without all of the optional software (IE, AOL, \u0026hellip;). This also eliminated a few exceptions during the first boot. My scripting in Step 1 below copies the correct file list.\nMake a Win95 install CD hard drive I couldn\u0026rsquo;t mount the Win95 ISO so a DOS boot disk would see it. The walkthroughs copy the install directory to the target hard drive, but that means the target drive must be larger. Instead, I copied my (trimmed) Win95 setup folder to an empty hard drive image and then mount it along with the DOS Boot Disk and target drive to start setup.\nMount a second hard drive for each game You have to boot from an \u0026ldquo;img\u0026rdquo; file in DOSBox to run Win95, but IMG files take up the whole drive size, not just the used space. I didn\u0026rsquo;t want to installing all of my games in the same Win95 image, which I could break easily, and I didn\u0026rsquo;t want a huge Win95 starting image to install each game. Instead, you can leave the Win95 image small and mount a second empty drive for each game that\u0026rsquo;s the right size to install the game to.\nDOSBox.conf Template This is the DOSBox.conf template I used for each step below. Rather than replacing the [autoexec] steps in the same file, making a separate file for each different kind of boot makes it easy to go back and forth again later.\n# DOSBox configuration file for Win95 on DOSBox [sdl] # output=ddraw seemed to provide the lowest GPU use with the ability to scale the output # windowresolution=1600x1200 (if double the Win95 resolution, scaling this way looks fine) output=ddraw [dosbox] # 64MB is the maximum for normal DOSBox builds. The S3 Trio 64 is the most modern GPU you can emulate, # and can run at 1600x1200 or lower resolutions in high color modes. machine=svga_s3 memsize=63 [render] aspect=true [cpu] # You need to set cputype=pentium_slow or Win95 thinks it\u0026#39;s running on a 486 and won\u0026#39;t install DirectX 8. # cycles=max 80% is very fast but keeps my laptop fan from spinning wildly. core=auto cputype=pentium_slow cycles=max 80% cycleup=1000 cycledown=2000 [midi] mpu401=intelligent mididevice=default [sblaster] sbtype=sb16 sbbase=220 irq=7 dma=1 hdma=5 [autoexec] @ECHO OFF # Drive Geometries - DOSBOX must know the drive geometry to properly install Win95 and boot it # \u0026lt;Drive Geometries\u0026gt; below SET Size96MB=512,63,4,780 SET Size192MB=512,63,8,780 SET Size384MB=512,63,16,780 SET Size768MB=512,63,32,780 SET Size1536MB=512,63,64,780 SET Size64MB=512,63,4,520 SET Size128MB=512,63,8,520 SET Size256MB=512,63,16,520 SET Size512MB=512,63,32,520 SET Size1024MB=512,63,64,520 SET Size2048MB=512,63,128,520 # TODO: You must specify your Win95 and Game drive names and geometries. SET NAME=Win95.img SET SIZE=%Size256MB% Step 1: Make the Win95 Install CD Hard Drive image \u0026lt;DOSBOX.conf template\u0026gt; ... [autoexec] # Copy an empty 64 MB FAT-16 HDD image to \u0026#39;Win95CD.img\u0026#39; # Mount the image copy and a location with a Win95C (OSR 2.5) CD imgmount c Win95CD.img -size 512,63,4,520 -t hdd mount D ..\\Sources # Copy only Win95A setup file names for a small, patched setup. MD C:\\Win95 C: CD Win95 COPY D:\\Win95C\\mini.cab . COPY D:\\Win95C\\precopy*.cab . COPY D:\\Win95C\\win95*.cab . COPY D:\\Win95C\\extract.exe . COPY D:\\Win95C\\oemsetup.exe . COPY D:\\Win95C\\scandisk.exe . COPY D:\\Win95C\\scanprog.exe . COPY D:\\Win95C\\setup.exe . COPY D:\\Win95C\\smartdrv.exe . COPY D:\\Win95C\\wb15off.exe . COPY D:\\Win95C\\xmsmmgr.exe . COPY D:\\Win95C\\*.com . COPY D:\\Win95C\\*.bin . COPY D:\\Win95C\\readme.txt . # Copy Drivers MD C:\\Drivers COPY D:\\Drivers\\*.* C:\\Drivers ECHO. ECHO Done. \u0026#39;Win95CD.img\u0026#39; is now a trimmed Win95 CD image on a hard drive. EXIT Step 2: Run Win95 Setup Copy a 128 MB+ empty FAT-16 HDD image as \u0026lsquo;Win95.img\u0026rsquo; to install the OS to. Get a DOS 6.22 Boot Disk to boot from to start setup. \u0026lt;DOSBox.conf template\u0026gt; ... [autoexec] ... \u0026lt;Drive Geometries\u0026gt; # TODO: Set the right img file name and size here SET NAME=Win95.img SET SIZE=%Size128MB% ECHO. ECHO 2. Boot DOS 6.22 disk and run Win95 setup from HDD ECHO ================================================== ECHO. ECHO. ECHO Inject latest INF into Win95 CD imgmount d ..\\Sources\\Win95CD.img -size %Size64MB% -t hdd mount e ..\\Sources COPY /Y E:\\*.INF D:\\Win95\\ MOUNT -u E: MOUNT -u D: ECHO. ECHO Inject setup command into boot disk imgmount a ..\\Sources\\622c_Scratch.img -t floppy ECHO D:\\Win95\\SETUP.EXE /im /is /IW \u0026gt; A:\\autoexec.bat MOUNT /u A: ECHO. ECHO Mount boot disk, hard drive, and Win95 install HDD imgmount 0 ..\\Sources\\622c_Scratch.img -t floppy -fs none imgmount 2 %NAME% -size %SIZE% -t hdd -fs none imgmount 3 ..\\Sources\\Win95CD.img -size %Size64MB% -t hdd -fs none ECHO. ECHO Boot from boot disk; autoexec.bat will run Windows setup ECHO [D:\\Win95\\setup.exe /im /is /IW] boot -l a During setup, make sure to pick \u0026lsquo;Yes\u0026rsquo; if asked whether to detect hardware and check \u0026lsquo;Sound \u0026hellip;\u0026rsquo; to find the sound devices. Setup is otherwise very straightforward.\n3. First Win95 Boot \u0026lt;DOSBox.conf template\u0026gt; ... [autoexec] ... \u0026lt;Drive Geometries\u0026gt; # TODO: Set the right img file name and size here SET NAME=Win95.img SET SIZE=%Size128MB% # Mount new hard drive imgmount 2 %NAME% -size %SIZE% -t hdd -fs none # Mount source drive (for driver install) imgmount 3 ..\\Sources\\Win95CD.img -size %Size64MB% -t hdd -fs none # Boot from Windows (first boot) boot -l C During First Boot:\nYou\u0026rsquo;ll see one unhandled exception during Control Panel setup Set your Time Zone Cancel Printer setup Clean up desktop icons Install Graphics Driver Right-click Desktop, click Properties In the \u0026lsquo;Settings\u0026rsquo; tab, click \u0026lsquo;Advanced Properties\u0026rsquo; In \u0026lsquo;Adapter\u0026rsquo;, click \u0026lsquo;Change\u0026rsquo; \u0026lsquo;Have Disk\u0026rsquo; -\u0026gt; \u0026lsquo;Browse\u0026rsquo; -\u0026gt; D:\\Drivers -\u0026gt; OK Select \u0026lsquo;S3 Inc. Trio32/64 PCI\u0026rsquo; and click OK Shut Down Reboot again Confirm sound works Uncheck the checkbox for hints on startup Shut Down Make a ZIP of your (tiny!) blank Win95 image! Step 4: Copy a Game Copy an empty FAT-16 HDD image for each game, with enough space to hold the setup files and the installed result. \u0026lt;DOSBOX.conf template\u0026gt; ... [autoexec] ... \u0026lt;Drive Geometries\u0026gt; # TODO: You must specify your Win95 and Game drive names and geometries. SET NAME=Win95.img SET SIZE=%Size256MB% SET GAME=Game.img SET GAMESIZE=%Size64MB% # Mount the (scratch) Boot Disk, Hard Drive, Game Drive, and Host Folder imgmount a ..\\Sources\\622C_Scratch.IMG -t floppy imgmount c %NAME% -size %SIZE% -t hdd imgmount d %GAME% -size %Size64MB% -t hdd mount e . Install the game on D:\\ Note: If the game adds to the registry or C:\\Windows, you\u0026rsquo;ll have to boot the matching Win95.img for it to work later. You can save the Win95.img you installed the game with and go back to the fresh one to see if the game works.\nZIP the Game image (and the Win95.img, if altered) to store the game compactly. Step 4: Play a Game \u0026lt;DOSBOX.conf template\u0026gt; ... [autoexec] @ECHO OFF \u0026lt;Drive Geometries\u0026gt; # TODO: You must specify your Win95 and Game drive names and geometries. SET NAME=Win95.img SET SIZE=%Size256MB% SET GAME=Game.img SET GAMESIZE=%Size64MB% # Mount hard drive and game drive to boot imgmount 2 %NAME% -size %SIZE% -t hdd -fs none imgmount 3 %GAME% -size %GAMESIZE% -t hdd -fs none # Boot from Windows hard drive boot -l C \u0026hellip;and you\u0026rsquo;re done!\nTroubleshooting Win95 is showing a messed up screen on boot or running ScanDisk forever This happens to me when I haven\u0026rsquo;t shut down Win95 properly. You can get your original Win95.img from your ZIP to go back to a working install.\nWindows Setup Error \u0026ldquo;SU 0013\u0026rdquo; This error blocked me in my previous walkthrough. It happens when you mount the hard drive image to write files to rather than to boot to, or you don\u0026rsquo;t specify the hard drive geometry. If you copy the Win95 setup files to the hard drive you\u0026rsquo;ll install to, you need to close DOSBox, and start again mounting the drive \u0026ldquo;boot style\u0026rdquo; before you run setup.exe.\n# Mount \u0026#39;copy files style\u0026#39; imgmount c Win95.img -size %Size256MB% -t hdd # Mount \u0026#39;boot style\u0026#39; imgmount 2 Win95.img -size %Size256MB% -t hdd -fs none Note that to boot, you must mount to an IDE position number instead of drive letter (2 is \u0026lsquo;Primary Master\u0026rsquo;), you must provide the geometry (-size), and you must not let DOSBox try to read the file system (-fs none).\nOpening Control Panel crashes I saw this, but only for the first three or so boots of Win95. I know, weird. Anyway, try another reboot and it may work after that.\nBonus: Automating Win95 Setup You really only need to install Win95 a few times (maybe once on a 256 MB, 512 MB, and 1024 MB hard drive) so you have template to use for various games. As long as you get the installs right and make backups of the images, you\u0026rsquo;re done.\nHowever, in a past life I automated more modern Win95 setups, so I couldn\u0026rsquo;t help but look into how Win95 installs are automated.\nThere\u0026rsquo;s a tool on the Win95C CD in admin\\nettools\\bsetup called batch which will ask you for the answers to most questions setup.exe asks, and then write out a BSETUP.INF file you can use to automate. Pass this as an argument to setup.exe, and you\u0026rsquo;ve got an automated install:\nD:\\Win95\\setup.exe /im /is /IW D:\\Win95\\BSETUP.INF Here is the one I ended up with. I figured out everything except how to get it to look for a sound card, so I wasn\u0026rsquo;t able to leave it fully automated (and, it got stuck on the exception setting up the Control Panel also). [If anyone reading this knows how to do that, I\u0026rsquo;d love to know!]\nSome settings in the INF and what they do (found by changing UI in the batch tool and re-exporting):\nKey Under [SETUP] Purpose Express=1 Unattended [0 = Stop at every screen] InstallDir=\u0026ldquo;C:\\WINDOWS\u0026rdquo; Install Directory EBD=0 Prompt to create (emergency) boot disk ChangeDir=0 ? OptionalComponents=1 Install any Optional Components Network=1 Configure Networking per below section System=0 ? CCP=0 ? CleanBoot=0 ? Display=0 ? PenWinWarning=0 \u0026ldquo;Enable PenWindows warning\u0026rdquo; [?] InstallType=3 Whether install is Disk or CD, upgrade or clean DevicePath=0 \u0026ldquo;Search source folder for devices\u0026rdquo; TimeZone=\u0026ldquo;Pacific\u0026rdquo; Time Zone to set on first boot Uninstall=0 Whether to save uninstall information VRC=0 \u0026ldquo;Auto-answer \u0026lsquo;No to all\u0026rsquo; to version conflict dialogs\u0026rdquo; NoPrompt2Boot=1 \u0026ldquo;Automatically reboot PCI and PnP machines during setup\u0026rdquo; ProductKey=XXX Product Key to pre-fill in UX ProductType=1 OEM version indicator; only needed in separate MSBATCH.INF [Printers]\\r\\n (Separate from [SETUP]) Don\u0026rsquo;t prompt to install a printer ","permalink":"https://relentlessoptimizer.com/gaming/2021/03/25/win95-on-dosbox/","summary":"I needed Windows to run SimTower, so I decided to try getting Win95 to run on DOSBox. The walkthroughs online had some skippable steps and I ran into some problems, and then I got distracted optimizing it.","title":"Win95 on DOSBox"},{"content":"After some (mis)adventures, I finally got my custom domain name directed to my GitHub Pages site successfully. Here is what worked, in case someone else has the same problem.\nI first tried clearing all of my DNS records and adding only the ones I thought I needed. Don\u0026rsquo;t do that. I got a \u0026ldquo;Nameserver is not authoritative\u0026rdquo; error, and didn\u0026rsquo;t know how to get back to the defaults.\nGitHub Pages Configuration To use GitHub Pages, all you have to do is create a public repo and turn on GitHub Pages at the bottom of \u0026lsquo;Settings\u0026rsquo;. However, I highly recommend using the default GitHub Pages repo name (your-user-name.github.io) so that the hosted website is just https://your-user-name.github.io without a trailing folder name. This means that root-relative-urls (/assets/css/styles.css) will work consistently locally, hosted at GitHub, and hosted at CloudFlare Pages.\nYou choose the branch to publish in the GitHub repo Settings page. I\u0026rsquo;m choosing a \u0026lsquo;release\u0026rsquo; branch, so that I can work directly in main and push frequently to back up but not publish half-finished work.\nAlso, don\u0026rsquo;t turn on \u0026lsquo;Enforce HTTPS\u0026rsquo; initially - get your domain working correctly first.\nSee Managing a custom domain for your GitHub Pages site - GitHub Docs for the official documentation. It was good, but didn\u0026rsquo;t fully tell me which DNS records I needed to get things working.\nDNS Record Configuration After my misadventure, Domain.com Support was able to restore the defaults for me.\nAfter that, here are the changes that worked:\nRecord the default types, names, and values, in case you need to replace them. Remove the \u0026lsquo;@\u0026rsquo; and \u0026lsquo;*\u0026rsquo; A records and the \u0026lsquo;_acme-challenge\u0026rsquo; CNAME record. Add \u0026lsquo;@\u0026rsquo; A records for each of the GitHub Pages IP addresses. Add \u0026lsquo;www\u0026rsquo; A records for each of the GitHub Pages IP addresses. Then:\nWait (about two hours, for me). Verify via LeafDNS.com Flush your PC DNS cache (on Windows, \u0026ldquo;ipconfig /flushdns\u0026rdquo;) Verify your domain resolves to your website in the browser. In your GitHub repo Settings, turn on \u0026ldquo;Enforce HTTPS\u0026rdquo; \u0026hellip; and then my site finally worked!\n","permalink":"https://relentlessoptimizer.com/code/2021/03/24/github-pages-and-domain.com-dns/","summary":"After some (mis)adventures, I finally got my custom domain name directed to my GitHub Pages site successfully. Here is what worked, in case someone else has the same problem.","title":"GitHub Pages and Domain.com DNS"},{"content":"A few days after my previous SimTower adventure, I wanted to revise my tower design. My retail-heavy-attempt was straightforward and didn\u0026rsquo;t take too many floors, but I thought it\u0026rsquo;d be fun to try to build consistently all the way up to the 100th floor cathedral, and to try to max out many of the in-game limits right when I reached it.\nDesign My first realization was that I\u0026rsquo;d have to have a narrower tower in order to build all the way up. In my previous attempt, I\u0026rsquo;d only built 18 retail floors and I was nearly at the limit of commercial facilities (512), escalators, and elevators.\nIf I want to build all the way to the 100th floor, I have to keep to one escalator per floor. This means a maximum width of about 19 offices, or 19 x 9 = 171 segments. I want to make all-one-thing floors this time to keep the design more simple, so a width which has an even number of offices, retail shops, fast food, or twin hotel rooms would be nice.\nI settled on a width of 144 segments - 16 offices, 12 retail shops, 9 fast food, or 24 twin suites.\nI\u0026rsquo;ve got 7 lobbies to fill (1, 15, 30, 45, 60, 75, 90). I have 64 escalators, so I can place 9 per lobby (though I think Sims will only accept 7). I\u0026rsquo;ll have to keep to three elevator shafts per lobby, so one express elevator and two normal shafts. This leaves me with three more shafts for service elevators. With a limit of 512 commercial spaces, that\u0026rsquo;s a bit over 73 per lobby. If I use a 144-width-tower, this works nicely as four floors of fast food and three floors of shops, for 72 facilities.\nI want offices throughout this time, but with only two elevator shafts I\u0026rsquo;ll need them to be on escalators to avoid overwhelming my elevators. Since I have to keep my fast food and retail shops within four levels of the lobby, I only have one floor left for offices.\nAnd in the empty floors I can\u0026rsquo;t reach from escalators and in excess of my seven retail floors, I\u0026rsquo;ll put hotel - high income and low traffic.\nEach full 144-width hotel floor has 24 twin rooms. The bottom floor of each batch has two housekeeping, three suites, and 14 twin rooms.\nLet\u0026rsquo;s get to it!\nLobby Layout Here\u0026rsquo;s the basic template for each lobby:\nFloors Facilities Pop $/Qtr [K] 20-25 6x Hotel 274 $1,260 17-19 3x Retail Shop 900 $540 16 Office 96 $160 15 Lobby 11-14 4x Fast Food 1,260 $324 So this is six hotel floors, four fast food, three retail shop, and one office. I kept two office floors above the first lobby, and B1 is parking, so there are only three fast food and two shop floors on the bottom lobby. The 90th floor lobby only has five hotel floors, since F100 is for the cathedral.\nSave - Offices and $60M\nSave - Just Before Cathedral\nTribulations This layout went up relatively smoothly, but it wasn\u0026rsquo;t completely without problems. The elevators must be very carefully placed to get all of the shafts within the 144 width - the service elevators had to be at the outermost edges, and I had to rebuild the local elevators a few segments out from their original placement to fit all six express elevators with enough spacing.\nNext, I eventually needed 10 Recycling Centers, so I had to bump the main lobby out to a width of 150 to fit them across with room for the Metro Station. (Don\u0026rsquo;t forget to put the escalators to the Metro Station in before putting the Recycling Centers back!)\nFinally, my topmost Retail Shop floor, floor 94, couldn\u0026rsquo;t maintain enough traffic. Three floors of retail worked on the other lobbies, and no other facilities had bad reviews on the 90th floor lobby. I decided to replace the shops with restaurants, which didn\u0026rsquo;t have any problems and still kept my weekday population over 15,000.\nResult After a long night of building, I finally got it all done - it\u0026rsquo;s a monster! I\u0026rsquo;m using all 24 elevator shafts, 59 out of 64 escalators, and 477 of the 512 commercial facility limit. The population peaks at 21,643 on the first weekday evening (counting weekend retail traffic and with the hotel rooms filled), and still manages a 15,527 weekday minimum.\n","permalink":"https://relentlessoptimizer.com/gaming/2021/03/17/simtower-max-tower/","summary":"A few days after my previous SimTower adventure, I wanted to revise my tower design. My retail-heavy-attempt was straightforward and didn\u0026rsquo;t take too many floors, but I thought it\u0026rsquo;d be fun to try to build consistently all the way up to the 100th floor cathedral, and to try to max out many of the in-game limits right when I reached it.","title":"SimTower Max Tower"},{"content":"When playing through SimTower again, I was frequently looking for facts from the help and from online walkthroughs. Here\u0026rsquo;s a double-checked, complete set of the details I was looking for when replaying the game, with more useful details together in one place than the original help.\nNote that these details are for the PC 1.0 version of the game. I saw some conflicting information online which I suspect is for SimTower on other platforms.\nFacility Overview Name Stars Cost [K] Width Population Pop/Seg $/Qtr [K] $/Seg Condo 1 $80 16 3 0.19 $0* 0 Office 1 $40 9 6 0.67 $10 1.11 Fast Food 1 $100 16 35* 2.19 $9* 0.56 Hotel, Single 2 $20 4 1 0.25 $6 1.50 Hotel, Twin 2 $50 6 2 0.33 $9 1.50 Hotel, Suite 2 $100 10 2 0.20 $18 1.80 Restaurant 3 $200 24 35* 1.46 $18* 0.75 Retail Shop 3 $100 12 25* 2.08 $15 1.25 Party Hall 3 $100 24 x 2h 50 1.04 $60 1.25 Cinema 3 $500 31 x 2h 120 1.94 $30 0.48 Condos have $150k one-time income when occupied, and no recurring income. Retail Shops settle at 25 (weekday) and 30 (weekend) population. Fast Food settles at 35 (weekday) and 48 (weekend) population. Bonus Fast Food population from offices improves income but doesn\u0026rsquo;t count in the Population count. At normal population, Fast Food income is $3k/day ($9k/qtr) and restaurants make $6k/day ($18k/qtr). Fast Food income is $3k per day with 40-48 customers, or $9k/qtr. If you have enough supporting offices, Fast Food can earn $5k on each weekday, so $13k for the month.\nName Stars Cost [K] Width Cost/Qtr [K] Lobby 1 $5 / seg 1 $0 / $0.3 / $1* Stairs 1 $5 8 $0 Escalator 1 $20 8 $5 Elevator 1 $200 / $80 4 $10 / $10 Service Elevator 2 $100 / $50 4 $10 / $10 Housekeeping 2 $50 15 $10 Security 2 $100 16 $20 Express Elevator 3 $400 / $150 6 $20 / $20 Medical Center 3 $500 26 $0 Parking Ramp 3 $50 16 $10 Parking Space 3 $3 4 $0 Recycling Center 3 $500 25 x 2h $50 Metro Station 4 $1,000 30 x 3h $100 Cathedral 5 $3,000 28 x 4h $0 Lobby maintenance is free for one and two stars, $300 per segment for three stars, and $1,000 per segment for four stars and above.\nStar Rating Requirements Stars Population Other Reqs 2 300 None 3 1,000 Security Office 4 5,000 Hotel Suite, VIP Rating, Recycling, Medical Center 5 10,000 Metro Station 6 15,000* Cathedral To get the six star \u0026ldquo;TOWER\u0026rdquo; rating, you must have over 15,000 population for a weekend midday wedding. Population for retail facilities updates each time they open, so your weekday population must be over 15,000 to get six stars.\nLimits Item Type Limit Elevator Shafts 24 Cars per Shaft 8 Stairs / Escalators 64 total Fast Food / Restaurants / Shops 512 total Parking Spaces 512 total Medical Centers 10 Security 10 Theater / Party Hall 16 total Metro Station 1 Cathedral 1 Q\u0026amp;A How do you build escalators on the office floors? It turns out that you can build escalators on empty floors, so just bulldoze the offices right behind the stairs, then replace the stairs with an escalator, and then rebuild the offices. Sims will take a maximum of four flights of stairs, but seven escalators, so you can build out three levels above and four levels below each lobby with escalators.\nWhen does population update? Population is static for offices and condos. Hotel Population goes up and down as guest check in and out. Population for retail locations updates when they open to reflect the number of \u0026ldquo;natural\u0026rdquo; customers the previous day. For example, if a Fast Food place has 48 customers on the weekend, the tower will count that population from 10am (opening) on the next day (weekday 1) until the opening two days later (weekday 2).\nWhat is the math for fast food population, and how do offices affect them? Fast Food, when newly built, has the following daily traffic: 10, 20, 20, 20, 35, 35, 35, 40, \u0026hellip;. Weekends get 20% extra traffic. Rainy days get about half the normal traffic. Fast Food places normally have 35 weekday customers and 48 weekend customers.\nIf office workers can get to the fast food place, five of the six office workers will visit a Fast Food place within range each weekday. Ideally, this means three offices can boost each Fast Food place to maximum revenue, but the distribution of bonus visitors is uneven, so you are likely to need four offices per fast food. These extra customers boost earnings (slightly), but are not counted again for the tower population, so they don\u0026rsquo;t help you earn a higher star rating.\nHow far away do facilities have to be to avoid noise problems? There must be at least 11 empty segments between the fast food and the office. Hotel rooms require 21 segments from an office. These gaps waste space quickly, so keeping whole floors all one type seems to work better.\nWhich facilities object to noise from one another? Offices object to noise from commercial (fast food, restaurants, retail, cinema). Hotels and Condos object to noise from commercial and offices.\nHow do housekeepers work? Each housekeeping facility has six housekeepers. They will only work on separate floors, so you need multiple housekeeping facilities and a service elevator to get several to clean one floor. Each housekeeper can clean 19 rooms, apparently, but I needed four housekeeping facilities to safely clean my 58 room floors and they didn\u0026rsquo;t finish until after 2:00pm.\nWhat are the best express elevator settings? Each express elevator shaft should only stop at the lobby and a single skylobby, so the cars just go back and forth. Two shafts with all eight cars each can serve each skylobby with the full eight full shopping floors. Configure the express elevators to wait 30 seconds to cause them to fill up more consistently.\n","permalink":"https://relentlessoptimizer.com/gaming/2021/03/13/simtower-reference/","summary":"When playing through SimTower again, I was frequently looking for facts from the help and from online walkthroughs. Here\u0026rsquo;s a double-checked, complete set of the details I was looking for when replaying the game, with more useful details together in one place than the original help.","title":"SimTower Reference"},{"content":"It\u0026rsquo;s 1994, and Maxis is a big name in gaming. The excellent SimCity 2000 released last year, but we\u0026rsquo;re looking at a lesser known title, SimTower. SimTower was not actually developed by Maxis, but instead by Yoot Saito, who was inspired by the 1989 SimCity. The game was released as \u0026ldquo;The Tower\u0026rdquo; in Japan and was relatively successful. Maxis learned about the game and offered to publish it in the US, branded as a \u0026ldquo;Sim\u0026rdquo;-title.\n26 years later, I\u0026rsquo;ve been digging up old games and wanted to really beat SimTower this time. Being from 1994, SimTower is actually a Windows 3.1 title, so you have to install Windows on DosBox to run it. I installed Windows 95 to run it, which took a few hours of attempts and ended up being a nostalgic journey itself. I\u0026rsquo;ve written up the steps that worked for me.\nHere\u0026rsquo;s my first pass at \u0026ldquo;solving\u0026rdquo; SimTower. I was inspired by a very short and simple SimTower walkthrough, though I ended up using a Retail Store / Fast Food mix for higher income with similar population.\nSee my SimTower Reference for some tables I wish I\u0026rsquo;d had before playing SimTower again, cobbled together from a few different websites and corrected.\nQuick \u0026lsquo;TOWER\u0026rsquo; Walkthrough The map is 375 \u0026ldquo;segments\u0026rdquo; wide, but a 360 segment tower is much easier to fill evenly, so build a 360 segment lobby. Put three floors with 40 offices each on top. Add three stairways to serve them: after the 9th, 20th and 31st offices.\nNow, turn up the simulation speed and save up $60M. For maximum speed, close the Map Window, shrink the Main Window, look at the sky, and turn on \u0026ldquo;Fast Mode\u0026rdquo;. My 2020 laptop finished a quarter every 8 seconds like this, so it was only about a ten minute wait. Here\u0026rsquo;s my saved game, in case you want to skip that.\nNext, build an empty B1. Add matching stairs, two security offices on the left, and 10 Fast Food centered around the middle stairs.\nOnce you get three stars, add an empty 5F, B2, and B3. Replace all stairs with escalators, going all the way from B3 to 5F. You can bulldoze the offices to place escalators there, and then rebuild the offices. On B1, add a Medical Center next to the Security Offices. Under B3, add two Recycling Centers.\nNow we\u0026rsquo;ll add \u0026ldquo;shopping floors\u0026rdquo;, which have 15 Fast Food and 10 Retail Shops each. Make F5, B2, and B3 shopping floors. Wait for a quarter and confirm all of your facilities have a blue eval.\nTime for a small hotel. Add an empty F6. Add four elevator shafts, after office 8, 16, 24, and 32, set to wait 30 seconds before departure. On F6, add four Housekeepings, six suites, and 40 twin rooms. The four elevators should serve all of the rooms efficiently.\nTime for a Skylobby. Add empty floors up to F18. Build the lobby on F15. Add two express elevators will all eight cars each, set to wait 30 seconds, after offices 18 and 22. Build seven shopping floors with escalators on F11-F18. Add three more Recycling Centers on B4.\nBuild a second Skylobby on F30, with the same seven shopping floors from F26-F33, and new express elevators after offices 14 and 26. Make sure each pair of express elevators only stops at one of the Skylobbies. Add another three Recycling Centers on B4. Build a Metro Station on B4 near the right side escalator and add another escalator to connect it to the rest of the tower.\nAlmost done! You need one more shopping floor, but can\u0026rsquo;t build any more escalators. Add four elevator shafts around F15, on top of the hotel ones. Add four cars to each and set them to wait 30 seconds. Connect them to F19 and build your last shopping floor there.\nFinally, you can extend the middle two express elevators to floor 90, build a small Skylobby, build up to floor 100, add a Cathedral, build a two car elevator to get people from 90 to 100, and wait for the wedding.\nSave - Offices and $60M\nSave - Just Got TOWER\nRationale Why this design? Offices are a great source of income, and a two-star tower with stairs has zero expenses. After that, you need a lot of population and you need a reasonable income. Fast Food provides the best population-per-space, but the income is barely enough to cover lobby, express elevator, and escalator maintenance. Retail Shops have only slightly less population, but provide more than twice the income. A balance of 15 Fast Food and 10 Shops keeps your income reasonable and allows you to build 20 floors and 10 more Fast Food before hitting the 512 retail facility limit.\nPutting Security, Medical, and Parking on B1 avoids any elevator transportation and allows you to build only one ramp, with more than enough space left for the 10 Fast Food you need to hit 15,000 weekday population.\nYou only need two hotel suites, but I built a full single floor to generate a little more income while keeping the elevators very simple and avoiding a service elevator.\nTower Layout Floors Facilities Pop $/Qtr [K] 31-33 Retail Shop x18, Fast Food x9 2,325 $855 30 Skylobby 26-29 Retail Shop x18, Fast Food x9 3,100 $1,140 19-25 Empty 16-18 Retail Shop x18, Fast Food x9 3,100 $1,140 15 Skylobby 11-14 15x Fast Food, 10x Retail Shop 3,100 $1,140 7-10 Empty 6 4x Housekeeping, 6x Hotel Suite, 40x Twin Room 92 $468 5 15x Fast Food, 10x Retail Shop 775 $285 2-4 40x Office 720 $1,200 Lobby B1 2x Security, Medical, 10x Fast Food, 16x Parking Space, Ramp 350 $90 B2-B3 15x Fast Food, 10x Retail Shop 1,550 $570 B4-B6 8x Recycling Center, Metro Station Total 15,112 $6,888 ","permalink":"https://relentlessoptimizer.com/gaming/2021/03/12/return-to-simtower/","summary":"It\u0026rsquo;s 1994, and Maxis is a big name in gaming. The excellent SimCity 2000 released last year, but we\u0026rsquo;re looking at a lesser known title, SimTower.","title":"Return to SimTower"},{"content":"Hi, I\u0026rsquo;m Scott Louvau. I live near Seattle. I worked at Microsoft, mostly on Visual Studio and Visual Studio Online. I\u0026rsquo;m passionate about performance and I love to optimize things - code, games, finances, coffee - everything. The optimizing of finances worked out well, and now I\u0026rsquo;m off writing fast code, playing old games, and spending a lot more time with my wife and two girls.\nI\u0026rsquo;d love to see a world where more of the code I run is fast and more people achieve financial independence sooner, and hopefully this blog will help with that.\nYou can reach me via scottlo at outlook.com.\nAll code on this blog, unless otherwise marked, is released under the MIT License.\n","permalink":"https://relentlessoptimizer.com/about/","summary":"Hi, I\u0026rsquo;m Scott Louvau. I live near Seattle. I worked at Microsoft, mostly on Visual Studio and Visual Studio Online. I\u0026rsquo;m passionate about performance and I love to optimize things - code, games, finances, coffee - everything.","title":"About"},{"content":"My wife and I retired just before turning 40, and here are the nuts and bolts of how we did it. Retiring by 40 requires a very modest budget or very lucky circumstances (and we had some of both). Still, many people could retire much earlier than normal by budgeting, saving, and investing the way we did, and so we wanted to share our approach.\nHow We Did It So, how exactly did we go about all of this? I\u0026rsquo;ve written a series to go through the basic details.\nHow to Budget and Save What to Save For How We Kept the Same Budget for Eight Years How to Invest How Much Stock vs Bonds Retirement Account Types How Much You Need to Retire How Long It Will Take Getting Retirement Money Out Our Withdrawal Plan Our Story I got my first job in high school and quickly concluded that I wanted to retire as early as possible. I enjoyed my job, but I did not like the idea that my next life phase was decades of having to work to live. My wife and I met in college, and fortunately she was on board with the idea of early retirement.\nWe started tech jobs right out of college in 2002 and signed up to save 30% of our incomes in 401(k)s. Compared to our college lifestyle, the 70% of our income we had left still felt like a lot. The next year we decided to start saving up for a house, and we were shocked at how much money we would need. We realized that we needed to get even more serious about saving.\nWe tried different ways of budgeting and controlling our spending, but they all felt like scrimping and required too much tracking. Finally we found something that worked, and as the months went by our down payment started to pile up. We learned that we didn\u0026rsquo;t need a 20% down payment after all, and with our savings and some bonuses we bought a house in 2004.\nWe first redirected our savings to outfitting our house. Then, when the thirst of Target and Home Depot were finally slaked, we redirected it again, half to paying off our mortgage early and half toward retirement. We were growing at work and getting solid raises and promotions, but our budget kept us from automatically spending the extra money. We ended up keeping the same budget for eight years, directing all of our raises toward savings. In the end, we were saving close to 70% of our after tax income.\nIn late 2009 we paid off our house, and we redirected all of our savings to invest for retirement. It was a scary time to invest, but we believed the stock market would recover, and it did.\nIn 2014, we decided to try early retirement. We both quit work. I wasn\u0026rsquo;t sure how to spend my time, and I found it hard to be home with small kids (then ages 3 and 1), so I ended up back at work after a year. My wife didn\u0026rsquo;t enjoy being home alone and started working again another year later.\nIn 2020, with older kids, more hobbies, and more savings, we found a good moment and decided to retire again. It\u0026rsquo;s early days still for our second early retirement, but so far we\u0026rsquo;re keeping much busier and have been consistently enjoying it.\nAs I said, our very early retirement was the result of some very lucky circumstances - our parents supported us through college, we found high paying jobs we enjoyed, we were both naturally frugal, we started on this journey together very early, and houses were much more affordable when we bought ours. Still, even without those tailwinds, we still would likely have retired much earlier than normal.\n","permalink":"https://relentlessoptimizer.com/retire-early/","summary":"My wife and I retired just before turning 40, and here are the nuts and bolts of how we did it.","title":"How To Retire Early"},{"content":"I love Kingdom Rush, so I built a syntax for transcribing games, an animator to efficiently show a game plan, and an AI Scanner to transcribe my games from video recordings.\nSyntax Guide Labelled Maps Plan Animator AI Game Scanner Current Walkthroughs Full Help GitHub Repo Map Names, Gold, Restrictions Restrictions: \u0026lsquo;u\u0026rsquo; and Upgrade Level; absent if Upgrade Level 5 allowed (everything). \u0026lsquo;H\u0026rsquo; for no heroes. No: \u0026lsquo;R\u0026rsquo;angers, \u0026lsquo;P\u0026rsquo;aladins, \u0026lsquo;S\u0026rsquo;orcerers, \u0026lsquo;T\u0026rsquo;eslas.\nLevel Name Campaign Heroic Iron Restrictions L1 Southport 265 170 265 u1, H, R, S L2 The Outskirts 220 250 220 u2, H, P L3 Pagras 300 310 510 u2, H, T L4 Twin River Pass 520 600 1,200 u2, H, S, T L5 Silveroak Forest 700 1,000 1,500 u3, H, P L6 The Citadel 700 1,200 800 u3, H, R, S, T L7 Coldstep Mines 700 1,000 1,200 u3, H, P, T L8 Icewind Pass 800 1,100 1,200 u4, H, R, S L9 Stormcloud Temple 800 2,000 2,400 u4, H, R, P, T L10 The Wastes 800 1,800 2,200 u4, T L11 Forsaken Valley 1,300 2,100 2,600 R, T L12 The Dark Tower 1,300 1,600 2,800 T L13 Sarelgaz\u0026rsquo;s Lair 800 1,400 1,400 S, T L14 Ruins of Acaroth 600 2,000 1,600 R, P L15 Rotten Forest 800 1,000 800 R, T L16 Hushwood 500 1,250 1,300 R, S L17 Bandit\u0026rsquo;s Lair 800 1,500 1,800 S, T L18 Glacial Heights 600 1,500 1,800 R, S L19 Ha\u0026rsquo;Kraj Plateau 1,000 1,900 2,200 P, S L20 Pit of Fire 1,200 1,900 2,700 S L21 Pandaemonium 900 2,200 3,500 T L22 Fungal Forest 1,000 1,700 3,500 R, T L23 Rotwick 750 1,450 500 P, T L24 Ancient Necropolis 900 1,100 2,700 R, S L25 Nightfang Swale 1,100 1,500 1,500 R, P L26 Castle Blackburn 1,250 1,100 1,620 R, T ","permalink":"https://relentlessoptimizer.com/KR/","summary":"I love Kingdom Rush, so I built a syntax for transcribing games, an animator to efficiently show a game plan, and an AI Scanner to transcribe my games from video recordings.","title":"Kingdom Rush Automation"},{"content":"Kingdom Rush Syntax Kingdom Rush syntax is used to write a plan for how to play a given level, the same way that Chess Algebra is used to document chess games. The syntax has a long form, intended for human use, and a short form for computers (in URLs or stored in JSON, for example).\nIn the long form syntax, a plan consists of a level followed by a series of steps, each on a separate line. Each step is a tower position followed by an action.\nLet\u0026rsquo;s look at an example:\nL5 G7 Arti3 E9 Barr2 # Upgrade provided Arch3 to a Ranger\u0026#39;s Hideout E7 Rang E7 Pois1 # Redirect to blocking and killing the spiders G6 Barr E7 Wrat3 G6 Barr2 # Poison for stronger bandits E7 Pois2 Let\u0026rsquo;s break it down.\nThe first line, L5, indicates that this plan is for level five, Silveroak Forest. See map names and numbers. They are numbered in the same order as they appear in the game and are shown in the Ironhide strategy guide.\nThe next line is empty - empty lines are allowed anywhere. I put an empty line after the \u0026ldquo;initial build\u0026rdquo; (everything before the first Wave) and when there is a significant time gap between steps.\nThe third line, \u0026ldquo;G7 Arti3\u0026rdquo;, means to build a level three artillery tower at position G7. The tower positions don\u0026rsquo;t have any names by default, so I came up with an algorithm to assign \u0026ldquo;chess-square-like\u0026rdquo; names to each of them. They are always one letter (A-H) followed by one number (1-9). Positions use later letters moving from left to right, and higher numbers going from the bottom to the top of the map. See maps for all of the labelled maps.\nHere\u0026rsquo;s L5 with the positions labelled:\nSo, \u0026ldquo;G7 Arti3\u0026rdquo; means to build a level three artillery tower at G7, which is near the top right part of the map.\nWhy \u0026ldquo;Arti3\u0026rdquo;? I\u0026rsquo;ve made every action in the syntax four letters long, because that was short but enough that I could read them clearly. I don\u0026rsquo;t remember the names of all of the towers, so the lower level towers are just a category (\u0026ldquo;Arti\u0026rdquo; for artillery) followed by the upgrade level (three). The top-tier towers are described by the first four letters of their names, like \u0026ldquo;Tesl\u0026rdquo; for the Tesla tower. See tower and upgrade names for the valid actions.\nWhy did I jump straight to a level three Artillery? I could say to build a level one artillery first, but it\u0026rsquo;s shorter just to say the final level to upgrade it to before doing an action somewhere else.\nThe fourth line says we need a level two barracks at E9, blocking the exit. The syntax doesn\u0026rsquo;t tell you where to put the Rally Point for the soldiers, but I haven\u0026rsquo;t found a case where that isn\u0026rsquo;t obvious.\nThese two towers are all we can afford before sending out enemies, so I\u0026rsquo;ve left an empty line after this.\nNext we have a comment \u0026ldquo;# Upgrade provided Arch3 to a Ranger\u0026rsquo;s Hideout\u0026rdquo;. You may put comments on any line after the first to help explain your strategy (to your future self or others).\nAfter that, \u0026ldquo;E7 Rang\u0026rdquo; says to upgrade the provided archer tower to a Ranger\u0026rsquo;s Hideout.\n\u0026ldquo;E7 Pois1\u0026rdquo; says to buy the level one \u0026ldquo;Poison Arrows\u0026rdquo; ability for the tower. This helps take out the more armored bandits coming on the left side. The ability upgrades, like the top-level towers, are all identified by the first four letters of the upgrade name. See below for the full list. Abilities are followed by a number to indicate which level of the ability to unlock.\nThe plan then says to build another Barracks at G6, fully upgrade Wrath of the Forest on the Ranger\u0026rsquo;s Hideout, upgrade the Barracks to level two, and then buy Poison Arrows level 2.\nAt the end of the level, we have something like this:\nSyntax: Towers and Abilities Barracks Archer Mage Artillery Barr Arch Mage Arti Barr2 Arch2 Mage2 Arti2 Barr3 Arch3 Mage3 Arti3 Holy Order\n- Healing Light\n- Shield of Valor [1]\n- Holy Strike Ranger\u0026rsquo;s Hideout\n- Poison Arrows\n- Wrath of the Forest Arcane Wizard\n- Death Ray\n- Teleport BigBertha\n- Dragonbreath \u0026hellip;\n- Cluster Launcher Barbarian Hall\n- More Axes\n- Whirlwind Attack\n- Throwing Axes Musketeer Garrison\n- Sniper Shot\n- Shrapnel Shot Sorcerer Mage\n- Polymorph\n- Summon Tesla x109\n- Super\u0026hellip; Bolt [2]\n- Overcharge The [1] and [2] above denote abilities that only have one or two levels to unlock, rather than three. The Holy Strike ability is \u0026lsquo;HolS\u0026rsquo; to not be confused with the Holy Order tower.\nSyntax: Levels (Maps) Level Name L1 Southport L2 The Outskirts L3 Pagras L4 Twin River Pass L5 Silveroak Forest L6 The Citadel L7 Coldstep Mines L8 Icewind Pass L9 Stormcloud Temple L10 The Wastes L11 Forsaken Valley L12 The Dark Tower L13 Sarelgaz\u0026rsquo;s Lair L14 Ruins of Acaroth L15 Rotten Forest L16 Hushwood L17 Bandit\u0026rsquo;s Lair L18 Glacial Heights L19 Ha\u0026rsquo;Kraj Plateau L20 Pit of Fire L21 Pandaemonium L22 Fungal Forest L23 Rotwick L24 Ancient Necropolis L25 Nightfang Swale L26 Castle Blackburn To see the named tower positions for every level, see Maps. You can click on the map tile to see a high quality version of the labelled map.\nShort Syntax The short syntax is a very compact form of the normal syntax, with some optimizations to further reduce length. You don\u0026rsquo;t need to write the short syntax - the animator will convert long syntax for you. If you want the details, however, keep reading.\nHere\u0026rsquo;s the example from above translated to the short syntax:\nL5:G7t3 E9p2 E7r4 x G6p E7y3 G6p2 E7x2 Just like the long syntax, it\u0026rsquo;s a level and then a sequence of steps. In short form, the level has a colon \u0026lsquo;:\u0026rsquo; right after it.\nThe steps are, again, a position name and an action. The position names don\u0026rsquo;t need shortening, so you see the same \u0026ldquo;G7\u0026rdquo; as in the long form, \u0026ldquo;G7 Arti3\u0026rdquo;.\nIn short form, the actions are also reduced to one letter and one number. The letters are \u0026ldquo;p\u0026rdquo; for Barracks (\u0026ldquo;Paladins\u0026rdquo;), \u0026ldquo;r\u0026rdquo; for Archers (\u0026ldquo;Rangers\u0026rdquo;), \u0026ldquo;s\u0026rdquo; for Mages (\u0026ldquo;Sorcerers\u0026rdquo;), and \u0026ldquo;t\u0026rdquo; for Artillery (\u0026ldquo;Tesla\u0026rdquo;). The numbers are the levels, like before, but levels \u0026ldquo;4\u0026rdquo; and \u0026ldquo;5\u0026rdquo; are the two top level towers (the one on the left and right, respectively, in the Steam release).\nSo, \u0026ldquo;t3\u0026rdquo; is \u0026ldquo;Arti3\u0026rdquo; (Artillery level 3), and \u0026ldquo;r4\u0026rdquo; is \u0026ldquo;Rang\u0026rdquo; (Ranger\u0026rsquo;s Hideout).\nAll abilities are shortened to \u0026ldquo;x\u0026rdquo;, \u0026ldquo;y\u0026rdquo;, or \u0026ldquo;z\u0026rdquo;, matching the left-to-right order in the Steam game UI. So, \u0026ldquo;x\u0026rdquo; means the Poison Arrows when applied to a Ranger tower.\nWhy is the \u0026ldquo;x\u0026rdquo; sitting by itself as the fourth step? Two things. First, if a step applies to the same tower position as the previous step, you can leave it out. Since we just built the Ranger\u0026rsquo;s Hideout on E7, the step to add Poison Arrows can omit it. Second, if the level of a tower or upgrade is one, it can be omitted.\nYou can also omit the level of a tower or upgrade if it\u0026rsquo;s one level higher than the last level. This means that the upgrade to Poison Arrows level two at the end could also just be \u0026ldquo;x\u0026rdquo;.\nI\u0026rsquo;m showing the short syntax here with spaces between the steps for clarity, but they don\u0026rsquo;t need to be there, so the shortest version of the short form is:\nL5:G7t3E9p2E7r4xG6pE7y3G6p2E7x2 You can see the animation for a plan by passing the short form as \u0026ldquo;p\u0026rdquo; in the query string to the Kingdom Rush Animator, like this:\nhttps://relentlessoptimizer.com/KR/animate/?p=L5:G7t3E9p2E7r4xG6pE7y3G6p2E7x2\nConverting to Short Syntax Drag-and-drop a file with a long syntax plan onto the Kingdom Rush Animator. It will translate it to the short form and add it to the URL for you.\nError Checking Plans If you want to write plans manually with error checking, go to the Kingdom Rush AI Scanner, click \u0026ldquo;write yourself\u0026rdquo;, and type the plan into the text area on the right side. The plan will be parsed and validated as-you-type, and errors will be shown at the bottom right. The animation link on the top right will stay up-to-date with what you\u0026rsquo;ve typed.\nIf you try to animate a plan with errors, the animator will tell you the problems in red. It\u0026rsquo;s easier to understand and fix them in the long form, however, so working in the scanner is a lot more pleasant.\nAnimator The Animator is designed to help you visualize and follow a Kingdom Rush plan much more easily than watching a YouTube walkthrough.\nYouTube Walkthroughs are annoying because:\nThere\u0026rsquo;s a lot of action in between the build steps to sit through. It\u0026rsquo;s easy to miss what the last build step was. It\u0026rsquo;s really easy to miss ability upgrades (unless you watch the moment they were unlocked). You don\u0026rsquo;t know the next step until you unpause to watch ahead. The Animator is designed to fix all of these problems. It shows just the build steps, so there\u0026rsquo;s nothing to skip past. It highlights the most recent step with a gold outline so that you can quickly tell what just changed. Ability Upgrades are drawn under each tower at all times, so you can tell what abilities have been unlocked. Finally, the script is shown on the bottom left, so you can see what step the video is showing, what will happen next, and what happened in previous steps.\nLoading a Plan Watch a plan in the animator by dragging and dropping a text file with the long form syntax, or by adding the short syntax to the URL as the \u0026ldquo;p\u0026rdquo; parameter. If you drag and drop a long syntax file, the animator will add the short form equivalent to the URL for you to make it easy to bookmark or share.\nIf the plan has errors, they will be shown in red and the plan won\u0026rsquo;t be animated.\nControlling Playback Plans will play like a video by default, but you can step through them manually to follow along instead.\nPress spacebar to pause or resume playback. Press left and right arrow to show the previous or next step. Press up or down to skip to the beginning or end.\nYou can also tap or click on the image itself to move around. Tap once to see the controls and again to navigate.\nAI Video Transcription You can hand-write the syntax, and it\u0026rsquo;s easy to edit a plan, but transcribing the plan from a play video is annoying.\nInstead, I wrote an AI Scanner which transcribes videos for you. It currently only finds the towers themselves (not ability upgrades), so if you want the ability upgrades, you have to write those in yourself. (Working on it..)\nThe AI Scanner works internally with 1920x1080 frames, so, for best results, play at 1920x1080 resolution. On Windows, you can install the \u0026ldquo;Xbox Game Bar\u0026rdquo; app from the Microsoft Store. Once it\u0026rsquo;s installed and running, you can use \u0026ldquo;Win+Alt+R\u0026rdquo; to record gameplay. Videos are written to the \\Users\\YOU\\Videos\\Captures folder.\nLoading a Video Drag and drop the video to the AI Scanner and it will transcribe it. The video is not uploaded to any server. Video frames are extracted and analyzed directly in the browser.\nOnce the video is analyzed, you\u0026rsquo;ll see a transcription of it on the right side and a link to animate it on the top right.\nDiagnostics While the video is being analyzed, you\u0026rsquo;ll see the frames the AI is analyzing and diagnostics about what the AI recognizes.\nThe AI shows a box around each tower position where something was detected. It shows what it detected on the top left, and how confident it was (as a percentage) on the bottom left.\nHere you can see it\u0026rsquo;s 100% confident of most of the towers, but unsure about the Arch2 under the cursor (likely because the cursor and upgrade button are partially covering it). The AI will only transcribe a step if it is at least 95% confident there\u0026rsquo;s a different tower there.\nAfter the video is analyzed, you can go back and see what the AI Scanner understood about a given frame by clicking on the progress bar at the top. The AI will seek to that part of the playthrough, analyze the frame, and show the diagnostics for it.\nEditing You can hand-edit the plan on the right-side pane if needed, either to fix transcription mistakes or refine the strategy for next play.\nThe plan will be parsed as-you-type. Any errors will be shown on the bottom right, and the animation link at the top right will be kept up-to-date as you type.\nMy Workflow I designed the syntax and built the animator and scanner to help me play Kingdom Rush more effectively. When playing, I usually:\nOpen the labelled map for reference. In the game, plan my before-Wave 1-steps and write them in the long syntax. Restart the level and start recording. Play until I beat or fail the level. Drag-and-drop the video onto the scanner for a transcription. Edit the long form syntax to plan my next attempt. Drag-and-drop the long form plan to the animator and leave at the last frame. Repeat until the strategy seems solid. Walkthroughs I\u0026rsquo;ve saved strategies for most of the levels; go to Maps and click the links on the bottom right to see my current playthroughs for each level and mode.\nVideo Transcoding If you want to keep your gameplay videos (to transcribe again once the AI can read ability upgrades, or to watch your tactics if there\u0026rsquo;s a detail you need to see) I highly recommend transcoding them to reduce their sizes. My playthroughs of long levels at 1920x1080 have been as much as 1.5 GB each in original form.\nI use the widely respected FFMPEG to transcode my videos. I stick with the H.264 video (-c:v libxh264), AAC audio (-c:a aac), and 1080p resolution, but encode at a lower quality (-preset veryfast -crf 24) and downmix the audio to mono (-ac 1), 96 kbps (-b:a 96k). The command is:\nffmpeg -i \u0026#34;%in%\u0026#34; -y -c:a aac -b:a 96k -ac 1 -c:v libx264 -preset veryfast -crf 24 \u0026#34;%out%\u0026#34; This usually reduces the video size to about one eighth of the original size (500 MB to 60 MB), but still keeps enough quality that the videos would look fine on YouTube.\nIf you need to save more space, you can cut down to 720p (-s 1280x720), quality 30 (-crf 30), 64 kbps audio (-b:a 64k), and 10fps (-r 10):\nffmpeg -i \u0026#34;%in%\u0026#34; -y -c:a aac -b:a 64k -ac 1 -c:v libx264 -preset veryfast -crf 30 -r 10 -s 1280x720 \u0026#34;%out%\u0026#34; This shrinks our video by another 4x, from 60 MB to about 15 MB.\nAlso, if you would rather watch your playthroughs at 2x speed, add:\n-filter_complex \u0026#34;[0:v]setpts=0.5*PTS[v];[0:a]atempo=2.0[a]\u0026#34; -map \u0026#34;[v]\u0026#34; -map \u0026#34;[a]\u0026#34; You can also remove audio completely (-an) to save a surprising amount of space if you\u0026rsquo;ve already chosen low quality and low framerate.\nFeedback Welcome! If you have ideas about how to improve the syntax, animator, or AI scanner, please contact me. The code is on GitHub. I plan to extend the AI to identify ability upgrades (but I have to scan far more frames to find them).\nI\u0026rsquo;m especially interested in ways to visualize the build order better. If I could make a single image that shows the final built towers and the order of the steps (or a few steps), I think that would be the ideal guide to follow when playing.\n","permalink":"https://relentlessoptimizer.com/KR/help/","summary":"Kingdom Rush Syntax Kingdom Rush syntax is used to write a plan for how to play a given level, the same way that Chess Algebra is used to document chess games.","title":"Kingdom Rush Help"},{"content":"We wanted to be able to sleep in our Pacifica, and for it to be more comfortable and faster to get to bed and get going than a random motel. We\u0026rsquo;re picky sleepers and need our room to be dark, quiet, cool, and the bed to be right. Most motels don\u0026rsquo;t have all of these things right, so we usually don\u0026rsquo;t sleep especially well.\nWhen we can plug our van in, we\u0026rsquo;re very close - our window shades block light, the built-in noise cancellation and fan cover most sounds, the climate system keeps exactly 64F, and we have the same bed and bedding every night. On our last trip, we were set up and in bed 20 minutes after parking. In the morning, we started driving 25 minutes after waking up.\nOur van has no bathroom or showers, so we have to find them around us or do without. It\u0026rsquo;s a small space for four people, so we have to take turns getting dressed and can\u0026rsquo;t bring much with us.\nMost importantly, we still have to find a place to plug in. When unplugged, if the van is turned on without the brake pressed, the fan runs but the heater and A/C don\u0026rsquo;t. We sleep with the van off and a window cracked and warmer bedding. This loses most of the sound isolation and it isn\u0026rsquo;t much warmer than outside but is more comfortable than a tent. With a down comforter and sleeping bags, we\u0026rsquo;re able to sleep down to lows of about 30F.\nOur next goals are to either get the van to heat itself unplugged or learn how to find overnight plug-in parking without a days-in-advance reservation and at a much-lower-than-motel cost. We also need to work out better ways to store our stuff and get changed easily.\nKid Bed Platforms The kid bed platforms go across the front and second row seats. They are 17\u0026quot; x 48\u0026quot; OSB boards wrapped with 1/2\u0026quot; foam and custom covers and then inserted into rectangular sleeping bags. They are large enough for the kids (for now, ages 5 and 7) and fully fill the space between the seat backs and the next row up or the dashboard, so they don\u0026rsquo;t move around. The van seat bottoms are not flat, so we bought some triangular foam yoga wedges to provide a flat surface underneath them. The one which goes across the front row also has two square foam pads so that it sits on both the seats and center console.\nWe originally set up sleeping bags on top of the platforms, but keeping them wrapped around means we keep all the kid bedding together and don\u0026rsquo;t have to pack and unpack it every night.\nAdult Bed Platform We initially tried sleeping behind the second row seats on our camping pads, but that didn\u0026rsquo;t work. There\u0026rsquo;s not enough length from the trunk lid to the second row seat bases for me (5\u0026rsquo; 10\u0026quot;) to stretch out. The floor slopes downward 8\u0026quot; during that length, which is very hard to flatten out. Finally, there was no room for our stuff unless it was all on top of the bed, which made setup very time consuming.\nWe built a platform from three 18\u0026quot; x 48\u0026quot; metal rack shelves, with the legs cut to the correct lengths to make a flat surface. It sits from on the plastic pegs just inside the trunk lid to just behind the second row seat bases.\nWe used zip ties and a section of pegboard to make a slide out which extends 8\u0026quot; more behind the second row seats. With the pegboard put away, the second row seats can slide back almost as far as normal. With the pegboard forward, our bed extends to a bit behind the second row seats when tilted and slid fully forward, which makes them just long enough for me to stretch out. The kids\u0026rsquo; booster seat bases fill the remaining gap.\nOn top of the shelves, we added a set of interlocking foam squares so we don\u0026rsquo;t feel the shelf bars and edges, and then put a 3\u0026quot; memory foam mattress pad cut to fit (50\u0026quot;w x 54\u0026quot;l) on top. We cut another 50\u0026quot;w x 8\u0026quot;l foam segment to cover the pegboard slide-out. The mattress still \u0026ldquo;bottoms out\u0026rdquo; if I\u0026rsquo;m sleeping on my side, though I\u0026rsquo;m adjusting to it. We may add another 1\u0026quot; of firmer foam to prevent this.\nThe shelf feet started cutting into the floor in the van, so we added rubber feet and then also another set of the interlocking foam cut to fit with strips of melamine on top. This protects the floor of the van and keeps the bed from sinking on one foot or another and becoming uneven after a night or two.\nThe platform is 7.5\u0026quot; above the floor in the back, allowing us to store six 48L plastic bins (23\u0026quot;w x 16.25\u0026quot;l x 6\u0026quot;h) underneath. We pack bins with clothes, food, or cooking supplies, or we can have things which don\u0026rsquo;t fit (camp stove) by themselves.\nOther Features To control light, we made window shades from Reflectix for each of the six side windows and the rear window. We spray painted one side matte black, so the shades are subtle when black side out. We bought a normal folding windshield shade for the front. We also cut a few fake leather strips to cover the charging indicator LEDs and the instrument cluster, which can\u0026rsquo;t be turned off when the van is on.\nFor summer unplugged camping, we bought mosquito screens which fit around the front doors and made screens with a magnetic strip to put over the sliding door windows. We also got a USB powered fan. The van is hotter than outside during the summer, so these help keep temperatures reasonable.\n","permalink":"https://relentlessoptimizer.com/pacifica/camping-build/","summary":"We wanted to be able to sleep in our Pacifica, and for it to be more comfortable and faster to get to bed and get going than a random motel.","title":"Pacifica Camping Build"},{"content":"We wanted to camp overnight in our 2018 Chrysler Pacifica Hybrid. If the van is plugged in or the battery is charged enough, the climate system can run overnight without the engine turning on. Unfortunately, the van turns itself off after 30 minutes if left in Park (or while charging).\nAlso see the Van Build guide for how we set the van up for sleeping, once we figured out how to keep it on.\nWe built a simple device which turns the van off and on again every 28 minutes, so that the climate system stays on all night. Here\u0026rsquo;s a quick video of it working - look at the lights on the Start Button to see the car turn off and back on.\nThe device uses a Raspberry Pi computer to control the timing, and a simple circuit with a transistor and relay which basically just touch two wires from the Start Button together, acting just like when the Start Button is pressed. This design leaves the security of the car intact - a key fob is still required to start it. The program turns the car off and on again every 28 minutes for 12 hours after the Raspberry Pi is turned on.\nThe Raspberry Pi is powered by the USB outlet in the floor, which can be set to always be powered by moving the fuse F95 to the alternate position in the fuse box under the hood.\nThe wire connected to the Start Button in the car just has the wires inserted into the wiring harness plugged into the Start Button and then taped with electrical tape, so that it\u0026rsquo;s fully removeable. On the other end it connects to the circuit with a barrel connector, so that the computer can be fully disconnected from the car when it\u0026rsquo;s not being used overnight.\nYou\u0026rsquo;ll need soldering skills and a soldering iron and to know how to set up a Raspberry Pi computer to build this device.\nTools Description Multimeter Soldering Iron, Solder, Wire Mini HDMI to HDMI Adapter USB Hub, Keyboard, and Mouse Test LED, 330Ω Resistor, Breadboard Parts Description Price Raspberry Pi Zero WH $14 Raspberry Pi Zero Case $5 Mini HDMI to HDMI Adapter $3 8GB Micro SD Card $10 Micro USB Cable 10kΩ Resistor $1 PN2222 Transistor $1 RLY5310C Relay $5 66 x 66 x 28mm ABS Project Box $4 20 PIN DIP IC Protoboard $3 2.1mm Mount Jack $3 2.1mm Plug and Cable $3 Female-Female Breadboard Jumper Wire $4 Instructions Warnings Follow these instructions at your own risk. It\u0026rsquo;s not too hard, but you could certainly break something on your new car. Be careful removing panels and harnesses. Test the wires from the Start Button with a multimeter first - make sure you have the right ones. The colors might not be the same in all cars; it was white (12v) and purple (signal) for ours. Ensure the wires are connected securely on the car side and are insulated so they can\u0026rsquo;t accidentally touch and turn off the car unexpectedly. Disconnect the circuit from the car whenever driving so that it can\u0026rsquo;t turn the car off unexpectedly. We used a 2.1mm DC plug to make the circuit easy to disconnect. Leave a window cracked open when using this, so that if the car does turn off for some reason, you still have ventilation. Test this at home a few times before using it on the road to make sure everything is working reliably. Set up SD Card Set up the SD card with \u0026lsquo;Raspberry Pi Imager\u0026rsquo; on a PC or Mac. Choose \u0026lsquo;Raspberry Pi OS (Other)\u0026rsquo;, then \u0026lsquo;Raspberry Pi OS Lite (32-bit)\u0026rsquo;. Click the gear icon. Check \u0026lsquo;Set hostname\u0026rsquo; (the default is fine). Check \u0026lsquo;Set username and password\u0026rsquo; (username \u0026lsquo;pi\u0026rsquo;, password is up to you). Check \u0026lsquo;Configure wireless LAN\u0026rsquo; and provide your home Wifi network name and password. Check \u0026lsquo;Set locale settings\u0026rsquo; and provide your Time Zone and Keyboard layout. Click Save Click Write. Set up Raspberry Pi Put the SD card in the Pi Zero, connect a monitor and keyboard, and connect power to boot it. Once it settles at a command prompt, run:\nsudo apt update\nsudo apt upgrade\nsudo apt-get install git-core\ncd /home/pi\ngit clone https://github.com/WiringPi/WiringPi\ncd WiringPi\n./build\ncd /home/pi\ngit clone https://github.com/ScottLouvau/PacControl\ncd PacControl/src\nchmod +x build\n./build\nTest PacControl Connect an LED and resistor between pin 18 (program will blink) and pin 20 (ground). (Pin 1 has a square outline. Pin 2 is next to it. Going down the line, it\u0026rsquo;s Pin 4, 6, 8, \u0026hellip;).\nOn the Pi command prompt, run: /home/pi/PacControl/src/pacControl\nYou should see \u0026ldquo;1: +-+-+-\u0026rdquo; as output. The LED should blink three times.\nSet PacControl to run on startup On the Pi command prompt, run: sudo nano /etc/rc.local\nAdd a line just before \u0026ldquo;exit 0\u0026rdquo; which says: /home/pi/PacControl/src/pacControl \u0026raquo; /home/pi/PacControl/src/pacControl.log \u0026amp;\nPress Ctrl+S and Ctrl+X to save.\nDisconnect and reconnect power from the Pi. Confirm that after about 30 seconds, the LED blinks three times.\nCircuit Assembly Solder together the circuit as shown in the circuit diagram. Carefully check that the relay and transistor are connected in the right order.\nOn the transistor, the relay connects to the \u0026lsquo;collector\u0026rsquo;, the resistor to the \u0026lsquo;base\u0026rsquo;, and ground to the \u0026rsquo;emitter\u0026rsquo;. If you hold the transistor with the round side on the left, the pins going from top to bottom are collector, base, emitter. On the relay, pin 3 must connect to 5v on the Raspberry Pi and pin 5 to the transistor collector. Pins 1 and 7 (the outer two) connect to the 2.1mm mount jack (in any order). The relay pins are numbered 1, 3, 5, and 7, with the \u0026rsquo;notch\u0026rsquo; on the chip next to pin 1. Drill a hole into the project box to mount the 2.1mm jack. Try not to heat the jack too much when soldering it. Drill a hole for the breadboard jumper wires and connect to the Raspberry Pi - red to 5V (pin 4), black to ground (pin 6), grey to GPIO24 (pin 18). These are the second, third, and eighth pins on the edge of the Pi from the left side, if the Raspberry icon is upright. Test the complete circuit by connecting the 5v pin to one of the 2.1mm jack contacts and the LED and resistor between the other contact and ground. It should turn on three times as when connected to the Pi directly. Van Cable Installation Remove the plastic panel under the steering wheel. It\u0026rsquo;s held in place by clips; make sure to remove the OBD2 Port, Hood Release, Headlight Switch, and Speaker Harness before fully removing it. Reach up to the back of the Start Button. Unplug the wiring harness from the back of it. Push in the three clips holding the button in place and remove it. Plug the Start Button harness into the start button. Using the multimeter, confirm that the white wire shows 12 volts (compared to metal in the car) and the purple wire shows 0 volts when the start button isn\u0026rsquo;t being pressed and non-zero while it is pressed. Insert the two wires from the 2.1mm plug and cable firmly into the wiring harness with the white and purple wires. Tape the wires in place with electrical tape. It doesn\u0026rsquo;t matter which of the cable wires is connected to white and which to purple. Test that touching the wires together acts just like pressing the start button. Replace the plastic panel. Run the new cable down the right side into the back of the coin drawer in the van. Test the full circuit with the car wiring. Use Keep the Raspberry Pi and circuit in the coin drawer under the climate controls. When parked: Turn off the headlights (so they don\u0026rsquo;t distract others) Buckle the driver seat belt (to avoid all but one chime when the car is turned on) Turn on the car, set climate and radio as desired, and turn off the touchscreen. Place a key fob close to the driver seat (in the coin drawer works well). Connect the 2.1mm plug and USB power cable to the circuit. Go to sleep. =) Troubleshooting Test touching the two wires connected to the Start Button together to ensure the van side is working. Check the LEDs on the Raspberry Pi to ensure it\u0026rsquo;s on and booting. Connect a monitor and keyboard to see that the program is running properly. If the van is not turning on and off consistently, look at the van display to identify possible problems. In our case, the key was too far away (in the trunk area). If no messages are shown, check the wiring and solder connections. Design Notes A relay circuit is needed because the van signal wire voltage goes up when it\u0026rsquo;s connected, so a transistor won\u0026rsquo;t stay \u0026lsquo;on\u0026rsquo;. Alternate electrical components could be used. A 5v relay with minimal current use is needed to allow the Raspberry Pi to turn it on. A transistor is needed because the Pi can\u0026rsquo;t power the relay with the 3.3v, 16mA GPIO pins. We used GPIO24 because it\u0026rsquo;s off by default on boot. ","permalink":"https://relentlessoptimizer.com/pacifica/circuit/","summary":"We wanted to camp overnight in our 2018 Chrysler Pacifica Hybrid. If the van is plugged in or the battery is charged enough, the climate system can run overnight without the engine turning on.","title":"Pacifica Climate Control Circuit"}]